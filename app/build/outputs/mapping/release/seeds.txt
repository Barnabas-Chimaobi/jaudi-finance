androidx.biometric.BiometricFragment$6
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode$Companion
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode
androidx.biometric.R$layout
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodes$1
com.facebook.react.views.textinput.SelectionWatcher
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$$inlined$Iterable$1
com.facebook.react.bridge.ReactContext$2
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink
com.facebook.react.modules.core.ReactChoreographer
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener
com.facebook.react.bridge.NativeModule
com.facebook.react.ReactInstanceManager$ReactContextInitParams
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types
com.google.android.material.timepicker.ClockFaceView
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter
androidx.security.crypto.MasterKey$KeyScheme
com.facebook.react.uimanager.internal.LegacyArchitectureShadowNodeLogger
com.facebook.react.module.annotations.ReactModule
com.facebook.react.modules.blob.BlobModule
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.fabric.events.EventEmitterWrapper$Companion
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.uimanager.style.LinearGradient$WhenMappings
com.facebook.react.devsupport.DevInternalSettings$Listener
com.facebook.react.bridge.JavaMethodWrapper$1
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener
com.facebook.react.viewmanagers.RNGestureHandlerRootViewManagerDelegate
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$1$1
com.nozbe.watermelondb.Connection
com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener
com.google.android.material.internal.NavigationMenuItemView
com.facebook.react.ReactApplication
com.facebook.react.common.annotations.VisibleForTesting
com.facebook.react.uimanager.ViewManagerDelegate
com.facebook.react.ReactPackage
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil
com.facebook.react.bridge.JavaScriptContextHolder
com.swmansion.reanimated.ReanimatedModule
com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.react.PackageList
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.viewmanagers.RNSScreenStackHeaderSubviewManagerDelegate
com.facebook.react.bridge.NativeArgumentsParseException
com.facebook.react.common.MapBuilder$Builder
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.oblador.keychain.PrefsStorage
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream
com.facebook.hermes.intl.LocaleObject
com.facebook.react.modules.network.NetworkInterceptorCreator
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter
androidx.core.widget.NestedScrollView
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.facebook.react.animated.NativeAnimatedNodesManager
com.facebook.react.fabric.SurfaceHandlerBinding
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.uimanager.common.UIManagerType$Companion
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.bridge.ReadableArrayBuilderKt
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1
com.facebook.react.runtime.ReactHostInspectorTarget
androidx.activity.result.ActivityResultRegistry$1
com.oblador.vectoricons.VectorIconsModule
com.facebook.react.views.text.DefaultStyleValuesUtil
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
com.facebook.react.uimanager.style.LogicalEdge$VERTICAL
com.facebook.react.internal.AndroidChoreographerProvider$AndroidChoreographer
com.facebook.react.uimanager.ShadowNodeRegistry$Companion
com.facebook.react.internal.SystraceSection
com.facebook.fbreact.specs.NativeVibrationSpec
io.invertase.firebase.common.ReactNativeFirebaseModule
com.facebook.react.jstasks.LinearCountingRetryPolicy
androidx.media.AudioAttributesCompatParcelizer
com.facebook.react.modules.dialog.AlertFragment$Companion$getAccessibleTitle$1
com.facebook.react.devsupport.interfaces.ErrorType
com.facebook.react.devsupport.PackagerStatusCheck
com.facebook.react.modules.camera.ImageStoreManager
androidx.biometric.CryptoObjectUtils$Api30Impl
androidx.biometric.BiometricPrompt$AuthenticationResult
com.facebook.react.modules.websocket.WebSocketModule$Companion
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager
com.facebook.react.fabric.FabricUIManager
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1
com.facebook.react.uimanager.annotations.ReactPropGroup
com.facebook.react.common.mapbuffer.MapBuffer$DataType
com.facebook.react.ReactInstanceManager$2
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint
com.facebook.imagepipeline.nativecode.NativeBlurFilter
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.yoga.annotations.DoNotStrip
com.facebook.react.uimanager.ReactClippingProhibitedView
com.facebook.react.modules.core.JSTimers
com.facebook.react.views.image.ImageLoadEvent$Companion
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.common.ShakeDetector
com.facebook.react.views.view.ReactDrawableHelper
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era
com.facebook.react.views.text.internal.span.ReactSpan
com.facebook.react.modules.core.DeviceEventManagerModule
com.swmansion.reanimated.NodesManager
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.modules.debug.interfaces.DeveloperSettings
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation
com.swmansion.reanimated.NativeReanimatedModuleSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion
com.facebook.react.modules.debug.DevSettingsModule$Companion
com.facebook.react.views.text.PreparedLayoutTextView$Companion
com.facebook.react.views.progressbar.ProgressBarContainerView
com.facebook.react.bridge.JSBundleLoader$Companion
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$Companion
com.facebook.react.devsupport.DebugOverlayController$Companion
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation
androidx.security.crypto.EncryptedSharedPreferences$1
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback
com.facebook.react.reactperflogger.NativeModulePerfLogger
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.lifecycle.ProcessLifecycleOwner$attach$1
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.modules.devtoolsruntimesettings.Settings
com.facebook.react.bridge.DynamicFromMap$Companion
com.facebook.yoga.YogaNative
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.runtime.ReactLifecycleStateManager$WhenMappings
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.facebook.react.views.image.ReactImageManager
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsProvider
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider
androidx.security.crypto.EncryptedFile
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate
com.facebook.react.views.text.internal.span.SetSpanOperation$Companion
com.swmansion.reanimated.layoutReanimation.ScreensHelper
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation$Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role
com.facebook.react.views.scroll.ScrollEvent$Companion
com.facebook.react.modules.network.CookieJarContainer
com.facebook.react.modules.dialog.DialogModule$Companion
com.facebook.react.ReactPackageTurboModuleManagerDelegate$ModuleProvider
com.facebook.react.modules.fresco.ImageCacheControl
com.facebook.react.views.text.internal.span.ReactBackgroundColorSpan
com.facebook.react.viewmanagers.RNSSearchBarManagerDelegate
android.support.v4.media.session.MediaSessionCompat$Token
com.facebook.react.runtime.JSRuntimeFactory
com.facebook.react.packagerconnection.ReconnectingWebSocket$Companion
com.facebook.react.uimanager.events.EventDispatcherImpl$1
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.facebook.react.views.textinput.ReactTextInputFocusEvent
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.react.fabric.FabricUIManager$3
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation
com.facebook.react.uimanager.ReactStage$Companion
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback
com.facebook.crypto.cipher.NativeGCMCipher
com.facebook.react.uimanager.style.BoxShadow
com.oblador.keychain.KeychainModule$Maps
com.facebook.react.R$style
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener
com.facebook.react.views.text.ReactTypefaceUtils
com.facebook.react.uimanager.UIConstantsProviderBinding$DefaultEventTypesProvider
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$Companion
com.facebook.react.uimanager.YogaNodePool
com.facebook.react.views.textinput.ReactTextInputManager$Companion
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation
com.facebook.react.runtime.JSCInstance$Companion
com.facebook.react.modules.core.JavaScriptTimerExecutor
androidx.biometric.R$anim
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.views.swiperefresh.RefreshEvent
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.react.bridge.DynamicNative
com.facebook.react.defaults.DefaultReactNativeHost
com.facebook.react.runtime.internal.bolts.ExecutorException
androidx.biometric.CancellationSignalProvider$Injector
com.google.firebase.components.ComponentDiscoveryService
com.facebook.react.uimanager.ShadowNodeRegistry$SingleThreadAsserter
com.facebook.react.fabric.mounting.SurfaceMountingManager$2
com.facebook.react.devsupport.ReleaseDevSupportManager
com.facebook.react.devsupport.InspectorFlags
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver
androidx.biometric.BiometricFragment$Api29Impl
com.google.android.material.chip.Chip
com.facebook.react.views.image.ScaleTypeStartInside
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar
com.swmansion.worklets.AndroidUIScheduler
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase
com.facebook.react.runtime.ReactSurfaceImpl$Companion
com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate
com.facebook.fbreact.specs.NativeClipboardSpec
com.google.firebase.datatransport.TransportRegistrar
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.facebook.react.bridge.CatalystInstance
com.facebook.react.packagerconnection.PackagerConnectionSettings$Companion
com.facebook.react.ReactFragment
com.facebook.react.uimanager.events.PointerEvent$PointerEventState
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.facebook.react.modules.core.JavaTimerManager
com.facebook.react.animated.NativeAnimatedModule$Companion
androidx.security.crypto.MasterKey$Builder
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.react.uimanager.style.BorderRadiusStyle$WhenMappings
com.facebook.react.common.DebugServerException$Companion
com.oblador.vectoricons.BuildConfig
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1
com.facebook.react.views.text.internal.span.SetSpanOperation
com.facebook.react.modules.blob.BlobModule$webSocketContentHandler$1
com.facebook.react.viewmanagers.RNSScreenFooterManagerDelegate
com.facebook.react.animated.DivisionAnimatedNode
androidx.biometric.BiometricViewModel$CallbackListener
com.facebook.react.bridge.DynamicFromMap$Companion$pool$1
com.nozbe.watermelondb.DatabaseUtils
com.facebook.react.views.text.ReactTextUpdate
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle
androidx.biometric.BiometricFragment$2
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.react.uimanager.events.PointerEventHelper$WhenMappings
com.facebook.react.runtime.internal.bolts.Task
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
com.facebook.react.ReactNativeHost
androidx.biometric.BiometricFragment$4
com.facebook.react.uimanager.style.LogicalEdge
com.facebook.react.animated.SubtractionAnimatedNode
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes
androidx.biometric.KeyguardUtils$Api23Impl
com.facebook.react.uimanager.annotations.ReactProp$Companion
com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder
com.swmansion.rnscreens.ScreenStackViewManager
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter
com.facebook.react.devsupport.HMRClient
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup
com.facebook.react.views.text.TextAttributes
com.facebook.react.uimanager.events.EventEmitterImpl$Companion
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.hermes.intl.UnicodeExtensionKeys$2
com.facebook.react.jstasks.HeadlessJsTaskEventListener
com.facebook.react.modules.core.ReactChoreographer$Companion
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate
com.facebook.react.bridge.NativeMap$Companion
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger$WhenMappings
androidx.biometric.DeviceUtils
com.facebook.react.devsupport.inspector.InspectorNetworkHelper
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.hermes.intl.JSRangeErrorException
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.react.modules.network.ForwardingCookieHandler$Companion
com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent
com.mkuczera.RNReactNativeHapticFeedbackModule
com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion
com.facebook.react.modules.permissions.PermissionsModule$requestPermission$1
androidx.transition.FragmentTransitionSupport
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion
com.nozbe.watermelondb.SchemaNeededError
com.facebook.react.uimanager.style.LogicalEdge$END
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation
com.facebook.react.defaults.DefaultReactActivityDelegate
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent$Companion
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.react.internal.ChoreographerProvider$Choreographer
androidx.media.AudioAttributesImplBase
com.facebook.react.common.mapbuffer.WritableMapBuffer
com.facebook.react.runtime.BridgelessReactContext$BridgelessJSModuleInvocationHandler
androidx.security.crypto.EncryptedFile$Builder
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_END
com.facebook.react.uimanager.ViewManagerWithGeneratedInterface
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.common.internal.DoNotStrip
com.facebook.react.uimanager.ReactShadowNodeImpl
com.facebook.react.uimanager.style.BorderStyle$Companion
com.facebook.react.animated.ObjectAnimatedNode$WhenMappings
com.facebook.react.modules.toast.ToastModule$Companion
com.swmansion.reanimated.NodesManager$4
com.swmansion.reanimated.layoutReanimation.AnimationsManager
com.facebook.react.animated.AnimatedNodeValueListener
com.facebook.react.views.switchview.ReactSwitchManager$Companion
com.facebook.react.modules.network.HeaderUtil
com.facebook.react.BuildConfig
com.facebook.react.fabric.DevToolsReactPerfLogger$Companion
com.facebook.react.modules.network.ProgressiveStringDecoder$Companion
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper
com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager
androidx.biometric.CryptoObjectUtils
com.facebook.react.modules.debug.DevMenuModule$Companion
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.views.text.ReactFontManager
com.facebook.react.util.AndroidVersion
com.facebook.react.uimanager.ReactStage
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour
com.facebook.react.devsupport.WindowOverlayCompat
com.swmansion.reanimated.BorderRadiiDrawableUtils
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar
com.facebook.react.uimanager.UIViewOperationQueue$UIOperation
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager$Companion
com.facebook.react.modules.network.CustomClientBuilder
com.facebook.react.views.text.TextTransform$Companion
com.swmansion.reanimated.NodesManager$3
com.facebook.react.runtime.JSTimerExecutor$Companion
com.facebook.react.packagerconnection.RequestHandler
androidx.biometric.FingerprintDialogFragment$Api21Impl
com.facebook.react.views.textinput.ReactTextInputSelectionEvent$Companion
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1
com.facebook.react.views.textinput.ReactTextInputTextWatcher
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate$Companion
com.swmansion.reanimated.NodesManager$NativeUpdateOperation
com.facebook.react.uimanager.FloatUtil
androidx.security.crypto.EncryptedSharedPreferences$Editor
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.swmansion.reanimated.NativeMethodsHelper
com.facebook.react.common.assets.ReactFontManager$Companion
com.facebook.react.uimanager.NativeKind
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2
androidx.media.AudioAttributesCompat
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.react.animated.AnimationDriver
com.facebook.react.R
com.facebook.react.uimanager.events.PointerEvent$1
androidx.lifecycle.SavedStateHandleController
com.oblador.vectoricons.VectorIconsModule$Errors
com.facebook.jni.MapIteratorHelper
com.facebook.react.modules.blob.BlobProvider$Companion
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeOffset$1
com.facebook.react.bridge.BaseJavaModule
com.google.android.material.internal.CheckableImageButton
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl$1
com.facebook.react.views.drawer.events.DrawerClosedEvent
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback
com.facebook.yoga.YogaValue
com.facebook.react.modules.permissions.PermissionsModule$Companion
com.facebook.react.uimanager.style.ComputedBorderRadius
com.facebook.react.common.SurfaceDelegate
com.facebook.react.animated.SpringAnimation
com.google.android.gms.common.internal.ReflectedParcelable
com.facebook.react.bridge.ReactMethod
com.facebook.react.R$layout
com.facebook.react.common.annotations.internal.LegacyArchitecture
com.facebook.hermes.intl.OptionHelpers$OptionType
com.facebook.react.devsupport.CxxInspectorPackagerConnection$IWebSocket
com.facebook.react.packagerconnection.PackagerConnectionSettings
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$NeedsMigration
com.facebook.react.uimanager.PointerEvents
com.facebook.react.devsupport.PackagerStatusCheck$Companion
com.facebook.react.uimanager.UIManagerModuleConstantsHelper
com.oblador.keychain.KeychainModule$KnownCiphers
com.facebook.react.bridge.interop.InteropModuleRegistry$Companion
com.facebook.hermes.intl.PlatformNumberFormatterAndroid$1
com.facebook.react.touch.ReactInterceptingViewGroup
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper
com.nozbe.watermelondb.WMDatabaseDriver
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl
com.facebook.react.common.ReleaseLevel
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.modules.systeminfo.ReactNativeVersion
androidx.lifecycle.ReportFragment$LifecycleCallbacks
com.facebook.react.views.text.TextTransformKt
com.facebook.react.views.text.ReactRawTextManager
com.facebook.hermes.intl.ILocaleObject
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.facebook.react.uimanager.style.RadialGradient$Companion
com.swmansion.reanimated.sensor.ReanimatedSensorType
com.facebook.react.views.image.ImageResizeMode
kotlin.jvm.internal.DefaultConstructorMarker
com.facebook.react.modules.share.ShareModule
com.facebook.react.views.text.FontMetricsUtil
com.facebook.react.packagerconnection.Responder
androidx.biometric.BiometricViewModel
androidx.appcompat.widget.Toolbar
com.facebook.react.uimanager.ViewManagerResolver
com.facebook.react.views.drawer.events.DrawerSlideEvent
com.google.android.gms.common.api.internal.BasePendingResult
com.facebook.react.views.text.ReactTextViewManager
com.facebook.react.bridge.ReactNativeJniCommonSoLoader
com.facebook.react.viewmanagers.ModalHostViewManagerDelegate
com.facebook.react.uimanager.LengthPercentage$Companion$WhenMappings
com.facebook.react.views.text.ReactTextView
com.facebook.react.uimanager.JSTouchDispatcher
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.react.interfaces.TaskInterface
com.facebook.react.views.modal.ReactModalHostManager$Companion
com.facebook.react.runtime.BridgelessReactStateTracker$Companion
com.facebook.react.common.mapbuffer.MapBuffer$Entry
com.facebook.react.BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1
com.facebook.react.uimanager.events.Event
com.facebook.react.viewmanagers.RNCSafeAreaViewManagerDelegate
com.facebook.react.uimanager.events.EventDispatcherListener
androidx.biometric.BiometricFragment$1
com.facebook.react.views.view.ViewGroupClickEvent$Companion
com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener
com.facebook.hermes.intl.JSObjects$UndefinedObject
com.rnbiometrics.R
com.nozbe.watermelondb.WatermelonDBPackage
com.facebook.react.uimanager.ReactRoot
com.facebook.hermes.intl.PlatformNumberFormatterAndroid
com.facebook.react.views.text.TextTransform
com.facebook.react.util.RNLog
com.oblador.keychain.KeychainPackage
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher
com.facebook.react.uimanager.style.BackgroundImageLayer$Companion
com.facebook.react.shell.MainReactPackage
com.facebook.react.runtime.ReactHostImpl
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback
com.facebook.hermes.intl.LanguageTagsGenerated
androidx.biometric.BiometricManager$Injector
com.facebook.react.ReactPackageLogger
com.google.firebase.messaging.FirebaseMessagingService
com.facebook.react.views.drawer.events.DrawerOpenedEvent
com.facebook.react.devsupport.interfaces.StackFrame
com.facebook.hermes.intl.DateTimeFormat
com.facebook.react.viewmanagers.UnimplementedNativeViewManagerInterface
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1
com.facebook.react.uimanager.PixelUtil
com.facebook.react.views.drawer.ReactDrawerLayout
com.facebook.react.uimanager.util.ReactFindViewUtil
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter
com.facebook.react.views.text.internal.span.ShadowStyleSpan
com.facebook.react.runtime.ReactHostImpl$CreationResult
com.nozbe.watermelondb.MigrationNeededError
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter
com.facebook.react.animated.ValueAnimatedNode
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface
com.facebook.react.modules.debug.SourceCodeModule$Companion
com.google.android.gms.common.ErrorDialogFragment
com.facebook.react.bridge.DynamicNative$Companion
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerDelegate
com.facebook.react.devsupport.PerftestDevSupportManager$devSettings$1
com.facebook.hermes.intl.OptionHelpers
com.facebook.react.modules.network.OkHttpCompat
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation
com.facebook.react.util.RCTLog
com.facebook.react.runtime.ReactSurfaceImpl
com.facebook.react.uimanager.UIManagerModule$3
androidx.emoji2.text.EmojiCompatInitializer
com.facebook.react.viewmanagers.RNSScreenContainerManagerInterface
com.facebook.react.views.image.MultiPostprocessor
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.views.scroll.VelocityHelper
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation
com.facebook.hermes.intl.UnicodeExtensionKeys$3
androidx.biometric.CancellationSignalProvider
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.views.scroll.FpsListener
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1
androidx.biometric.FingerprintDialogFragment$3
com.facebook.react.common.LifecycleState
com.facebook.react.util.JSStackTrace
com.facebook.react.devsupport.DevSupportManagerBase$reload$1
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.views.text.ReactBaseTextShadowNode
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager
com.facebook.react.LazyReactPackage$1
com.facebook.react.views.drawer.ReactDrawerLayout$Companion
com.nozbe.watermelondb.BuildConfig
com.google.android.material.internal.NavigationMenuView
com.swmansion.reanimated.layoutReanimation.Snapshot
com.facebook.react.uimanager.style.RadialGradient$GradientSize
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig
com.facebook.react.animated.NativeAnimatedModule$flattenAnimatedNodeOffset$1
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener
com.facebook.react.devsupport.RedBoxContentView
com.facebook.react.common.ClassFinder
com.facebook.react.uimanager.style.BoxShadow$Companion
com.facebook.react.views.textinput.ReactTextChangedEvent
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay
com.android.installreferrer.api.InstallReferrerClient
com.facebook.react.bridge.WritableMap
com.facebook.react.ReactActivityDelegate
com.facebook.react.BaseReactPackage
com.facebook.hermes.intl.JSObjects$NullObject
com.reactnativecommunity.asyncstorage.BuildConfig
com.facebook.react.uimanager.style.BorderColors
com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder
com.facebook.react.util.ExceptionDataHelper
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation$Companion
com.facebook.react.bridge.JavaOnlyArray$Companion$WhenMappings
com.facebook.react.views.switchview.ReactSwitch
com.facebook.react.runtime.ReactHostImplDevHelper
com.facebook.react.uimanager.style.ProcessedColorStop
com.facebook.react.interfaces.fabric.ReactSurface
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle
com.facebook.react.animated.NativeAnimatedModule$removeAnimatedEventFromView$1
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion
com.facebook.react.animated.ModulusAnimatedNode
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.views.progressbar.ProgressBarContainerView$Companion
com.facebook.react.uimanager.ReactClippingViewGroup
com.facebook.react.views.textinput.ReactEditText$Companion
com.facebook.react.common.build.ReactBuildConfig
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$2
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
com.oblador.keychain.R
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.uimanager.NoSuchNativeViewException$Companion
com.facebook.react.animated.ColorAnimatedNode$Companion
com.facebook.react.devsupport.RedBoxContentView$reportCompletedListener$1
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation
com.facebook.react.uimanager.IViewGroupManager
com.facebook.jni.IteratorHelper
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion
com.facebook.react.devsupport.DevServerHelper$openInspectorConnection$1
com.facebook.react.uimanager.ReactCompoundViewGroup
com.facebook.react.bridge.DynamicFromArray$Companion
com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener
com.facebook.react.devsupport.interfaces.DevOptionHandler
androidx.biometric.R$string
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor
com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate
com.facebook.hermes.intl.PlatformCollatorAndroid
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion
com.facebook.react.uimanager.style.ComputedBorderRadius$WhenMappings
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1
com.facebook.react.uimanager.events.TouchEvent
com.facebook.react.fabric.mounting.SurfaceMountingManager$3
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData
com.facebook.react.ReactFragment$Builder
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver
com.facebook.react.uimanager.common.UIManagerType
com.facebook.react.devsupport.BundleDownloader
androidx.biometric.BiometricFragment$10
com.facebook.react.views.image.ReactImageDownloadListener
androidx.media.AudioAttributesImplApi21
com.facebook.react.uimanager.style.OutlineStyle
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType$Companion
com.facebook.react.uimanager.ViewAtIndex$Companion
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey
com.oblador.keychain.cipherStorage.CipherStorageBase
com.facebook.react.uimanager.JSPointerDispatcher
com.facebook.react.uimanager.TouchTargetHelper$WhenMappings
com.facebook.react.animated.NativeAnimatedModule$updateAnimatedNodeConfig$1
androidx.lifecycle.ReportFragment
com.facebook.react.uimanager.layoutanimation.OpacityAnimation
com.facebook.react.jstasks.HeadlessJsTaskContext
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.facebook.react.views.image.MultiPostprocessor$Companion
com.facebook.react.uimanager.style.RadialGradient$Shape
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame
com.facebook.react.views.image.ReactImageView$TilePostprocessor
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.react.packagerconnection.ReconnectingWebSocket
com.facebook.react.runtime.ReactInstance$1
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1
com.facebook.react.fabric.mounting.LayoutMetricsConversions
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder
com.facebook.hermes.intl.LocaleObjectAndroid
com.oblador.keychain.exceptions.CryptoFailedException
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1
com.facebook.react.bridge.JavaModuleWrapper
com.google.android.gms.common.annotation.KeepName
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.facebook.react.modules.network.RequestBodyUtil
com.facebook.react.modules.core.TimingModule
androidx.lifecycle.SavedStateHandleAttacher
com.facebook.react.ReactNativeApplicationEntryPoint
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback
com.facebook.react.modules.statusbar.StatusBarModule
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.uimanager.TransformHelper
com.facebook.react.touch.OnInterceptTouchEventListener
com.facebook.react.uimanager.ViewManagerRegistry
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay
com.reactnativecommunity.asyncstorage.SerialExecutor$1
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder$Companion
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface
com.facebook.react.devsupport.BundleDownloader$BundleInfo$Companion
com.facebook.react.uimanager.UIManagerModuleListener
com.facebook.react.devsupport.BundleDownloader$BundleInfo
com.facebook.react.uimanager.ViewGroupManager
com.facebook.react.animated.InterpolationAnimatedNode$WhenMappings
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod
com.facebook.react.modules.network.NetworkingModule$UriHandler
com.facebook.hermes.reactexecutor.HermesExecutorFactory
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1
androidx.biometric.BiometricFragment$Api21Impl
com.facebook.react.bridge.JavaOnlyArray
android.support.v4.media.MediaDescriptionCompat
androidx.biometric.BiometricFragment$9
com.facebook.react.animated.InterpolationAnimatedNode$Companion
androidx.biometric.BiometricErrorData
com.facebook.react.bridge.Dynamic
com.facebook.react.runtime.BridgelessAtomicRef
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor
com.facebook.react.modules.camera.ImageStoreManager$Companion
com.facebook.react.animated.NativeAnimatedModule$startListeningToAnimatedNodeValue$1
com.facebook.react.modules.intent.IntentModule$waitForActivityAndGetInitialURL$1
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle$Companion
com.facebook.react.devsupport.LogBoxModule$Companion
com.google.android.material.button.MaterialButtonToggleGroup
com.facebook.react.ViewManagerOnDemandReactPackage
com.facebook.react.fabric.FabricUIManagerBinding$Companion
com.facebook.react.JSEngineResolutionAlgorithm
com.facebook.hermes.intl.JSObjects$1
androidx.biometric.BiometricFragment$StopIgnoringCancelRunnable
com.facebook.react.devsupport.MultipartStreamReader$Companion
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
androidx.appcompat.widget.DialogTitle
com.facebook.react.views.view.MeasureUtil$WhenMappings
com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate
com.facebook.react.views.text.internal.span.ReactStrikethroughSpan
com.facebook.react.devsupport.DevSupportManagerBase$reloadAppBroadcastReceiver$1
com.facebook.jni.annotations.DoNotStrip
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan
com.facebook.react.views.text.TextLayoutManager$1
com.facebook.react.animated.NativeAnimatedModule$stopListeningToAnimatedNodeValue$1
com.facebook.react.ReactInstanceManager$4
com.facebook.react.animated.TrackingAnimatedNode
com.facebook.hermes.intl.PlatformDateTimeFormatterICU$1
com.facebook.react.BaseReactPackage$ModuleHolderProvider
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config$Companion
com.facebook.react.ReactInstanceManager
androidx.biometric.BiometricFragment$8
com.facebook.react.uimanager.LayoutDirectionUtil$WhenMappings
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate
com.facebook.react.CoreModulesPackage$1
com.facebook.react.viewmanagers.RNCSafeAreaViewManagerInterface
com.facebook.react.uimanager.FilterHelper
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.packagerconnection.FileIoHandler$3
androidx.activity.ComponentActivity$3
com.facebook.react.uimanager.DisplayMetricsHolder
com.facebook.react.uimanager.style.BorderInsets
com.facebook.react.bridge.ReadableNativeMap$WhenMappings
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$Companion
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation
com.facebook.react.devsupport.BundleDownloader$Companion
com.facebook.react.modules.core.DeviceEventManagerModule$Companion
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback
com.facebook.react.uimanager.OnLayoutEvent
com.facebook.react.devsupport.DevSupportManagerBase$devSettings$1
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor
com.facebook.jni.DestructorThread
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec
com.facebook.react.ReactActivity
com.facebook.react.views.scroll.ScrollEventType$Companion$WhenMappings
com.facebook.react.modules.fresco.FrescoModule
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.ReactRootView
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable
com.google.android.gms.common.api.GoogleApiActivity
androidx.constraintlayout.widget.ConstraintLayout
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.views.switchview.ReactSwitchEvent$Companion
com.facebook.react.bridge.JavaOnlyMap
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.facebook.react.bridge.Systrace
com.nozbe.watermelondb.Connection$Connected
com.facebook.react.ReactInstanceEventListener
com.facebook.react.fabric.interop.UIBlockViewResolver
androidx.profileinstaller.ProfileInstallReceiver
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.facebook.react.common.mapbuffer.ReadableMapBuffer
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle
kotlin.jvm.functions.Function1
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodeFromView$1
com.facebook.react.fabric.ComponentFactory$Companion
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.runtime.BridgelessAtomicRef$State
androidx.appcompat.widget.ActionBarContextView
androidx.security.crypto.EncryptedFile$FileEncryptionScheme
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day
androidx.biometric.R$integer
androidx.biometric.FingerprintDialogFragment
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.react.animated.MultiplicationAnimatedNode
com.facebook.react.bridge.JavaScriptModule
com.facebook.react.views.switchview.ReactSwitchShadowNode
com.facebook.react.modules.intent.IntentModule$Companion
androidx.biometric.BiometricFragment$3
com.facebook.react.bridge.CxxModuleWrapper$Companion
com.facebook.react.uimanager.events.ContentSizeChangeEvent
com.google.android.material.bottomsheet.BottomSheetBehavior
com.facebook.react.uimanager.BaseViewManager
com.facebook.hermes.intl.IPlatformNumberFormatter$Style
com.facebook.react.animated.NativeAnimatedModule$stopAnimation$1
com.facebook.hermes.intl.LocaleIdTokenizer
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar
com.facebook.hermes.intl.PlatformCollatorICU$1
com.facebook.react.devsupport.IInspectorPackagerConnection
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener
androidx.core.graphics.drawable.IconCompat
javax.inject.Provider
com.swmansion.rnscreens.ScreenFragment
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.modules.network.ForwardingCookieHandler
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext
com.facebook.react.fabric.FabricUIManagerProviderImpl
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback
com.facebook.react.views.text.internal.span.ReactForegroundColorSpan
com.facebook.react.common.ReactConstants
com.facebook.react.uimanager.style.RadialGradient$WhenMappings
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue
com.facebook.react.runtime.ReactHostDelegate
com.facebook.react.uimanager.style.RadialGradient$Position
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.devsupport.PackagerStatusCheck$run$1
com.facebook.react.views.text.internal.span.CustomLineHeightSpan
androidx.media.AudioAttributesImplApi21Parcelizer
com.facebook.react.uimanager.UIBlock
com.facebook.react.devsupport.DebugOverlayController
com.facebook.react.modules.sound.SoundManagerModule$Companion
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
androidx.activity.ImmLeaksCleaner
com.facebook.react.bridge.ReactContext
com.facebook.react.uimanager.events.EventDispatcherProvider
com.facebook.react.R$integer
com.facebook.react.uimanager.drawable.BorderDrawableKt
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation
com.swmansion.reanimated.NativeProxy$1
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.react.bridge.JSInstance
com.facebook.react.common.annotations.StableReactNativeAPI
com.swmansion.reanimated.keyboard.KeyboardAnimationManager
com.facebook.react.uimanager.UIManagerModuleConstants
com.facebook.react.runtime.internal.bolts.Task$Companion
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.react.views.textinput.ScrollWatcher
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation
com.facebook.react.uimanager.style.LinearGradient$Companion
com.oblador.keychain.KeychainModule
com.facebook.fbreact.specs.NativeTimingSpec
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface
com.facebook.react.uimanager.style.LogicalEdge$Companion
com.facebook.hermes.intl.PlatformDateTimeFormatterICU
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.facebook.systrace.TraceListener
androidx.biometric.BiometricFragment$StopDelayingPromptRunnable
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan
com.facebook.react.viewmanagers.RNSScreenContentWrapperManagerInterface
com.facebook.react.uimanager.style.LogicalEdge$START
com.facebook.react.views.textinput.ReactTextInputBlurEvent$Companion
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$2
com.facebook.react.R$drawable
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter
com.facebook.react.ReactPackageTurboModuleManagerDelegate
com.facebook.react.modules.network.ProgressiveStringDecoder
com.facebook.react.views.textinput.ReactTextInputSelectionEvent
com.oblador.keychain.cipherStorage.CipherStorageBase$Defaults
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder
android.support.v4.graphics.drawable.IconCompatParcelizer
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults
com.facebook.react.uimanager.ReanimatedUIManager
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.button.MaterialButton
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$FrameViewHolder
com.facebook.react.animated.FrameBasedAnimationDriver$Companion
com.swmansion.reanimated.NodesManager$OnAnimationFrame
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext
android.support.v4.media.MediaMetadataCompat
com.swmansion.reanimated.nativeProxy.EventHandler
com.facebook.react.views.scroll.ReactScrollViewHelper
com.facebook.react.uimanager.style.RadialGradient
com.facebook.react.uimanager.style.LinearGradient
com.facebook.react.views.text.ReactTextViewManagerCallback
com.facebook.react.modules.network.NetworkingModule$ResponseHandler
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.bridge.Inspector
androidx.biometric.BiometricFragment$11
com.facebook.react.modules.intent.IntentModule$WhenMappings
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider
com.facebook.react.uimanager.events.TouchEvent$WhenMappings
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Keyword
com.facebook.react.uimanager.style.LinearGradient$Direction
com.facebook.react.modules.network.NetworkingModule$Companion
com.facebook.react.uimanager.ViewManagerRegistry$1
com.facebook.react.views.textinput.ReactTextScrollWatcher
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$animationScaleObserver$1
com.facebook.react.common.annotations.internal.InteropLegacyArchitecture
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6
com.facebook.fbreact.specs.NativeIntentAndroidSpec
io.invertase.firebase.app.ReactNativeFirebaseAppModule
com.facebook.react.bridge.Inspector$Page
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation
com.facebook.react.devsupport.DevSupportManagerBase$Companion
com.facebook.hermes.intl.UnicodeExtensionKeys$6
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener
com.facebook.jni.DestructorThread$1
com.facebook.react.animated.SpringAnimation$PhysicsState
com.facebook.react.internal.interop.InteropEvent
com.facebook.react.animated.NativeAnimatedModule$addAnimatedEventToView$1
com.facebook.react.bridge.JSExceptionHandler
com.facebook.react.fabric.SynchronousEvent
com.facebook.hermes.intl.IPlatformCollator
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.views.modal.RequestCloseEvent$Companion
androidx.core.app.RemoteActionCompatParcelizer
androidx.biometric.BiometricManager$Api29Impl
androidx.coordinatorlayout.widget.CoordinatorLayout
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder
com.facebook.react.bridge.DefaultJSExceptionHandler
com.facebook.react.views.text.internal.span.ReactOpacitySpan
com.rnbiometrics.ReactNativeBiometrics$2
com.facebook.react.uimanager.ShadowNodeRegistry
com.google.android.material.internal.ClippableRoundedCornerLayout
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.uimanager.BlendModeHelper
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.swmansion.reanimated.ReaCompatibility
com.facebook.proguard.annotations.DoNotStrip
androidx.biometric.BiometricPrompt$ResetCallbackObserver
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4
com.google.android.gms.common.api.internal.zzb
com.facebook.react.uimanager.ReactOverflowView
com.facebook.react.bridge.JavaOnlyArray$Companion
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult
androidx.versionedparcelable.ParcelImpl
com.facebook.react.common.ShakeDetectorKt
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl
com.facebook.react.uimanager.ReactStylesDiffMap
com.facebook.react.uimanager.UIViewOperationQueue$AnimationOperation
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawableKt
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation
com.facebook.react.views.imagehelper.ImageSource$Companion
com.facebook.react.jstasks.NoRetryPolicy$Companion
com.facebook.react.jscexecutor.JSCExecutorFactory
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError
com.facebook.react.bridge.JavaOnlyMap$Companion$WhenMappings
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl
com.facebook.react.uimanager.ReactClippingViewGroupHelper
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate
com.reactnativecommunity.asyncstorage.SerialExecutor
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion
com.facebook.hermes.reactexecutor.HermesExecutor$Companion
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation
com.facebook.react.bridge.JavaMethodWrapper$6
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan
com.facebook.react.uimanager.ReactAccessibilityDelegate$2
com.facebook.react.devsupport.ReactInstanceDevHelper
com.facebook.react.common.annotations.LegacyArchitectureShadowNodeWithCxxImpl
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector
androidx.biometric.R$drawable
androidx.biometric.BiometricFragment$ShowPromptForAuthenticationRunnable
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule
com.facebook.react.fabric.FabricUIManager$4
com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper
androidx.biometric.CryptoObjectUtils$Api23Impl
com.facebook.hermes.intl.IPlatformCollator$CaseFirst
com.facebook.react.uimanager.JSPointerDispatcher$1
com.facebook.react.uimanager.events.EventCategoryDef$Companion
com.facebook.react.views.image.ReactImageView
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
android.support.v4.media.session.ParcelableVolumeInfo
com.facebook.react.uimanager.UIViewOperationQueue$2
com.facebook.react.packagerconnection.FileIoHandler
com.facebook.react.runtime.ReactHostImpl$2
com.google.firebase.FirebaseCommonKtxRegistrar
com.facebook.react.modules.toast.ToastModule
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService
com.swmansion.reanimated.NodesManager$2
com.facebook.react.uimanager.events.PointerEventHelper
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord
com.facebook.react.uimanager.ViewDefaults
com.facebook.react.bridge.RuntimeExecutor
androidx.biometric.AuthenticationCallbackProvider$Api28Impl
com.google.android.material.appbar.MaterialToolbar
com.oblador.keychain.KeychainModuleBuilder
com.swmansion.reanimated.layoutReanimation.SharedElement
com.facebook.react.views.modal.ShowEvent
com.facebook.react.R$color
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation$Companion
com.facebook.react.MemoryPressureRouter
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.ReactInstanceManager$3
com.facebook.react.runtime.ReactInstance
com.facebook.react.views.view.ReactViewGroup$1
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry
androidx.recyclerview.widget.GridLayoutManager
com.facebook.react.modules.i18nmanager.I18nManagerModule$Companion
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc
com.facebook.react.bridge.CallbackImpl
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
com.facebook.react.devsupport.BridgeDevSupportManager
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation
com.facebook.react.uimanager.ReactAccessibilityDelegate
com.facebook.hermes.intl.IPlatformNumberFormatter
com.swmansion.reanimated.CopiedEvent
com.google.android.gms.auth.api.signin.SignInAccount
com.facebook.react.devsupport.DevInternalSettings$Companion
com.facebook.react.views.debuggingoverlay.TraceUpdate
com.facebook.react.bridge.NativeArray
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.jni.CppException
com.facebook.react.internal.AndroidChoreographerProvider
com.google.android.gms.common.util.DynamiteApi
androidx.biometric.R
com.facebook.hermes.intl.Intl
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable
com.facebook.jni.UnknownCppException
kotlin.Lazy
androidx.media.AudioAttributesImplBaseParcelizer
androidx.security.crypto.MasterKey$1
com.facebook.react.viewmanagers.RNSScreenContentWrapperManagerDelegate
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.hermes.intl.PlatformCollatorICU
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.facebook.react.devsupport.interfaces.PackagerStatusCallback
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.views.scroll.ReactScrollViewCommandHelper
com.facebook.react.views.text.internal.ReactTextInlineImageShadowNode
com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener
com.facebook.react.modules.core.DefaultHardwareBackBtnHandler
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper
com.facebook.hermes.intl.LocaleIdentifier
com.facebook.react.views.safeareaview.ReactSafeAreaViewShadowNode
androidx.biometric.AuthenticatorUtils
com.facebook.react.viewmanagers.SafeAreaViewManagerInterface
com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction
com.facebook.hermes.intl.LocaleObjectICU
com.facebook.react.views.scroll.OnScrollDispatchHelper
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate
com.facebook.react.views.scroll.ScrollEventType$Companion
com.facebook.react.devsupport.LogBoxDialog
com.facebook.react.uimanager.drawable.OutlineDrawable
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate
com.facebook.react.fabric.DevToolsReactPerfLogger
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$deleteView$1
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$Compatible
com.facebook.react.viewmanagers.RNSScreenContainerManagerDelegate
com.google.android.gms.common.api.Status
androidx.biometric.BiometricManager$Api30Impl
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper
com.facebook.react.uimanager.annotations.ReactPropertyHolder
com.facebook.react.uimanager.ReactShadowNode
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils
com.facebook.react.views.switchview.ReactSwitchEvent
androidx.biometric.BiometricPrompt
com.facebook.hermes.intl.UnicodeExtensionKeys$1
androidx.startup.InitializationProvider
com.facebook.react.views.view.ReactViewGroup
com.facebook.react.modules.systeminfo.AndroidInfoHelpers
com.facebook.react.common.assets.ReactFontManager$AssetFontFamily
com.facebook.react.uimanager.style.BoxShadow$Companion$WhenMappings
com.facebook.react.modules.i18nmanager.I18nUtil
com.facebook.react.views.modal.ReactModalHostView
com.facebook.react.bridge.ReadableMapBuilder
com.facebook.react.bridge.JsonWriterHelper$WhenMappings
androidx.recyclerview.widget.LinearLayoutManager
com.facebook.react.animated.AnimatedNode
com.facebook.react.uimanager.events.BlackHoleEventDispatcher
androidx.savedstate.Recreator
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
androidx.biometric.R$interpolator
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1
kotlin.jvm.functions.Function2
androidx.biometric.BiometricManager
com.facebook.react.views.scroll.ReactScrollViewManager$Companion
com.facebook.react.runtime.BindingsInstaller$Companion
com.facebook.react.bridge.NativeArgumentsParseException$Companion
androidx.biometric.BiometricFragment
com.facebook.react.devsupport.DevSupportManagerBase$showDevOptionsDialog$adapter$1
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$onPackagerConnectedCallback$1
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable
com.facebook.react.bridge.ReadableMapBuilderKt
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.swmansion.reanimated.ReactNativeUtils$BorderRadii
com.facebook.fbreact.specs.NativeDevSettingsSpec
androidx.activity.ComponentActivity$6
com.facebook.react.views.drawer.events.DrawerStateChangedEvent
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.uimanager.LengthPercentage$Companion
com.swmansion.worklets.WorkletsMessageQueueThread
com.facebook.react.internal.turbomodule.core.TurboModuleManager
com.facebook.react.devsupport.DevSupportManagerFactory
com.facebook.react.fabric.FabricUIManager$2
com.facebook.react.views.view.ColorUtil
com.facebook.react.uimanager.style.LogicalEdge$HORIZONTAL
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags
com.swmansion.reanimated.Utils$1
androidx.profileinstaller.ProfileInstallerInitializer
com.facebook.react.viewmanagers.RNSScreenStackManagerDelegate
com.facebook.react.ReactPackageHelper
com.facebook.react.runtime.ReactSurfaceView$Companion
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.facebook.react.uimanager.style.RadialGradient$Shape$Companion
com.facebook.react.jstasks.HeadlessJsTaskConfig
androidx.biometric.FingerprintDialogFragment$2
com.facebook.jni.HybridClassBase
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate
com.facebook.react.uimanager.UIViewOperationQueue
androidx.biometric.R$array
com.facebook.react.uimanager.style.ColorEdges
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController
com.facebook.hermes.intl.PlatformCollatorAndroid$1
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.uimanager.style.LogicalEdge$TOP
com.facebook.react.uimanager.style.ColorStopUtils
com.facebook.react.uimanager.events.EventCategoryDef
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType
com.facebook.react.uimanager.RootView
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException$Companion
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics
com.facebook.react.runtime.internal.bolts.Executors$UIThreadExecutor
com.facebook.react.devsupport.DevSupportManagerBase
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt
com.google.firebase.provider.FirebaseInitProvider
com.swmansion.rnscreens.NativeScreensModuleSpec
com.nozbe.watermelondb.WMDatabaseBridge
com.facebook.react.touch.JSResponderHandler$Companion
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.views.drawer.ReactDrawerLayout$1
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedBundleFromNetworkLoader$1
com.facebook.react.bridge.GuardedAsyncTask$Companion
com.facebook.react.bridge.ReadableNativeArray$WhenMappings
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.fabric.mounting.MountingManager
com.facebook.react.bridge.NativeArray$Companion
com.facebook.react.devsupport.DevInternalSettings
com.facebook.react.packagerconnection.JSPackagerClient
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsForViewManagerProvider
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.modules.core.TimingModule$Companion
com.oblador.keychain.cipherStorage.CipherStorage
com.facebook.react.views.text.PreparedLayoutTextViewManager$Companion
com.facebook.react.jscexecutor.JSCExecutor$Companion
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation
androidx.biometric.ErrorUtils
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher$WhenMappings
com.facebook.react.uimanager.MeasureSpecAssertions
com.facebook.react.common.ClearableSynchronizedPool
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.hermes.R
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem
com.facebook.react.views.scroll.ReactScrollViewHelper$HasSmoothScroll
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay
com.facebook.react.views.image.ImageLoadEvent$ImageEventType
kotlinx.coroutines.android.AndroidDispatcherFactory
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerProvider
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay
com.facebook.react.animated.FrameBasedAnimationDriver
com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader
com.facebook.react.fabric.ComponentFactory
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent$Companion
com.facebook.react.bridge.UIManagerProvider
androidx.fragment.app.FragmentContainerView
com.swmansion.worklets.WorkletsMessageQueueThreadBase
com.facebook.react.animated.NativeAnimatedModule
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter
com.facebook.react.defaults.DefaultReactHostDelegate
com.facebook.react.modules.blob.BlobProvider
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword
com.oblador.keychain.SecurityLevel
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.common.annotations.FrameworkAPI
com.facebook.react.views.view.MeasureUtil
androidx.appcompat.app.AppCompatViewInflater
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.react.common.futures.SimpleSettableFuture
com.swmansion.reanimated.ReactNativeUtils
com.facebook.react.uimanager.ReanimatedUIImplementation
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.rnbiometrics.ReactNativeBiometrics
com.google.android.gms.iid.InstanceID
com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion
com.facebook.react.devsupport.ChangeBundleLocationDialog$ChangeBundleLocationDialogListener
com.facebook.react.bridge.JavaModuleWrapper$Companion
com.facebook.react.modules.debug.DevMenuModule
com.facebook.react.common.DebugServerException
com.facebook.react.uimanager.events.TouchesHelper$WhenMappings
com.google.firebase.FirebaseCommonRegistrar
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.facebook.react.devsupport.interfaces.RedBoxHandler$ReportCompletedListener
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$NeedsSetup
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.bridge.JavaMethodWrapper$4
androidx.biometric.CancellationSignalProvider$1
com.facebook.react.devsupport.CxxInspectorPackagerConnection
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1
com.facebook.hermes.intl.IPlatformCollator$Usage
com.facebook.react.bridge.Inspector$Companion
com.facebook.react.runtime.BridgelessReactStateTracker
androidx.biometric.R$styleable
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.yoga.YogaLogLevel
com.facebook.react.views.text.ReactTextShadowNode
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint
androidx.security.crypto.MasterKey
com.facebook.react.bridge.ReadableNativeMap$Companion
com.facebook.react.views.text.ReactRawTextManager$Companion
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle
androidx.biometric.BiometricViewModel$1
androidx.constraintlayout.helper.widget.Flow
com.google.android.material.datepicker.MaterialDatePicker
com.facebook.react.uimanager.UIManagerModule$2
androidx.annotation.Keep
com.facebook.react.common.mapbuffer.ReadableMapBuffer$WhenMappings
com.facebook.react.bridge.Arguments
com.swmansion.reanimated.sensor.ReanimatedSensor
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.facebook.react.devsupport.MultipartStreamReader
com.facebook.react.views.textinput.ReactTextInputLocalData
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion$WhenMappings
com.facebook.react.modules.vibration.VibrationModule$Companion
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.react.bridge.ReactCxxErrorHandler
com.google.android.material.sidesheet.SideSheetBehavior
com.facebook.react.modules.blob.BlobModule$networkingUriHandler$1
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.react.modules.network.RequestBodyUtil$create$1
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec
com.facebook.react.runtime.ReactHostImpl$ReactInstanceCalback
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.facebook.react.uimanager.events.FabricEventDispatcherKt
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener
androidx.biometric.CryptoObjectUtils$Api28Impl
com.facebook.react.bridge.ReadableNativeMap
com.facebook.react.runtime.CoreReactPackage
com.swmansion.reanimated.keyboard.Keyboard
com.facebook.react.animated.InterpolationAnimatedNode
com.facebook.react.runtime.hermes.HermesInstance$Companion
com.facebook.react.viewmanagers.ModalHostViewManagerInterface
com.facebook.react.bridge.JSApplicationIllegalArgumentException
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.react.R$anim
com.facebook.react.viewmanagers.RNSScreenManagerDelegate
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate
com.facebook.react.bridge.ColorPropConverter
com.facebook.react.uimanager.events.Event$eventAnimationDriverMatchSpec$1
androidx.biometric.R$id
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo
com.facebook.react.runtime.ReactHostImpl$3
com.facebook.common.time.AwakeTimeSinceBootClock
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.react.devsupport.FpsView$Companion
androidx.biometric.R$dimen
com.facebook.react.bridge.JavaOnlyMap$Companion
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.views.text.internal.span.ReactClickableSpan
com.facebook.react.views.text.ReactFontManager$Companion
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.react.uimanager.events.TouchEventType
com.facebook.react.packagerconnection.FileIoHandler$Companion
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1
com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$1
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.zoontek.rnpermissions.RNPermissionsModule
com.facebook.react.devsupport.inspector.InspectorNetworkHelper$loadNetworkResource$1
androidx.appcompat.widget.ActionBarContainer
com.google.android.datatransport.cct.CctBackendFactory
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface
com.facebook.react.modules.websocket.WebSocketModule
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollState
com.swmansion.reanimated.nativeProxy.NativeProxyCommon
com.facebook.react.NativeModuleRegistryBuilder$Companion
com.facebook.react.views.scroll.ReactScrollView$1
com.facebook.react.uimanager.events.TouchEvent$Companion
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener
com.facebook.react.views.textinput.ReactTextInputBlurEvent
com.facebook.hermes.intl.UnicodeExtensionKeys
com.facebook.react.devsupport.RedBoxContentView$StackAdapter
android.support.v4.media.MediaBrowserCompat$MediaItem
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator
androidx.appcompat.widget.ViewStubCompat
com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener
com.facebook.react.uimanager.style.OutlineStyle$Companion
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
com.facebook.react.devsupport.DevServerHelper$Companion
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation
com.facebook.react.bridge.Promise
com.facebook.hermes.intl.LocaleResolver
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation
com.facebook.react.uimanager.drawable.BoxShadowBorderRadiusKt
androidx.biometric.KeyguardUtils
org.pgsqlite.SQLitePlugin
com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler
com.facebook.react.views.switchview.ReactSwitchManager
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.facebook.react.views.text.internal.span.CustomStyleSpan
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.fabric.StateWrapperImpl$Companion
com.facebook.react.bridge.Callback
com.facebook.react.internal.interop.InteropEvent$Companion
com.facebook.react.modules.dialog.DialogModule
androidx.fragment.app.FragmentManager$6
com.facebook.react.views.scroll.ScrollEventType
com.facebook.react.runtime.ReactInstance$Companion
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.react.bridge.WritableNativeArray
com.facebook.hermes.intl.IntlTextUtils
com.facebook.yoga.YogaLogger
com.facebook.react.modules.core.ReactChoreographer$CallbackType
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter
com.swmansion.reanimated.DevMenuUtils
com.facebook.react.uimanager.ReactRootViewTagGenerator
com.facebook.react.bridge.BridgeSoLoader
com.facebook.react.modules.appearance.AppearanceModule$Companion
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.animated.NativeAnimatedModule$WhenMappings
com.facebook.react.uimanager.events.FabricEventDispatcher
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.react.jscexecutor.JSCExecutor
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.uimanager.LayoutShadowNode
androidx.biometric.BiometricPrompt$CryptoObject
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3
com.facebook.react.runtime.ReactInstance$loadJSBundle$1
com.google.firebase.components.ComponentRegistrar
com.facebook.react.views.view.ReactViewManager$WhenMappings
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.fabric.mounting.MountItemDispatcher
com.facebook.react.shell.MainPackageConfig
com.facebook.react.fabric.LongStreamingStats
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation$Companion
com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion
com.facebook.react.views.image.ReactImageManager$Companion
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair
com.facebook.react.uimanager.BackgroundStyleApplicator
androidx.biometric.AuthenticationCallbackProvider$1
com.facebook.react.common.annotations.UnstableReactNativeAPI
androidx.recyclerview.widget.RecyclerView
com.facebook.react.runtime.ReactHostInspectorTarget$Companion
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.uimanager.GuardedFrameCallback
com.facebook.react.views.text.TextLayoutManager
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.facebook.react.fabric.mounting.SurfaceMountingManager
com.oblador.vectoricons.VectorIconsPackage
com.oblador.keychain.DeviceAvailability
com.facebook.react.bridge.ReactContext$1
com.facebook.react.devsupport.DevSettingsActivity
com.facebook.hermes.intl.LocaleMatcher
com.rnbiometrics.BuildConfig
com.facebook.react.bridge.JSApplicationCausedNativeException
com.swmansion.reanimated.CopiedEvent$1
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.views.modal.ReactModalHostView$Companion
androidx.lifecycle.ProcessLifecycleInitializer
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback
com.facebook.react.packagerconnection.FileIoHandler$2
com.facebook.react.animated.TransformAnimatedNode
com.oblador.keychain.exceptions.KeyStoreAccessException
com.facebook.react.bridge.JSBundleLoader
com.nozbe.watermelondb.WMDatabase$TransactionFunction
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable
com.oblador.keychain.cipherStorage.CipherStorage$CipherResult
com.facebook.react.views.text.internal.span.ReactTagSpan
com.swmansion.reanimated.R
com.facebook.react.bridge.JavaScriptExecutorFactory
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.HeadlessJsTaskService
androidx.biometric.KeyguardUtils$Api16Impl
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.react.uimanager.style.BorderRadiusProp
com.facebook.hermes.BuildConfig
com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion
com.facebook.react.packagerconnection.RequestOnlyHandler
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodeToView$1
com.facebook.react.devsupport.DevServerHelper$closeInspectorConnection$1
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$WhenMappings
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second
com.google.android.material.carousel.CarouselLayoutManager
com.facebook.react.animated.NativeAnimatedNodesManager$Companion
com.facebook.react.views.text.PreparedLayout
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion
com.facebook.react.bridge.DimensionPropConverter$Companion
com.facebook.react.uimanager.style.LogicalEdge$BLOCK
com.facebook.react.bridge.NativeArrayInterface
com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion
com.facebook.react.modules.fresco.FrescoModule$Companion
com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener
com.rnbiometrics.ReactNativeBiometrics$1
com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate
com.facebook.react.bridge.ReadableNativeArray$Companion
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface
com.facebook.react.views.image.ReactCallerContextFactory
com.facebook.react.modules.websocket.WebSocketModule$connect$2
com.facebook.react.runtime.internal.bolts.Continuation
com.google.android.material.search.SearchView$Behavior
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.facebook.react.modules.core.JavaTimerManager$Companion
com.facebook.react.devsupport.interfaces.DevLoadingViewManager
com.facebook.react.uimanager.ViewManagerPropertyUpdater
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1
com.facebook.react.bridge.ReadableMap
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.modules.blob.FileReaderModule
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.react.uimanager.LayoutShadowNode$1
com.facebook.react.ReactRootView$ReactRootViewEventListener
com.facebook.react.module.model.ReactModuleInfo$Companion
com.facebook.react.runtime.JSTimerExecutor
com.facebook.react.views.text.ReactVirtualTextViewManager$Companion
com.facebook.react.modules.debug.FpsDebugFrameCallback
com.facebook.react.animated.StyleAnimatedNode
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion
com.facebook.react.HeadlessJsTaskService$Companion
androidx.media.AudioAttributesImpl
com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
com.facebook.react.common.ShakeDetector$ShakeListener
com.oblador.keychain.PrefsStorage$ResultSet
com.facebook.react.animated.AnimatedNode$Companion
com.facebook.react.ReactInstanceManagerBuilder
com.swmansion.reanimated.nativeProxy.NoopEventHandler
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator
com.facebook.react.runtime.ReactSurfaceView
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils
com.rnbiometrics.ReactNativeBiometricsPackage
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.react.bridge.RuntimeScheduler
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.facebook.react.uimanager.style.ColorStop
androidx.appcompat.widget.ButtonBarLayout
com.facebook.react.bridge.MemoryPressureListener
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.bridge.Arguments$2
com.facebook.react.runtime.BindingsInstaller
androidx.biometric.BiometricPrompt$AuthenticationCallback
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.ReactInstanceManager$ReactInstanceEventListener
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem
com.facebook.react.defaults.DefaultSoLoader
com.google.android.material.timepicker.TimePickerView
com.facebook.react.animated.AnimatedNodeWithUpdateableConfig
com.facebook.react.devsupport.ChangeBundleLocationDialog
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.react.views.text.ReactTextShadowNode$2
com.facebook.react.devsupport.DefaultDevSupportManagerFactory
com.facebook.react.uimanager.BaseViewManager$LayerEffectsHelper
com.google.android.material.transformation.FabTransformationBehavior
com.facebook.react.runtime.BridgelessAtomicRef$Provider
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService
androidx.biometric.BiometricFragment$Api28Impl
com.facebook.react.uimanager.style.BorderStyle
androidx.biometric.BiometricFragment$5
com.facebook.react.uimanager.style.BackgroundImageLayer
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener
com.facebook.react.internal.interop.InteropEventEmitter$Companion
com.google.android.gms.common.api.internal.zzd
com.facebook.react.devsupport.StackTraceHelper
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.react.uimanager.events.NativeGestureUtil
com.facebook.react.bridge.JSBundleLoader$Companion$createFileLoader$1
com.facebook.react.runtime.ReactLifecycleStateManager
androidx.biometric.CancellationSignalProvider$Api16Impl
com.facebook.react.uimanager.ReactAccessibilityDelegate$1
com.oblador.keychain.exceptions.EmptyParameterException
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme
com.facebook.react.common.network.OkHttpCallUtil
com.facebook.react.uimanager.ReactYogaConfigProvider
com.facebook.jni.ThreadScopeSupport
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.facebook.react.bridge.JSONArguments
com.reactnativecommunity.cameraroll.CameraRollModule
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.uimanager.annotations.ReactPropGroup$Companion
com.facebook.react.devsupport.DevServerHelper$BundleType
com.facebook.react.modules.share.ShareModule$Companion
com.facebook.react.devsupport.interfaces.BundleLoadCallback
com.facebook.react.modules.core.JavaTimerManager$Timer
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.facebook.react.bridge.ReactIgnorableMountingException$Companion
androidx.biometric.BiometricPrompt$PromptInfo$Builder
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.biometric.BiometricViewModel$NegativeButtonListener
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion
com.facebook.react.bridge.JsonWriterHelper
com.swmansion.reanimated.ReanimatedUIManagerFactory
com.facebook.react.animated.NativeAnimatedModule$extractAnimatedNodeOffset$1
com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion
com.facebook.react.bridge.NativeMap
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry
com.facebook.react.views.view.ReactViewManager
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion
com.facebook.react.modules.network.ProgressResponseBody
com.facebook.react.devsupport.PerftestDevSupportManager
com.facebook.react.views.scroll.ReactHorizontalScrollView$2
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodes$1
com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerInterface
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1
com.facebook.react.ReactDelegate
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule
androidx.biometric.BiometricViewModel$DefaultExecutor
com.facebook.react.modules.dialog.AlertFragment$Companion
com.facebook.react.uimanager.ReactZIndexedViewGroup
com.facebook.react.ReactAndroidHWInputDeviceHelper$Companion
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.runtime.internal.bolts.TaskCompletionSource
com.facebook.react.DebugCorePackage
androidx.activity.ComponentActivity$4
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping
com.facebook.react.TurboReactPackage
com.facebook.react.bridge.AssertionException
com.facebook.react.modules.sound.SoundManagerModule
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter
com.facebook.react.modules.image.ImageLoaderModule$Companion
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
androidx.biometric.R$attr
com.swmansion.rnscreens.ModalScreenViewManager
com.facebook.react.viewmanagers.AndroidHorizontalScrollContentViewManagerInterface
com.facebook.react.uimanager.events.SynchronousEventReceiver
com.facebook.react.devsupport.DefaultDevSupportManagerFactory$Companion
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.uimanager.ThemedReactContext
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1
androidx.activity.ComponentActivity$2
com.facebook.react.modules.devloading.DevLoadingModule
androidx.biometric.PackageUtils
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation
androidx.appcompat.view.menu.ActionMenuItemView
com.facebook.fbreact.specs.NativeDevMenuSpec
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.facebook.react.modules.blob.FileReaderModule$Companion
com.facebook.react.devsupport.interfaces.DevSupportManager
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.jni.DestructorThread$DestructorList
com.facebook.react.runtime.internal.bolts.Executors
com.facebook.jni.annotations.DoNotStripAny
com.swmansion.rnscreens.ScreensModule
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher
com.facebook.react.common.mapbuffer.ReadableMapBuffer$Companion
com.facebook.react.views.textinput.ReactTextInputShadowNode
com.facebook.fbreact.specs.NativeRedBoxSpec
com.facebook.react.common.MapBuilder
com.facebook.react.viewmanagers.RNSScreenManagerInterface
androidx.biometric.BiometricFragment$Api30Impl
com.reactnativecommunity.asyncstorage.R
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter
com.facebook.react.fabric.FabricUIManager$5
com.facebook.react.uimanager.style.RadialGradient$Companion$WhenMappings
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable
com.nozbe.watermelondb.WMDatabaseBridge$ParamFunction
com.facebook.soloader.Api18TraceUtils
com.facebook.react.uimanager.NoSuchNativeViewException
com.facebook.jni.NativeRunnable
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_START
com.facebook.react.modules.i18nmanager.I18nUtil$Companion
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType$Companion
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion
androidx.appcompat.widget.ActionMenuView
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec
com.facebook.react.fabric.FabricUIManagerBinding
com.facebook.react.uimanager.ReactAccessibilityDelegate$3
com.facebook.react.uimanager.StateWrapper
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtagIterationFailed
com.facebook.react.jstasks.HeadlessJsTaskContext$Companion
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter
com.facebook.react.fabric.internal.interop.InteropUIBlockListener
com.facebook.hermes.intl.PlatformNumberFormatterICU
com.facebook.react.module.model.ReactModuleInfo
com.facebook.react.uimanager.drawable.OutlineDrawable$WhenMappings
com.android.installreferrer.api.InstallReferrerStateListener
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults
com.facebook.react.views.textinput.ReactTextInputShadowNode$Companion
com.facebook.react.views.view.ReactViewManager$Companion
androidx.security.crypto.MasterKeys
com.facebook.react.uimanager.LengthPercentage
com.facebook.react.modules.core.PermissionListener
com.facebook.react.views.text.PreparedLayoutTextView
com.facebook.react.viewmanagers.RNSScreenStackHeaderSubviewManagerInterface
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5
com.facebook.react.common.mapbuffer.MapBuffer
com.facebook.react.internal.interop.InteropEventEmitter
com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType
com.facebook.react.uimanager.style.ComputedBorderRadiusProp
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion
com.facebook.react.views.scroll.ReactScrollView
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener
com.facebook.react.views.safeareaview.ReactSafeAreaView
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable
com.facebook.react.common.mapbuffer.MapBuffer$Companion
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface
com.facebook.react.uimanager.ComponentNameResolverBinding
com.facebook.react.modules.common.ModuleDataCleaner$Cleanable
com.nozbe.watermelondb.R
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1
com.oblador.keychain.cipherStorage.CipherStorageBase$DecryptBytesHandler
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.learnium.RNDeviceInfo.RNDeviceModule
com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion
android.support.v4.app.RemoteActionCompatParcelizer
com.nozbe.watermelondb.utils.MigrationSet
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.facebook.react.uimanager.ViewManagerPropertyUpdater$Settable
com.facebook.react.modules.network.ResponseUtil
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.react.animated.NativeAnimatedModule$restoreDefaultValues$1
com.swmansion.reanimated.sensor.ReanimatedSensorListener
com.facebook.react.animated.InterpolationAnimatedNode$OutputType
androidx.core.app.RemoteActionCompat
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler
com.facebook.hermes.intl.IPlatformDateTimeFormatter
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl
com.facebook.hermes.intl.IPlatformCollator$Sensitivity
com.facebook.react.uimanager.drawable.BorderDrawable
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$show$2
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$Companion
com.facebook.react.CoreModulesPackage
com.facebook.react.animated.ObjectAnimatedNode$Companion
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation
com.facebook.react.runtime.internal.bolts.Executors$ImmediateExecutor
com.facebook.hermes.intl.PlatformNumberFormatterICU$1
com.oblador.keychain.KeychainModule$AuthPromptOptions
com.facebook.react.uimanager.ViewManagersPropertyCache$1
com.facebook.react.modules.fresco.SystraceRequestListener
androidx.biometric.FingerprintDialogFragment$Api26Impl
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan
com.google.android.material.snackbar.SnackbarContentLayout
com.facebook.react.ReactAndroidHWInputDeviceHelper
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag
com.facebook.react.uimanager.Spacing$Companion
com.facebook.hermes.intl.IPlatformNumberFormatter$1
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection
com.facebook.react.modules.clipboard.ClipboardModule$Companion
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation$Companion
com.facebook.react.bridge.UIManagerListener
com.facebook.react.ReactInstanceManager$1
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler
com.facebook.react.modules.vibration.VibrationModule
com.imagepicker.ImagePickerModule
com.facebook.react.devsupport.interfaces.RedBoxHandler
com.facebook.react.packagerconnection.FileIoHandler$1
android.support.v4.media.RatingCompat
com.facebook.react.animated.TransformAnimatedNode$TransformConfig
com.facebook.react.views.scroll.ReactAccessibleScrollView
com.facebook.react.fabric.events.EventEmitterWrapper
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid$PatternUtils
com.swmansion.reanimated.keyboard.KeyboardState
com.facebook.react.bridge.CxxModuleWrapperBase$Companion
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsForTests
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1
androidx.appcompat.widget.AlertDialogLayout
com.facebook.react.uimanager.UIManagerHelper
com.facebook.react.views.text.PreparedLayoutTextViewManager
com.facebook.react.animated.DiffClampAnimatedNode
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.bridge.JSBundleLoader$Companion$createAssetLoader$1
com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder
com.facebook.react.bridge.GuardedRunnable
com.facebook.react.views.textinput.ReactTextChangedEvent$Companion
com.facebook.react.ReactRootView$1
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1
com.facebook.react.LazyReactPackage
com.facebook.hermes.intl.Constants
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger
com.facebook.react.viewmanagers.DebuggingOverlayManagerInterface
androidx.biometric.BiometricFragment$7
com.swmansion.rnscreens.ScreenContentWrapperManager
com.facebook.react.ReactActivityDelegate$1
com.facebook.react.uimanager.ViewProps
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$1
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1
com.facebook.react.bridge.CallbackImpl$Companion
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData
com.swmansion.reanimated.nativeProxy.SensorSetter
com.facebook.react.uimanager.BaseViewManagerDelegate
com.facebook.hermes.reactexecutor.HermesExecutor
androidx.biometric.R$bool
com.facebook.react.animated.NativeAnimatedModule$getValue$1
com.facebook.react.devsupport.DoubleTapReloadRecognizer
com.swmansion.reanimated.BuildConfig
com.facebook.react.bridge.SoftAssertions
com.facebook.react.modules.appstate.AppStateModule
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.bridge.ReadableMapKeySetIterator
androidx.biometric.AuthenticationCallbackProvider$Api30Impl
androidx.fragment.app.DialogFragment
com.facebook.react.viewmanagers.RNGestureHandlerRootViewManagerInterface
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener
com.facebook.react.uimanager.UIViewOperationQueue$1
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem
com.facebook.react.bridge.PromiseImpl
com.facebook.react.runtime.hermes.HermesInstance
com.facebook.react.bridge.Inspector$RemoteConnection
androidx.appcompat.widget.ContentFrameLayout
com.facebook.react.uimanager.BaseViewManager$1
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface
com.facebook.react.views.debuggingoverlay.DebuggingOverlay
com.facebook.react.uimanager.events.TouchesHelper
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.runtime.BridgelessReactContext
com.facebook.react.R$id
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$1
com.facebook.react.uimanager.NativeViewHierarchyManager$1
com.facebook.react.bridge.BridgeReactContext
com.facebook.react.uimanager.SimpleViewManager
com.facebook.react.modules.deviceinfo.DeviceInfoModule$Companion
com.facebook.react.uimanager.OnLayoutEvent$Companion
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener
com.facebook.react.bridge.ModuleSpec
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor
com.facebook.react.uimanager.events.EventEmitterImpl
com.facebook.react.uimanager.events.PointerEventHelper$EVENT
com.facebook.react.uimanager.UIConstantsProviderBinding
com.facebook.react.internal.ChoreographerProvider
com.facebook.react.views.text.ReactTextUpdate$Companion
com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion
com.facebook.react.uimanager.style.LogicalEdge$ALL
com.facebook.react.bridge.Arguments$1
com.facebook.react.modules.core.PermissionAwareActivity
com.facebook.react.viewmanagers.RNSScreenStackManagerInterface
com.facebook.react.common.JavascriptException
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeValue$1
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$highTextContrastObserver$1
com.swmansion.reanimated.Utils
com.nozbe.watermelondb.utils.Schema
com.facebook.react.animated.AdditionAnimatedNode
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation
com.facebook.react.touch.ReactHitSlopView
com.facebook.react.uimanager.TransformHelper$WhenMappings
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.react.soloader.OpenSourceMergedSoMapping
com.google.android.material.timepicker.ClockHandView
com.oblador.keychain.KeychainModule$Rules
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget
com.google.android.material.textfield.TextInputEditText
com.facebook.react.uimanager.IViewManagerWithChildren
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent
com.facebook.react.bridge.DimensionPropConverter
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec
com.facebook.react.bridge.WritableArray
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.bridge.ReactModuleWithSpec
com.google.android.material.transformation.ExpandableBehavior
com.facebook.react.uimanager.TouchTargetHelper
com.facebook.react.animated.ObjectAnimatedNode
com.facebook.react.module.model.ReactModuleInfoProvider
com.facebook.hermes.intl.IPlatformCollator$1
com.facebook.react.runtime.JSRuntimeFactory$Companion
com.facebook.react.views.modal.RequestCloseEvent
com.facebook.react.bridge.DynamicFromMap
com.facebook.react.modules.fresco.ReactNetworkImageRequest
com.facebook.react.uimanager.events.TouchEventType$Companion
com.facebook.react.bridge.ModuleHolder
com.facebook.react.bridge.JavaScriptExecutor
com.BV.LinearGradient.LinearGradientManager
com.facebook.react.fabric.FabricSoLoader
com.facebook.react.uimanager.IllegalViewOperationException
com.facebook.react.devsupport.BridgelessDevSupportManager
com.facebook.react.modules.blob.BlobCollector
com.facebook.react.views.textinput.ReactTextContentSizeWatcher
com.facebook.react.modules.intent.IntentModule
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Experimental_Android
com.facebook.react.uimanager.style.Gradient
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion
com.facebook.react.modules.blob.BlobModule$networkingResponseHandler$1
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.google.android.material.datepicker.MaterialCalendar
com.facebook.react.modules.network.HeaderUtil$Companion
com.facebook.react.uimanager.LengthPercentageType
com.facebook.react.modules.image.ImageLoaderModule$getSize$dataSubscriber$1
com.facebook.react.runtime.BridgelessCatalystInstance$Companion
com.android.installreferrer.api.ReferrerDetails
com.facebook.react.uimanager.ViewManager
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.google.android.material.textfield.TextInputLayout
com.facebook.react.uimanager.layoutanimation.InterpolatorType
com.facebook.react.uimanager.style.CornerRadii
com.facebook.react.R$xml
com.facebook.react.common.SystemClock
androidx.security.crypto.EncryptedSharedPreferences
com.facebook.react.animated.NativeAnimatedModule$createAnimatedNode$1
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.facebook.react.fabric.mounting.mountitems.MountItemFactory
com.facebook.react.modules.network.OkHttpClientFactory
com.oblador.keychain.decryptionHandler.DecryptionResultHandler
com.facebook.react.fabric.SurfaceHandlerBinding$Companion
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate
com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.runtime.ReactHostImpl$1
com.facebook.react.modules.clipboard.ClipboardModule
androidx.lifecycle.SavedStateHandlesVM
com.facebook.react.uimanager.UIManagerModule$1
com.facebook.react.ReactHost
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.facebook.react.bridge.BridgeReactContext$RCTDeviceEventEmitter
com.facebook.react.uimanager.drawable.BackgroundDrawable
androidx.biometric.AuthenticationCallbackProvider$Listener
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle
com.facebook.react.modules.statusbar.StatusBarModule$Companion
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal
com.google.android.gms.common.api.Scope
com.facebook.react.common.annotations.DeprecatedInNewArchitecture
com.imagepicker.ImagePickerProvider
com.swmansion.reanimated.ReanimatedPackage
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType
com.oblador.keychain.cipherStorage.CipherStorageBase$IV
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.facebook.react.views.scroll.ReactScrollViewHelper$HasStateWrapper
com.facebook.react.uimanager.Spacing
androidx.biometric.BiometricPrompt$PromptInfo
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1
com.facebook.react.devsupport.DevServerHelper
com.facebook.react.packagerconnection.JSPackagerClient$Companion
com.google.android.material.timepicker.ChipTextInputComboView
com.oblador.keychain.KeychainModule$AccessControl
com.facebook.react.jstasks.NoRetryPolicy
com.facebook.react.bridge.JavaMethodWrapper$10
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
com.facebook.react.devsupport.FpsView
com.facebook.react.runtime.cxxreactpackage.CxxReactPackage
com.facebook.react.uimanager.style.BorderRadiusStyle
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter
com.facebook.react.NativeModuleRegistryBuilder
com.facebook.react.animated.NativeAnimatedModule$1
com.oblador.vectoricons.VectorIconsModuleImpl
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.facebook.react.modules.devloading.DevLoadingModule$Companion
androidx.fragment.app.Fragment$6
com.facebook.react.uimanager.RootViewUtil
com.nozbe.watermelondb.Connection$Waiting
com.facebook.react.viewmanagers.RNSScreenFooterManagerInterface
com.facebook.react.config.ReactFeatureFlags
com.facebook.jni.HybridData
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData
com.swmansion.reanimated.NativeWorkletsModuleSpec
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter
com.swmansion.rnscreens.SearchBarManager
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.bridge.ReadableType
com.facebook.react.uimanager.events.BatchEventDispatchedListener
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1
com.facebook.react.uimanager.UIManagerReanimatedHelper
com.swmansion.rnscreens.ScreenStackFragment
com.facebook.react.uimanager.style.LogicalEdge$RIGHT
com.facebook.react.uimanager.MatrixMathHelper
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule$Companion
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.views.modal.ShowEvent$Companion
com.facebook.react.uimanager.ReferenceStateWrapper
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
androidx.biometric.R$style
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException
com.facebook.react.uimanager.RootViewManager$Companion
com.swmansion.rnscreens.ScreenFooterManager
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.reactnativecommunity.asyncstorage.AsyncStoragePackage
com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier
com.google.android.gms.common.GoogleApiAvailability
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute
androidx.biometric.R$color
com.facebook.react.views.textinput.ReactContentSizeChangedEvent$Companion
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
com.facebook.react.uimanager.common.ViewUtil
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerDelegate
com.google.android.gms.common.SupportErrorDialogFragment
com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme
com.facebook.react.runtime.JSCInstance
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1
com.facebook.react.uimanager.NativeViewHierarchyOptimizer
com.facebook.soloader.SoLoader
com.google.android.gms.auth.api.signin.RevocationBoundService
com.facebook.react.modules.websocket.WebSocketModule$ContentHandler
com.facebook.react.devsupport.DevServerHelper$closePackagerConnection$1
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion$WhenMappings
com.facebook.hermes.intl.PlatformDateTimeFormatterICU$PatternUtils
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.react.uimanager.style.Overflow$Companion
androidx.core.util.Pools$SimplePool
com.facebook.react.uimanager.events.EventDispatcherImpl
com.facebook.react.bridge.ReadableArray
com.facebook.jni.ExceptionHelper
com.facebook.hermes.instrumentation.HermesMemoryDumper
com.facebook.react.uimanager.style.ColorStopUtils$WhenMappings
androidx.biometric.AuthenticationCallbackProvider
com.facebook.react.bridge.UIManager
com.facebook.react.ReactRootView$CustomGlobalLayoutListener
androidx.biometric.BiometricManager$DefaultInjector
com.facebook.react.uimanager.ViewManagersPropertyCache
com.facebook.react.uimanager.TransformHelper$helperMatrix$1
com.facebook.react.runtime.ReactHostInspectorTarget$UIThreadConditionalSyncExecutor
com.facebook.react.views.textinput.ReactEditText
com.facebook.react.runtime.BridgelessCatalystInstance
com.facebook.react.uimanager.drawable.BorderDrawable$WhenMappings
com.facebook.react.fabric.mounting.SurfaceMountingManager$1
com.facebook.react.modules.systeminfo.AndroidInfoModule$Companion
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android
com.facebook.react.views.image.ImageLoadEvent
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule$Companion
com.facebook.react.animated.SpringAnimation$Companion
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1$WhenMappings
com.facebook.react.uimanager.ViewAtIndex
com.facebook.react.views.text.TextAttributeProps
com.facebook.react.views.imagehelper.ImageSource
com.facebook.fbreact.specs.NativeModalManagerSpec
androidx.lifecycle.SingleGeneratedAdapterObserver
com.swmansion.reanimated.NodesManager$1
com.facebook.react.defaults.DefaultReactHost
com.facebook.react.fabric.events.EventBeatManager$Companion
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt
com.facebook.react.views.text.ReactRawTextShadowNode
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$backPressedCallback$1
com.facebook.react.devsupport.DevServerHelper$openDebugger$1
com.facebook.react.bridge.ReactMarker
com.facebook.react.views.progressbar.ProgressBarShadowNode
com.facebook.react.ReactNativeHost$1
com.facebook.fbreact.specs.NativeImageEditorSpec
com.facebook.react.devsupport.BridgeDevSupportManager$Companion
androidx.core.app.CoreComponentFactory
com.facebook.react.uimanager.events.Event$Companion
com.facebook.react.uimanager.events.PointerEvent
com.facebook.react.views.image.ReactImageView$Companion
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes$Companion
com.facebook.react.modules.network.OkHttpClientProvider
com.facebook.react.module.annotations.ReactModuleList
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.react.views.view.WindowUtilKt
com.facebook.react.viewmanagers.DebuggingOverlayManagerDelegate
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$special$$inlined$sortBy$1
com.facebook.react.animated.NativeAnimatedModule$dropAnimatedNode$1
com.facebook.soloader.DoNotOptimize
com.facebook.react.bridge.interop.InteropModuleRegistry
com.facebook.react.views.image.GlobalImageLoadListener
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel
com.facebook.react.bridge.ReadableArrayBuilder
com.facebook.react.views.scroll.ScrollEvent
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation
com.facebook.react.modules.dialog.DialogTitle
androidx.biometric.BiometricManager$Authenticators
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion
com.facebook.hermes.intl.UnicodeExtensionKeys$5
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
androidx.biometric.PackageUtils$Api23Impl
com.facebook.react.views.image.ImageResizeMethod
androidx.biometric.BiometricFragment$PromptExecutor
com.oblador.vectoricons.R
com.facebook.react.modules.network.ReactCookieJarContainer
com.facebook.hermes.intl.JSObjects
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint$WhenMappings
com.rnbiometrics.SimplePromptCallback
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.views.text.internal.span.TextInlineImageSpan
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1
com.facebook.react.modules.common.ModuleDataCleaner
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper$Companion
com.facebook.react.views.text.internal.span.ReactUnderlineSpan
com.google.android.material.internal.BaselineLayout
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.views.image.ReactImageView$WhenMappings
com.facebook.fbreact.specs.NativeAppearanceSpec
com.facebook.react.modules.blob.BlobModule$Companion
com.facebook.react.views.unimplementedview.ReactUnimplementedView
com.facebook.react.modules.network.ProgressListener
com.facebook.react.views.scroll.ReactScrollView$2
com.nozbe.watermelondb.utils.Pair
com.oblador.keychain.KeychainModule$Errors
com.facebook.react.modules.core.ExceptionsManagerModule$Companion
com.facebook.react.uimanager.ReactAxOrderHelper
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider
com.facebook.hermes.intl.ParsedLocaleIdentifier
com.facebook.react.views.text.TextTransformKt$WhenMappings
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter
com.facebook.react.uimanager.style.LogicalEdge$LEFT
com.facebook.react.bridge.ReactApplicationContext
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.google.firebase.messaging.FirebaseMessaging
com.facebook.react.uimanager.UIImplementation$1
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.biometric.FingerprintDialogFragment$4
com.oblador.keychain.BuildConfig
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedSplitBundleFromNetworkLoader$1
com.facebook.react.uimanager.UIImplementation
com.facebook.hermes.intl.UnicodeExtensionKeys$4
com.facebook.react.bridge.ReactIgnorableMountingException
com.facebook.react.uimanager.NativeViewHierarchyManager
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole
com.facebook.react.devsupport.MultipartStreamReader$ChunkListener
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion
com.facebook.react.views.view.CanvasUtil
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.react.devsupport.interfaces.ErrorCustomizer
com.facebook.react.modules.appstate.AppStateModule$Companion
com.facebook.react.uimanager.events.EventDispatcher
com.facebook.react.common.SurfaceDelegateFactory
com.swmansion.worklets.WorkletsModule
com.facebook.react.packagerconnection.NotificationOnlyHandler
com.facebook.react.modules.statusbar.StatusBarModule$setTranslucent$1
com.facebook.react.views.textinput.ContentSizeWatcher
com.nozbe.watermelondb.WMDatabase
com.facebook.react.views.text.ReactTextShadowNode$1
com.facebook.react.modules.network.ProgressRequestBody
com.facebook.react.uimanager.ReactCompoundView
com.facebook.react.R$string
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation
androidx.appcompat.view.menu.ListMenuItemView
android.support.v4.media.session.PlaybackStateCompat
com.facebook.react.bridge.CxxCallbackImpl
com.rnbiometrics.CreateSignatureCallback
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.views.textinput.ReactTextSelectionWatcher
com.facebook.react.fabric.FabricUIManager$1
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.react.animated.DecayAnimation
com.facebook.react.ReactActivity$1
com.facebook.react.views.common.ContextUtils
com.swmansion.reanimated.MapUtils
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem
com.facebook.hermes.intl.Collator
com.facebook.react.uimanager.PointerEvents$Companion
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType
com.facebook.react.views.image.ReactImageDownloadListener$Companion
com.google.firebase.concurrent.ExecutorsRegistrar
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate
com.facebook.react.viewmanagers.AndroidHorizontalScrollContentViewManagerDelegate
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer
com.facebook.jni.HybridData$Destructor
com.jaudifinance.MainActivity
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName
com.facebook.react.views.textinput.ReactContentSizeChangedEvent
com.facebook.react.runtime.ReactInstance$ReactJsExceptionHandlerImpl
com.facebook.react.fabric.interop.UIBlock
com.nozbe.watermelondb.Queries
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.bridge.JavaMethodWrapper$8
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.facebook.react.uimanager.style.LogicalEdge$BOTTOM
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.views.imagehelper.MultiSourceHelper
androidx.biometric.FingerprintDialogFragment$1
com.facebook.react.views.image.ScaleTypeStartInside$Companion
com.facebook.react.uimanager.RootViewManager
com.swmansion.rnscreens.ScreenViewManager
com.facebook.react.uimanager.annotations.ReactProp
com.reactnativecommunity.netinfo.NetInfoModule
androidx.lifecycle.DefaultLifecycleObserverAdapter
com.swmansion.reanimated.sensor.ReanimatedSensorContainer
com.swmansion.reanimated.keyboard.WindowsInsetsManager
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.views.textinput.ReactTextInputFocusEvent$Companion
com.facebook.react.views.view.ReactViewGroup$2
com.facebook.react.uimanager.ReactOverflowViewWithInset
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
com.facebook.react.common.assets.ReactFontManager
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.android.material.internal.TouchObserverFrameLayout
com.facebook.react.animated.PropsAnimatedNode
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable$1
com.swmansion.reanimated.NativeProxy
com.facebook.react.uimanager.ReactPointerEventsView
com.facebook.hermes.intl.NumberFormat
com.facebook.react.turbomodule.core.interfaces.TurboModuleWithJSIBindings
com.facebook.react.uimanager.events.FabricEventDispatcher$Companion
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.react.modules.network.ProgressResponseBody$source$1
com.swmansion.rnscreens.bottomsheet.SheetDelegate
com.facebook.react.views.scroll.ReactHorizontalScrollView
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion
com.facebook.react.views.scroll.ReactHorizontalScrollView$1
com.jaudifinance.MainApplication
com.facebook.react.views.textinput.ReactEditText$editTextAccessibilityDelegate$1
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.bridge.ReactContextBaseJavaModule
kotlin.enums.EnumEntries
com.facebook.react.animated.ColorAnimatedNode
com.facebook.react.touch.JSResponderHandler
com.google.android.gms.common.api.internal.LifecycleCallback
com.facebook.react.views.text.ReactVirtualTextShadowNode
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent$Companion
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Dimensions
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.react.devsupport.DoubleTapReloadRecognizer$Companion
com.facebook.react.uimanager.style.Overflow
com.facebook.react.defaults.DefaultComponentsRegistry
com.oblador.keychain.cipherStorage.CipherStorageBase$EncryptStringHandler
com.facebook.react.uimanager.LayoutDirectionUtil
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion
com.facebook.react.modules.blob.BlobModule$networkingRequestBodyHandler$1
com.facebook.react.views.text.internal.span.ReactAbsoluteSizeSpan
com.facebook.react.defaults.DefaultReactNativeHost$getUIManagerProvider$1$viewManagerRegistry$1
com.facebook.react.uimanager.ViewGroupManager$Companion
com.facebook.react.modules.debug.FpsDebugFrameCallback$Companion
com.facebook.react.views.view.ViewGroupClickEvent
com.facebook.jni.CppSystemErrorException
com.facebook.react.modules.image.ImageLoaderModule$getSizeWithHeaders$dataSubscriber$1
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: com.facebook.react.bridge.ReadableArray mChildrenTags
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: com.oblador.keychain.cipherStorage.CipherStorageBase$DecryptBytesHandler decrypt
com.facebook.react.uimanager.events.TouchEventType: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.swmansion.reanimated.layoutReanimation.Snapshot: int width
androidx.biometric.R$interpolator: int fast_out_slow_in
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat DEFAULT_INSTANCE
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int UNSPECIFIED
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.fabric.SurfaceHandlerBinding surfaceHandler
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasReplacementsLanguage2
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper$Companion Companion
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIAL_RENDERING
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: int start
androidx.biometric.R$attr: int actionMenuTextAppearance
com.facebook.react.defaults.DefaultReactActivityDelegate: boolean fabricEnabled
androidx.biometric.R$styleable: int AnimatedStateListDrawableItem_android_id
com.facebook.react.views.progressbar.ProgressBarContainerView: com.facebook.react.views.progressbar.ProgressBarContainerView$Companion Companion
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map contentHandlers
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.bridge.WritableMap val$event
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int version_
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole HEADER
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.lang.String TAG
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
androidx.biometric.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.biometric.R$style: int Base_Widget_AppCompat_ButtonBar
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: java.util.Queue queue
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$CacheChoice mCacheChoice
com.facebook.react.uimanager.events.EventEmitterImpl: com.facebook.react.uimanager.events.RCTEventEmitter legacyEventEmitter
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.ILocaleObject mResolvedLocaleObject
com.facebook.react.modules.core.ReactChoreographer: int totalCallbacks
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int objBufferLen
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role REGION
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: okhttp3.CacheControl cacheControl
com.facebook.react.runtime.ReactInstance: com.facebook.react.fabric.FabricUIManager fabricUIManager
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_MOVE_CAPTURE
com.facebook.react.uimanager.events.EventCategoryDef: int DISCRETE
com.facebook.hermes.intl.Constants: java.lang.String[] COLLATION_OVERRIDE_TO_DEFAULT_VALUES
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.interop.InteropModuleRegistry mInteropModuleRegistry
com.facebook.react.bridge.ReactContext: java.lang.String TAG
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MOVIES_DIRECTORY
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.hermes.intl.ParsedLocaleIdentifier: com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier languageIdentifier
androidx.biometric.R$attr: int selectableItemBackground
com.facebook.react.devsupport.BundleDownloader: com.facebook.react.devsupport.BundleDownloader$Companion Companion
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_HIDDEN
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] $VALUES
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int VERSION_FIELD_NUMBER
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$NeedsMigration: int fromVersion
com.facebook.react.uimanager.ViewProps: java.lang.String ALIGN_SELF
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodes$1: int $parentNodeTag
com.facebook.hermes.intl.PlatformCollatorICU$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformCollator$Sensitivity
com.google.crypto.tink.proto.KeyTypeEntry: int keyManagerVersion_
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasReplacementsScript2
androidx.biometric.R$attr: int state_above_anchor
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String PADDING_PKCS7
androidx.biometric.FingerprintDialogFragment: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.facebook.react.views.textinput.ReactEditText: int nativeEventCount
com.facebook.react.devsupport.MultipartStreamReader: okio.BufferedSource source
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$1: com.facebook.react.jstasks.HeadlessJsTaskConfig $taskConfig
com.facebook.react.uimanager.UIViewOperationQueue: long mCreateViewCount
com.facebook.react.uimanager.ViewProps: java.lang.String IMPORTANT_FOR_ACCESSIBILITY
androidx.biometric.R$styleable: int[] ViewBackgroundHelper
com.facebook.imagepipeline.request.ImageRequest: int mSourceUriType
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$dispatchViewUpdatesTime
androidx.biometric.R$anim: int fragment_fast_out_extra_slow_in
androidx.fragment.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
androidx.biometric.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useShadowNodeStateOnCloneCache
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_RADIUS
androidx.biometric.R$attr: int actionDropDownStyle
com.facebook.react.ReactRootView: int mLastWidth
androidx.biometric.R$style: int TextAppearance_Compat_Notification_Info
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.facebook.hermes.intl.Constants: java.lang.String SORT
com.facebook.react.common.build.ReactBuildConfig: int EXOPACKAGE_FLAGS
androidx.biometric.R$id: int accessibility_custom_action_3
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_STRING
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer lineNumber
com.facebook.react.uimanager.LayoutShadowNode$1: int[] $SwitchMap$com$facebook$yoga$YogaUnit
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int recommendedTimeout
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String NAME
androidx.biometric.R$styleable: int[] MenuGroup
androidx.biometric.R$styleable: int MenuView_preserveIconSpacing
com.facebook.react.views.imagehelper.ImageSource: java.lang.String source
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_START_END_RADIUS
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role STATUS
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: android.content.SharedPreferences sharedPreferences
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
androidx.biometric.R$drawable: int fingerprint_dialog_error
com.google.crypto.tink.proto.AesGcmKeyFormat: int version_
androidx.biometric.R$color: int primary_text_disabled_material_light
com.facebook.react.views.textinput.ReactTextInputFocusEvent: java.lang.String EVENT_NAME
androidx.customview.widget.ExploreByTouchHelper: java.lang.String DEFAULT_CLASS_NAME
androidx.fragment.app.DialogFragment: boolean mCancelable
androidx.fragment.app.DialogFragment: boolean mDismissed
com.facebook.react.views.text.internal.span.SetSpanOperation: com.facebook.react.views.text.internal.span.SetSpanOperation$Companion Companion
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mDisableCleaningForViewTag
androidx.biometric.R$string: int abc_action_bar_up_description
androidx.security.crypto.MasterKey: int DEFAULT_AES_GCM_MASTER_KEY_SIZE
com.facebook.react.R$string: int menu_description
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_TOP_LEFT_RADIUS
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType UPDATE
com.reactnativecommunity.asyncstorage.BuildConfig: java.lang.String BUILD_TYPE
androidx.biometric.R$styleable: int AppCompatTheme_windowNoTitle
com.facebook.hermes.intl.PlatformNumberFormatterAndroid$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$CurrencyDisplay
com.google.android.gms.cloudmessaging.zze: android.os.Parcelable$Creator CREATOR
com.facebook.react.ReactRootView$1: com.facebook.react.ReactRootView this$0
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot sourceViewSnapshot
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1: com.reactnativecommunity.asyncstorage.AsyncStoragePackage this$0
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year NUMERIC
com.facebook.react.uimanager.ViewProps: java.lang.String NATIVE_ID
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Dimensions: com.facebook.react.uimanager.LengthPercentage x
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.lang.String DIRECT_EVENTS_KEY
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String extrapolateLeft
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalUnconsumed
com.facebook.react.views.switchview.ReactSwitchShadowNode: boolean measured
androidx.biometric.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.biometric.R$styleable: int LinearLayoutCompat_android_gravity
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] $VALUES
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1: com.facebook.react.bridge.Callback $endCallback
androidx.appcompat.widget.SwitchCompat: int mSwitchHeight
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TIMER
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: com.facebook.react.bridge.ReactApplicationContext $reactApplicationContext
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role COLUMNHEADER
com.oblador.keychain.KeychainModule$Rules: java.lang.String NONE
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.bridge.ReactMarker: java.util.Queue sNativeReactMarkerQueue
androidx.biometric.R$attr: int textColorSearchUrl
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType FARTHEST_CORNER
com.facebook.react.views.view.CanvasUtil: java.lang.reflect.Method inorderBarrierMethod
com.facebook.react.views.image.ImageLoadEvent: int ON_LOAD
androidx.biometric.R$styleable: int AppCompatTheme_checkboxStyle
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.lang.String[] $iteratorKeys
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String mFileName
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ROLE
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.view.View mView
com.facebook.react.views.image.ReactImageView: com.facebook.react.bridge.ReadableMap headers
androidx.biometric.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float deltaX
com.facebook.react.devsupport.DevSupportManagerBase: int pendingJSSplitBundleRequests
androidx.biometric.R$attr: int buttonBarStyle
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mCurrentSharedTransitionViews
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.facebook.react.R$id: int react_test_id
com.facebook.react.uimanager.NativeViewHierarchyManager$1: android.view.View val$viewToDestroy
com.facebook.react.views.text.PreparedLayoutTextView: java.lang.Integer selectionColor
androidx.biometric.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix
androidx.biometric.R$dimen: int abc_alert_dialog_button_bar_height
com.facebook.react.uimanager.UIConstantsProviderBinding: com.facebook.react.uimanager.UIConstantsProviderBinding INSTANCE
com.oblador.keychain.KeychainModule$Maps: java.lang.String AUTH_PROMPT
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableViewRecyclingCache
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mTagsToCleanup
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCmacKey: int version_
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: int previousContentHeight
com.facebook.react.ReactRootView: java.lang.String mJSModuleName
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_LABEL
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat aesCtrKeyFormat_
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
androidx.biometric.R$id: int action_bar_title
com.facebook.react.packagerconnection.JSPackagerClient: java.util.Map requestHandlers
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.util.Map points
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableJSRuntimeGCOnMemoryPressureOnIOSCache
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_DOWN
androidx.biometric.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.biometric.R$styleable: int LinearLayoutCompat_android_orientation
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.WeakHashMap INSTANCES
androidx.biometric.R$styleable: int ActionBar_logo
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: com.facebook.react.views.textinput.ReactTextInputSelectionEvent$Companion Companion
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.bridge.ReadableMap val$props
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithProgress
androidx.drawerlayout.widget.DrawerLayout: float TOUCH_SLOP_SENSITIVITY
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int DERIVED_KEY_SIZE_FIELD_NUMBER
androidx.biometric.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Second
androidx.biometric.R$string: int abc_action_menu_overflow_description
androidx.biometric.BiometricFragment$10: java.lang.CharSequence val$errorString
androidx.drawerlayout.widget.DrawerLayout: boolean CHILDREN_DISALLOW_INTERCEPT
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline _imagePipeline
com.facebook.react.touch.JSResponderHandler: int currentJSResponder
androidx.biometric.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.biometric.R$style: int ThemeOverlay_AppCompat_Dark
com.facebook.react.devsupport.DefaultDevSupportManagerFactory: java.lang.String DEVSUPPORT_IMPL_PACKAGE
com.facebook.react.devsupport.MultipartStreamReader: java.lang.String CRLF
androidx.biometric.R$attr: int colorSwitchThumbNormal
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider legacyModuleProvider
com.facebook.react.R$string: int alert_description
androidx.biometric.R$styleable: int ActionBar_subtitle
com.facebook.react.devsupport.DevServerHelper$openDebugger$1: com.facebook.react.bridge.ReactContext $context
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Title
com.rnbiometrics.ReactNativeBiometrics$1: com.facebook.react.bridge.ReadableMap val$params
com.facebook.react.common.LifecycleState: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageDownloadListener downloadListener
com.facebook.react.fabric.mounting.MountItemDispatcher: long mRunStartTime
com.google.crypto.tink.proto.AesCmacKeyFormat: int keySize_
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_RIGHT_RADIUS
androidx.biometric.R$color: int switch_thumb_normal_material_light
androidx.biometric.R$id: int tag_transition_group
androidx.biometric.R$styleable: int DrawerArrowToggle_color
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Era
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: int currentIndex
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Map activeTaskConfigs
androidx.biometric.R$string: int abc_menu_space_shortcut_label
androidx.biometric.R$styleable: int ColorStateListItem_lStar
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: int mEventCategory
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.ReadableMap initialNotification
androidx.biometric.R$styleable: int AppCompatTheme_textColorSearchUrl
com.facebook.react.ReactInstanceManager: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mScreenCoordinatesByPointerId
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType STRING
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role BUTTON
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState UNKNOWN
com.facebook.react.modules.vibration.VibrationModule: com.facebook.react.modules.vibration.VibrationModule$Companion Companion
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_ERROR
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.oblador.keychain.PrefsStorage: java.lang.String KEYCHAIN_DATA
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float DRAG_RATE
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: com.facebook.react.bridge.Callback val$callback
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ALERT
com.facebook.react.modules.core.DeviceEventManagerModule: com.facebook.react.modules.core.DeviceEventManagerModule$Companion Companion
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap measuredStyles
androidx.biometric.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.facebook.react.uimanager.Spacing: int BOTTOM
com.facebook.react.common.ClassFinder: com.facebook.react.common.ClassFinder INSTANCE
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] $VALUES
androidx.biometric.R$layout: int abc_alert_dialog_button_bar_material
com.facebook.react.runtime.internal.bolts.Task: java.util.List continuations
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult result
androidx.biometric.R$attr: int dividerPadding
androidx.biometric.R$styleable: int AppCompatTheme_viewInflaterClass
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_FILE_EXTENSION
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_INSERT
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence mNegativeButtonText
androidx.biometric.R$styleable: int AppCompatTextHelper_android_drawableStart
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: java.io.FileInputStream stream
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsDispatchUIFrameCallbackEnqueued
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: com.facebook.react.devsupport.LogBoxDialog dialog
com.oblador.keychain.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.biometric.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.biometric.R$dimen: int disabled_alpha_material_dark
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.Executor mUIExecutor
androidx.biometric.R$id: int tabMode
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_LEFT
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_MOUSE
androidx.biometric.R$id: int accessibility_custom_action_17
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_COLOR
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.lang.String PREFS_DEBUG_SERVER_HOST_KEY
androidx.biometric.R$dimen: int abc_panel_menu_list_width
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean intercepted
com.facebook.react.animated.ModulusAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.facebook.react.uimanager.ReactClippingViewGroupHelper: android.graphics.Rect helperRect
com.facebook.react.uimanager.drawable.OutlineDrawable: float gapBetweenPaths
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config$Companion Companion
androidx.biometric.R$attr: int actionModeCutDrawable
androidx.biometric.R$id: int topPanel
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.widget.SwitchCompat: float mTouchX
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float offsetX
androidx.biometric.R$id: int accessibility_custom_action_1
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SWITCH
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableCppPropsIteratorSetterCache
androidx.biometric.R$layout: int select_dialog_singlechoice_material
androidx.biometric.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.biometric.R$styleable: int AppCompatTheme_actionBarSize
com.facebook.react.uimanager.ShadowNodeRegistry: android.util.SparseBooleanArray rootTags
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1: com.facebook.react.bridge.ReactContext $reactContext
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_STYLE
com.facebook.react.LazyReactPackage$1: java.util.List val$nativeModules
com.facebook.react.uimanager.style.LinearGradient$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.animated.DiffClampAnimatedNode: double minValue
androidx.biometric.R$style: int TextAppearance_AppCompat_Body1
androidx.biometric.R$attr: int buttonBarPositiveButtonStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole DROPDOWNLIST
com.facebook.react.animated.AnimatedNode: com.facebook.react.animated.AnimatedNode$Companion Companion
androidx.biometric.R$dimen: int abc_action_button_min_height_material
com.facebook.react.devsupport.DevServerHelper$closePackagerConnection$1: com.facebook.react.devsupport.DevServerHelper this$0
com.facebook.react.devsupport.DevSupportManagerBase: java.util.List errorCustomizers
androidx.biometric.R$styleable: int SwitchCompat_splitTrack
com.facebook.react.modules.core.JavaTimerManager: boolean frameCallbackPosted
com.facebook.yoga.YogaNodeJNIBase: float[] arr
androidx.security.crypto.MasterKey$Builder: android.content.Context mContext
com.facebook.react.R$anim: int catalyst_fade_out
androidx.biometric.R$id: int action_container
androidx.biometric.R$styleable: int MenuItem_android_orderInCategory
androidx.biometric.R$dimen: int abc_text_size_display_3_material
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: int mMinKeyboardHeightDetected
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter mEventEmitter
com.facebook.react.devsupport.BundleDownloader: int FILES_CHANGED_COUNT_NOT_BUILT_BY_BUNDLER
androidx.biometric.R$attr: int arrowHeadLength
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomStart
androidx.biometric.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix tileMatrix
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role RADIO
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String TAG
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance jsInstance
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole RADIO
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool pool
androidx.biometric.R$styleable: int FontFamilyFont_fontStyle
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener mBridgeIdleDebugListener
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod AUTO
com.facebook.react.views.common.ContextUtils: com.facebook.react.views.common.ContextUtils INSTANCE
androidx.biometric.R$styleable: int AppCompatSeekBar_tickMark
androidx.fragment.app.Fragment: android.os.Bundle mArguments
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_XY
com.oblador.keychain.cipherStorage.CipherStorage$CipherResult: java.lang.Object username
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: com.facebook.react.modules.dialog.DialogModule this$0
com.BV.LinearGradient.LinearGradientManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactCxxErrorHandler: com.facebook.react.bridge.ReactCxxErrorHandler INSTANCE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mMediumAnimationDuration
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec nativeModulesQueueThreadSpec
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String COMMAND_CLOSE_DRAWER
androidx.biometric.R$attr: int editTextColor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float startX
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String lastEmittedColorScheme
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.common.SurfaceDelegate redBoxSurfaceDelegate
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isFinished
androidx.biometric.FingerprintDialogFragment: android.widget.ImageView mFingerprintIcon
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.lang.String TAG
androidx.biometric.R$styleable: int Toolbar_titleMargins
androidx.biometric.R$attr: int collapseIcon
com.facebook.react.R$id: int accessibility_actions
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList mPostEventDispatchListeners
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: java.util.List mPackages
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mShouldNotifyOnLayout
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] languageAliasReplacements3
androidx.biometric.R$drawable: int notification_bg_normal
androidx.appcompat.widget.SwitchCompat: int THUMB_ANIMATION_DURATION
androidx.fragment.app.Fragment: int STARTED
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Paint mPaint
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: java.util.ArrayList transitionToBusyEvents
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.biometric.R$attr: int actionOverflowButtonStyle
androidx.biometric.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String CLIPPING_PROHIBITED_VIEW
androidx.biometric.R$dimen: int compat_button_inset_vertical_material
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.biometric.R$styleable: int Spinner_popupTheme
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.Path backgroundRenderPath
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: java.lang.String kekUri_
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LINE_HEIGHT
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Display1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator DEFAULT_FLING_ANIMATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_END
androidx.security.crypto.EncryptedSharedPreferences: android.content.SharedPreferences mSharedPreferences
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: com.facebook.react.internal.featureflags.ReactNativeFeatureFlags INSTANCE
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.lang.String TAG
com.facebook.react.animated.TrackingAnimatedNode: com.facebook.react.bridge.JavaOnlyMap animationConfig
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType END_DRAG
androidx.biometric.R$dimen: int notification_subtext_size
androidx.biometric.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.react.R$id: int accessibility_label
androidx.biometric.R$attr: int divider
androidx.biometric.BiometricPrompt$PromptInfo: boolean mIsConfirmationRequired
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] $VALUES
com.facebook.react.views.text.TextLayoutManager: java.lang.String INLINE_VIEW_PLACEHOLDER
androidx.biometric.R$styleable: int AppCompatTheme_actionBarDivider
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mInnerClipTempRectForBorderRadius
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Inverse
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle DASHED
com.facebook.react.runtime.ReactHostImpl: boolean mAllowPackagerServerAccess
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useShadowNodeStateOnCloneCache
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: java.util.concurrent.ConcurrentHashMap mListeners
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
androidx.biometric.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.facebook.react.ReactInstanceManagerBuilder: android.app.Activity mCurrentActivity
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String INLINE_VIEW_PLACEHOLDER
androidx.biometric.CancellationSignalProvider: androidx.biometric.CancellationSignalProvider$Injector mInjector
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month DIGIT2
com.facebook.hermes.intl.UnicodeExtensionKeys: java.util.Map s_numberSystemAliasMappings
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String NAME
com.facebook.react.uimanager.ViewProps: java.lang.String START
com.facebook.react.views.textinput.ReactEditText: java.util.List dragAndDropFilter
androidx.security.crypto.EncryptedSharedPreferences: com.google.crypto.tink.DeterministicAead mKeyDeterministicAead
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] $VALUES
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.facebook.react.uimanager.drawable.BorderDrawableKt: int ALL_BITS_UNSET
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: int[] mTagsToDelete
com.facebook.react.uimanager.ViewProps: java.lang.String VIEW_CLASS_NAME
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.swmansion.reanimated.NodesManager$3: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.common.ClearableSynchronizedPool: int size
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mOverflowInset
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.modules.deviceinfo.DeviceInfoModule$Companion Companion
com.facebook.react.common.ShakeDetector: float accelerationY
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView mReactRootView
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.ReactQueueConfiguration mQueueConfig
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int VERSION_FIELD_NUMBER
androidx.biometric.R$style: int Base_Theme_AppCompat_Light
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_X
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Integer mIndex
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: java.util.ArrayList viewHierarchyUpdateEnqueuedEvents
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSnapToEnd
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.Map moduleHolders
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacKeyFormat DEFAULT_INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int reactTag
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
com.facebook.react.animated.NativeAnimatedModule$removeAnimatedEventFromView$1: java.lang.String $eventName
androidx.biometric.R$styleable: int TextAppearance_fontFamily
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mPreMountItems
com.google.crypto.tink.proto.HmacParams: int HASH_FIELD_NUMBER
com.facebook.react.views.modal.ReactModalHostView: boolean transparent
androidx.biometric.R$color: int androidx_core_ripple_material_light
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_TOP
androidx.biometric.R$layout: int abc_action_bar_up_container
com.facebook.react.uimanager.ViewProps: java.lang.String INCLUDE_FONT_PADDING
com.facebook.react.modules.systeminfo.ReactNativeVersion: java.util.Map VERSION
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape ELLIPSE
androidx.biometric.R$styleable: int Fragment_android_id
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay NEVER
androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$CryptoObject mCryptoObject
com.facebook.react.views.text.TextAttributeProps: float mTextShadowRadius
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_CREATE
com.facebook.react.modules.network.ProgressiveStringDecoder: byte[] remainder
androidx.biometric.R$styleable: int[] SearchView
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: boolean isCollapsed
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] valueMap
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: com.facebook.react.uimanager.ViewManager manager
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JavaModuleWrapper$Companion Companion
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollViewManager$Companion Companion
com.facebook.react.views.text.FontMetricsUtil: java.lang.String X_HEIGHT_MEASUREMENT_TEXT
com.facebook.hermes.intl.UnicodeExtensionKeys: java.util.HashMap s_icukey_canonicalkey_map
androidx.biometric.R$id: int add
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion Companion
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: android.view.ViewGroup viewGroup
androidx.fragment.app.Fragment: boolean mDeferStart
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasReplacementsLanguage3
com.facebook.react.views.text.ReactTextShadowNode$2: com.facebook.react.views.text.ReactTextShadowNode this$0
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String TAG
androidx.biometric.R$attr: int actionBarPopupTheme
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.fragment.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
androidx.biometric.R$styleable: int LinearLayoutCompat_dividerPadding
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] $VALUES
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean isFatal
com.facebook.react.devsupport.DevSupportManagerBase$showDevOptionsDialog$adapter$1: java.util.Set $disabledItemKeys
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mRemovedSharedViews
androidx.biometric.R$styleable: int[] GradientColor
com.facebook.react.packagerconnection.FileIoHandler: android.os.Handler handler
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIAL_MOUNTING
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task TASK_TRUE
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.modules.image.ImageLoaderModule$Companion Companion
com.facebook.react.views.text.PreparedLayout: int maximumNumberOfLines
com.nozbe.watermelondb.utils.MigrationSet: int to
androidx.appcompat.widget.SwitchCompat: int mSwitchLeft
androidx.biometric.R$style: int TextAppearance_AppCompat_Small_Inverse
com.facebook.react.uimanager.style.BoxShadow: float offsetX
com.facebook.react.uimanager.events.EventEmitterImpl: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.views.debuggingoverlay.TraceUpdate: int color
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role APPLICATION
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.facebook.react.devsupport.RedBoxContentView: boolean isReporting
com.facebook.react.R$string: int catalyst_reload
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback this$1
com.facebook.react.common.mapbuffer.WritableMapBuffer: android.util.SparseArray values
com.facebook.react.util.ExceptionDataHelper: java.lang.String EXTRA_DATA_FIELD
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mDefaultHardwareBackBtnHandler
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: java.lang.String EVENT_NAME
com.facebook.react.common.ShakeDetectorKt: float REQUIRED_FORCE
androidx.security.crypto.EncryptedFile: java.lang.String KEYSET_PREF_NAME
androidx.biometric.R$layout: int abc_list_menu_item_icon
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.facebook.react.views.text.internal.span.TextInlineImageSpan: com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.runtime.ReactSurfaceView$Companion Companion
com.swmansion.reanimated.NodesManager$1: java.lang.String val$commandId
androidx.biometric.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.biometric.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mNativeParent
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.DynamicNative$Companion Companion
androidx.biometric.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean fuseboxNetworkInspectionEnabledCache
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_HEIGHT
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.listener.RequestListener mRequestListener
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String mScrollPerfTag
com.facebook.react.uimanager.drawable.BackgroundDrawable: java.util.List backgroundImageLayers
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacParams params_
com.facebook.react.defaults.DefaultReactNativeHost$getUIManagerProvider$1$viewManagerRegistry$1: com.facebook.react.defaults.DefaultReactNativeHost this$0
com.facebook.hermes.intl.Constants: java.lang.String SENSITIVITY_VARIANT
com.facebook.imagepipeline.request.ImageRequest: com.facebook.common.internal.Fn REQUEST_TO_URI_FN
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float startY
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: float spacing
com.facebook.react.animated.NativeAnimatedModule: boolean initializedForFabric
androidx.biometric.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.biometric.R$styleable: int GradientColorItem_android_color
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.MemoryPressureListener mMemoryPressureListener
androidx.biometric.R$styleable: int SearchView_backgroundTint
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats stats
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_UPDATE_ANIMATED_NODE_CONFIG
com.facebook.react.uimanager.TransformHelper: com.facebook.react.uimanager.TransformHelper INSTANCE
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback timerFrameCallback
com.facebook.react.views.text.TextAttributeProps: int UNSET
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_PEN
com.facebook.react.uimanager.JSPointerDispatcher: android.view.ViewGroup mRootViewGroup
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat DEFAULT_INSTANCE
com.facebook.react.ReactFragment: java.lang.String ARG_COMPONENT_NAME
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay AUTO
androidx.biometric.R$styleable: int AppCompatTextView_drawableTint
androidx.biometric.R$attr: int listPreferredItemHeightLarge
com.facebook.react.devsupport.LogBoxDialog: android.view.View reactRootView
androidx.biometric.R$styleable: int AppCompatTheme_colorControlNormal
com.facebook.react.modules.intent.IntentModule$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.ReactShadowNodeImpl: int mRootTag
com.facebook.react.uimanager.ReactShadowNodeImpl: float[] mPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.uimanager.drawable.BorderDrawable: kotlin.properties.ReadWriteProperty borderStyle$delegate
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity LOCALE
androidx.biometric.R$color: int background_material_light
com.facebook.react.uimanager.RootViewManager: com.facebook.react.uimanager.RootViewManager$Companion Companion
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_FAMILY
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] languageAliasKeys3
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
androidx.biometric.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.biometric.BiometricManager: int BIOMETRIC_ERROR_NO_HARDWARE
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1: int $animatedNodeTag
androidx.biometric.R$attr: int spinnerDropDownItemStyle
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
androidx.biometric.R$style: int Base_V23_Theme_AppCompat_Light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String mPropName
androidx.biometric.BiometricPrompt$CryptoObject: android.security.identity.IdentityCredential mIdentityCredential
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.modules.fresco.ImageCacheControl cacheControl
com.facebook.react.runtime.ReactHostImpl: android.content.Context mContext
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerBottomRightCorner
com.swmansion.reanimated.NodesManager: java.lang.Long mFirstUptime
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.proto.AesCmacParams DEFAULT_INSTANCE
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.reactnativecommunity.asyncstorage.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String STATE_DISABLED
androidx.biometric.R$color: int abc_search_url_text_normal
androidx.biometric.R$attr: int checkedTextViewStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: com.facebook.react.animated.TransformAnimatedNode this$0
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableAccumulatedUpdatesInRawPropsAndroidCache
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: java.lang.String property
androidx.biometric.R$styleable: int AppCompatTheme_android_windowIsFloating
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String WIDTH
com.facebook.react.views.text.TextAttributes: float mLetterSpacing
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenHeight
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View sourceView
com.facebook.react.modules.fresco.SystraceRequestListener: java.util.Map requestsId
com.facebook.react.runtime.ReactSurfaceImpl: android.content.Context context
com.facebook.react.R$string: int catalyst_loading_from_url
com.facebook.react.views.scroll.OnScrollDispatchHelper: int prevY
kotlin.SafePublicationLazyImpl: java.lang.Object _value
com.facebook.react.uimanager.events.TouchEvent: int TOUCH_EVENTS_POOL_SIZE
androidx.biometric.R$attr: int drawableTint
androidx.biometric.R$style: int Widget_AppCompat_ActionBar
com.nozbe.watermelondb.Connection$Connected: com.nozbe.watermelondb.WMDatabaseDriver driver
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task TASK_CANCELLED
androidx.biometric.R$color: int abc_tint_spinner
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.biometric.BiometricPrompt$PromptInfo$Builder: int mAllowedAuthenticators
androidx.biometric.R$styleable: int MenuView_android_verticalDivider
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: java.util.concurrent.Executor executor
com.facebook.hermes.intl.PlatformNumberFormatterICU$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$SignDisplay
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext: java.lang.String keyAlias
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSFORM
androidx.biometric.R$id: int search_mag_icon
com.facebook.react.uimanager.UIViewOperationQueue$1: int val$batchId
androidx.biometric.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: int mReactTag
com.facebook.react.devsupport.BundleDownloader$BundleInfo: com.facebook.react.devsupport.BundleDownloader$BundleInfo$Companion Companion
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.ErrorType lastErrorType
androidx.biometric.R$drawable: int abc_textfield_search_material
androidx.biometric.R$styleable: int SearchView_animateMenuItems
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.VelocityHelper mVelocityHelper
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable
androidx.biometric.R$styleable: int[] ActionMenuItemView
androidx.biometric.R$styleable: int View_android_theme
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int _width
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ICONMENU
androidx.biometric.R$attr: int subtitle
androidx.biometric.R$styleable: int AppCompatTheme_actionBarItemBackground
com.facebook.react.views.textinput.ReactEditText: boolean detectScrollMovement
androidx.biometric.BiometricFragment$8: int val$knownErrorCode
androidx.biometric.R$attr: int alertDialogButtonGroupStyle
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: int key
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: java.lang.String[] $iteratorKeys
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String BLOCK_MODE_CBC
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.facebook.react.R$id: int view_clipped
androidx.biometric.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.facebook.react.uimanager.style.RadialGradient$Shape: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.Executor mBGExecutor
com.facebook.react.views.text.ReactBaseTextShadowNode: int mFontStyle
com.facebook.react.views.textinput.ReactEditText: boolean typefaceDirty
androidx.biometric.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
androidx.biometric.R$attr: int actionBarWidgetTheme
com.facebook.hermes.intl.ParsedLocaleIdentifier: java.util.ArrayList unicodeExtensionAttributes
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BLOCK_END
com.facebook.react.CoreModulesPackage$1: com.facebook.react.CoreModulesPackage this$0
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_START
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String LOG_TAG
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType STRING_SET
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIAL_MOUNTING
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper$Companion Companion
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.proto.KeysetInfo$KeyInfo DEFAULT_INSTANCE
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableViewCullingCache
androidx.biometric.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.biometric.R$styleable: int ActionBar_itemPadding
androidx.biometric.R$id: int async
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_BOTTOM_RIGHT_RADIUS
com.facebook.react.views.text.ReactTextView: boolean mTextIsSelectable
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mPathForBorderRadiusOutline
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1: com.facebook.react.uimanager.drawable.BorderDrawable this$0
androidx.biometric.BiometricFragment: androidx.biometric.BiometricViewModel mViewModel
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_Button
androidx.biometric.R$style: int TextAppearance_AppCompat_Small
androidx.biometric.BiometricPrompt$PromptInfo: boolean mIsDeviceCredentialAllowed
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean grayscaleModeEnabled
com.google.crypto.tink.proto.RegistryConfig: int ENTRY_FIELD_NUMBER
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TABPANEL
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.DevSupportManagerFactory mDevSupportManagerFactory
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path pathForBorder
com.facebook.react.uimanager.common.UIManagerType$Companion: com.facebook.react.uimanager.common.UIManagerType$Companion $$INSTANCE
androidx.biometric.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.facebook.react.uimanager.events.PointerEvent: java.lang.String TAG
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int durationMs
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean updateRuntimeShadowNodeReferencesOnCommitCache
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task TASK_NULL
androidx.biometric.R$dimen: int compat_button_padding_vertical_material
androidx.fragment.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
androidx.biometric.BiometricPrompt$PromptInfo$Builder: java.lang.CharSequence mSubtitle
androidx.biometric.R$attr: int colorControlActivated
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ROWHEADER
com.facebook.react.views.scroll.ReactScrollView$1: com.facebook.react.views.scroll.ReactScrollView this$0
androidx.biometric.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object progressBarCtorLock
androidx.biometric.R$style: int Base_AlertDialog_AppCompat
com.nozbe.watermelondb.WMDatabase: android.database.sqlite.SQLiteDatabase db
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.facebook.react.uimanager.LengthPercentage: float value
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String fontFamily
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_OPACITY
androidx.biometric.R$attr: int icon
androidx.activity.OnBackPressedCallback: boolean isEnabled
com.facebook.react.runtime.ReactInstance$loadJSBundle$1: com.facebook.react.runtime.ReactInstance this$0
com.facebook.react.modules.network.NetworkingModule: java.util.List uriHandlers
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second DIGIT2
androidx.fragment.app.Fragment: int mTargetRequestCode
com.facebook.react.devsupport.DevSupportManagerBase: int JAVA_ERROR_COOKIE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_USER_LEAVE_HINT_END
androidx.biometric.R$color: int ripple_material_light
androidx.biometric.R$drawable: int abc_textfield_activated_mtrl_alpha
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource imageSource
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_Solid
androidx.biometric.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.facebook.react.uimanager.UIViewOperationQueue$AnimationOperation: int mAnimationID
androidx.biometric.R$styleable: int Toolbar_buttonGravity
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.facebook.react.fabric.LongStreamingStats: int len
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle FULL
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener mLayoutUpdateListener
androidx.biometric.R$style: int Base_Widget_AppCompat_ListView
androidx.biometric.R$dimen: int fingerprint_icon_size
com.facebook.react.jstasks.LinearCountingRetryPolicy: int retryAttempts
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.util.Queue mPendingEventQueue
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: int VERSION_FIELD_NUMBER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.hermes.intl.LocaleObjectAndroid: java.util.Locale mLocale
androidx.biometric.R$dimen: int hint_pressed_alpha_material_dark
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver highTextContrastObserver
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
androidx.biometric.R$attr: int listMenuViewStyle
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: int _inputType
com.facebook.react.ReactInstanceManager: boolean mInstanceManagerInvalidated
androidx.biometric.R$styleable: int MenuItem_iconTintMode
androidx.biometric.R$styleable: int ViewBackgroundHelper_backgroundTint
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mEndFillColor
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.JSONArguments INSTANCE
androidx.biometric.R$styleable: int AppCompatTheme_buttonStyleSmall
androidx.biometric.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
androidx.biometric.R$styleable: int MenuItem_android_icon
androidx.biometric.BiometricPrompt: int ERROR_NEGATIVE_BUTTON
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextBreakStrategy
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] $VALUES
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient client
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec nativeModulesQueueSpec
com.facebook.react.ReactFragment: java.lang.String ARG_DISABLE_HOST_LIFECYCLE_EVENTS
com.facebook.hermes.intl.Collator: java.lang.String mResolvedCollation
com.facebook.react.views.view.ReactViewGroup: int ARRAY_CAPACITY_INCREMENT
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.blob.BlobModule$networkingRequestBodyHandler$1 networkingRequestBodyHandler
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: android.view.ViewGroup scrollView
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowOffsetDy
androidx.biometric.R$style: int Base_V21_Theme_AppCompat_Light
com.facebook.react.uimanager.UIImplementation$1: com.facebook.react.uimanager.UIImplementation this$0
androidx.biometric.R$styleable: int[] StateListDrawableItem
com.facebook.react.packagerconnection.ReconnectingWebSocket: okhttp3.WebSocket webSocket
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.facebook.react.uimanager.Spacing: int valueFlags
com.facebook.react.ReactInstanceManagerBuilder: java.lang.String mJSMainModulePath
androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT LEAVE
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$WeekDay
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mReattachedViews
androidx.biometric.R$color: int bright_foreground_material_dark
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.debug.FpsDebugFrameCallback$Companion Companion
androidx.biometric.R$color: int abc_primary_text_material_dark
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task mReloadTask
com.google.crypto.tink.proto.KmsAeadKeyFormat: java.lang.String keyUri_
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_X
com.facebook.react.util.RNLog: int ERROR
androidx.biometric.R$id: int accessibility_custom_action_22
androidx.biometric.BiometricViewModel: boolean mIsIgnoringCancel
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mViewTagsToHide
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
androidx.biometric.R$styleable: int Toolbar_title
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.google.crypto.tink.proto.AesGcmKeyFormat: int keySize_
androidx.biometric.R$style: int Base_V26_Theme_AppCompat_Light
com.facebook.react.runtime.ReactHostImpl$CreationResult: boolean mIsReloading
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Subhead
androidx.biometric.BiometricPrompt$PromptInfo$Builder: java.lang.CharSequence mTitle
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl jsQueueThread
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
androidx.biometric.R$dimen: int compat_notification_large_icon_max_width
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.runtime.ReactHostImpl: java.lang.String TAG
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_INVALID
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.views.text.TextAttributes mTextAttributes
com.facebook.react.devsupport.DevSupportManagerBase: android.content.Context applicationContext
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable currentIdleCallbackRunnable
com.oblador.vectoricons.VectorIconsModuleImpl: java.util.Map sTypefaceCache
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener touchExplorationStateChangeListener
androidx.biometric.R$attr: int buttonGravity
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_ActionBar
androidx.biometric.R$styleable: int Toolbar_maxButtonHeight
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType SCROLL
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ASSET_TYPE_VIDEOS
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_LEFT_COLOR
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map bubblingEventTypeConstants
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String KEYSTORE_TYPE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.facebook.react.uimanager.style.ColorEdges: int top
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean disableMountItemReorderingAndroidCache
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: com.facebook.react.bridge.WritableMap mParams
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$style: int Base_Widget_AppCompat_SeekBar
com.facebook.hermes.intl.PlatformNumberFormatterICU: android.icu.text.NumberFormat mNumberFormat
com.facebook.react.views.text.internal.span.ShadowStyleSpan: int color
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.uimanager.JSPointerDispatcher jsPointerDispatcher
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT MOVE
com.facebook.react.animated.PropsAnimatedNode: com.facebook.react.bridge.JavaOnlyMap propMap
com.facebook.react.animated.DecayAnimation: double fromValue
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_COLLECTION_ITEM
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1: long count
com.facebook.react.views.text.ReactTextView: boolean mAdjustsFontSizeToFit
com.facebook.react.packagerconnection.ReconnectingWebSocket: java.lang.String TAG
com.facebook.react.R$string: int state_off_description
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_BREAK_STRATEGY
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OUT_CAPTURE
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: com.google.crypto.tink.proto.AesGcmHkdfStreamingParams DEFAULT_INSTANCE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LINK
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int ENTERING
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String EXTRAPOLATE_TYPE_EXTEND
androidx.fragment.app.Fragment: android.os.Handler mPostponedHandler
androidx.biometric.R$styleable: int Toolbar_navigationContentDescription
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mSnapInterval
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: java.lang.String description
com.facebook.react.DebugCorePackage: kotlin.Lazy viewManagersMap$delegate
androidx.biometric.BiometricFragment$ShowPromptForAuthenticationRunnable: java.lang.ref.WeakReference mFragmentRef
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole LIST
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_START_ANIMATING_NODE
com.facebook.react.bridge.ReactIgnorableMountingException: com.facebook.react.bridge.ReactIgnorableMountingException$Companion Companion
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerTopLeftCorner
com.facebook.react.R$anim: int catalyst_push_up_out
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableNetworkEventReportingCache
androidx.biometric.BiometricViewModel: java.util.concurrent.Executor mClientExecutor
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind PARENT
com.facebook.react.runtime.JSCInstance: com.facebook.react.runtime.JSCInstance$Companion Companion
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int VALUE_OFFSET
com.facebook.react.animated.TrackingAnimatedNode: int toValueNode
androidx.biometric.FingerprintDialogFragment$3: androidx.biometric.FingerprintDialogFragment this$0
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName LONG
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableViewRecyclingForTextCache
androidx.drawerlayout.widget.DrawerLayout: boolean sEdgeSizeUsingSystemGestureInsets
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap headers
androidx.biometric.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year DIGIT2
com.facebook.react.ReactInstanceManager: boolean mKeepActivity
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.permissions.PermissionsModule$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mOriginalOffsetTop
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.react.ReactRootView: boolean mWasMeasured
com.facebook.react.views.textinput.ReactTextInputShadowNode: com.facebook.react.views.textinput.ReactTextInputShadowNode$Companion Companion
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.reflect.Method mSetter
com.facebook.react.animated.SpringAnimation: double MAX_DELTA_TIME_SEC
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: java.io.File $outputFile
androidx.biometric.BiometricViewModel$DefaultExecutor: android.os.Handler mHandler
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType CLOSEST_CORNER
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float fontScale
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String KEY_KEYSET_ALIAS
androidx.biometric.R$style: int Widget_AppCompat_RatingBar
com.facebook.react.fabric.mounting.SurfaceMountingManager: androidx.collection.SparseArrayCompat mTagSetForStoppedSurface
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role BANNER
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener this$1
com.oblador.keychain.KeychainModule$Rules: java.lang.String AUTOMATIC_UPGRADE
androidx.biometric.R$id: int right_icon
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
com.facebook.react.modules.blob.BlobCollector: com.facebook.react.modules.blob.BlobCollector INSTANCE
androidx.biometric.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.facebook.react.animated.ObjectAnimatedNode: java.lang.String NODE_TAG_KEY
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mTempRectForBorderRadiusOutline
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String CONTENT_OFFSET_LEFT
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: int $requestId
androidx.biometric.R$styleable: int AppCompatTextView_drawableEndCompat
com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode tileMode
com.reactnativecommunity.netinfo.NetInfoModule: int numberOfListeners
com.facebook.react.uimanager.UIManagerModule$3: int val$heightMeasureSpec
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder turboModuleManagerDelegateBuilder
androidx.biometric.R$color: int abc_secondary_text_material_dark
androidx.biometric.R$styleable: int AppCompatTheme_actionModeBackground
com.oblador.keychain.KeychainModule$Errors: java.lang.String E_SUPPORTED_BIOMETRY_ERROR
androidx.biometric.R$attr: int alphabeticModifiers
androidx.biometric.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_STANDARD
com.facebook.react.packagerconnection.FileIoHandler$1: com.facebook.react.packagerconnection.FileIoHandler this$0
androidx.biometric.R$dimen: int abc_action_bar_default_padding_end_material
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue operations
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.concurrent.atomic.AtomicInteger lastTaskId
androidx.biometric.R$styleable: int AlertDialog_buttonIconDimen
com.facebook.react.bridge.JsonWriterHelper$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_Switch
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] $VALUES
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: com.facebook.jni.HybridData mHybridData
com.facebook.react.devsupport.DevInternalSettings: boolean isStartSamplingProfilerOnInit
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
androidx.biometric.FingerprintDialogFragment: android.widget.TextView mHelpMessageView
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: int mDestX
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role FEED
androidx.biometric.R$id: int parentPanel
com.facebook.react.uimanager.ViewAtIndex: int mIndex
androidx.biometric.R$id: int scrollIndicatorUp
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String NAME
com.facebook.react.util.JSStackTrace: java.util.regex.Pattern FILE_ID_PATTERN
com.facebook.react.bridge.ReadableArrayBuilder: com.facebook.react.bridge.WritableArray array
com.facebook.react.uimanager.TransformHelper: java.lang.ThreadLocal helperMatrix
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics screenDisplayMetrics
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: java.lang.String NATIVE_MODULE_NAME
androidx.biometric.R$drawable: int notification_icon_background
androidx.biometric.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mUsingCustomStart
androidx.biometric.R$style: int AlertDialog_AppCompat_Light
com.facebook.react.runtime.ReactHostImpl$1: com.facebook.react.runtime.ReactHostImpl this$0
com.facebook.react.devsupport.DebugOverlayController: android.widget.FrameLayout fpsDebugViewContainer
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.util.HashMap mAccessibilityActionsMap
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_ORIENTATION
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation$Companion Companion
com.facebook.react.views.scroll.ScrollEvent: int contentHeight
androidx.biometric.R$id: int action_mode_bar
com.facebook.react.views.drawer.events.DrawerSlideEvent: java.lang.String EVENT_NAME
androidx.biometric.R$styleable: int SwitchCompat_android_textOn
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mCenterDrawPath
com.swmansion.reanimated.keyboard.Keyboard: int mActiveTransitionCounter
androidx.biometric.AuthenticatorUtils: int BIOMETRIC_CLASS_MASK
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OVER
androidx.biometric.R$attr: int contentInsetRight
com.facebook.hermes.intl.ParsedLocaleIdentifier: com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier transformedLanguageIdentifier
androidx.biometric.R$attr: int buttonBarNeutralButtonStyle
com.facebook.react.views.scroll.ReactScrollView: int mSnapInterval
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream
com.facebook.react.uimanager.common.UIManagerType$Companion: int FABRIC
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow SCROLL
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$Position position
androidx.biometric.R$color: int dim_foreground_material_light
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.view.DraweeHolder draweeHolder
org.pgsqlite.SQLitePlugin: java.util.concurrent.ConcurrentHashMap dbrmap
androidx.biometric.R$styleable: int[] AppCompatImageView
com.swmansion.reanimated.sensor.ReanimatedSensorListener: android.view.Display display
androidx.biometric.R$attr: int homeAsUpIndicator
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int CIPHERTEXT_SEGMENT_SIZE_FIELD_NUMBER
androidx.biometric.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.biometric.R$dimen: int abc_dropdownitem_text_padding_left
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType PERF_MARKERS
com.facebook.react.modules.network.ProgressRequestBody: okhttp3.RequestBody requestBody
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_BOTTOM_RIGHT_RADIUS
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_DOCUMENT_DIRECTORY
com.facebook.react.R$string: int catalyst_hot_reloading_stop
androidx.biometric.R$attr: int fontStyle
androidx.biometric.R$style: int Base_Theme_AppCompat_CompactMenu
com.facebook.react.R$string: int catalyst_debug_open_disabled
com.facebook.react.bridge.interop.InteropModuleRegistry: java.util.Map supportedModules
androidx.biometric.R$layout: int custom_dialog
com.facebook.react.ReactInstanceManager: java.lang.String mJSMainModulePath
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme[] $VALUES
com.facebook.react.uimanager.UIManagerModuleConstants: java.lang.String ACTION_DISMISSED
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
androidx.biometric.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.facebook.react.modules.i18nmanager.I18nUtil: java.lang.String KEY_FOR_PREFS_ALLOWRTL
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] $VALUES
androidx.biometric.R$color: int androidx_core_secondary_text_default_material_light
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage endEnd
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object initialValue
com.facebook.react.views.text.ReactTextView: boolean mContainsImages
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_EXTENSION_PARAM_NUMERIC_LONG
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TREE
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TREEITEM
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.facebook.react.views.scroll.ReactScrollViewHelper: java.util.concurrent.CopyOnWriteArrayList scrollListeners
com.facebook.react.modules.dialog.AlertFragment: java.lang.String ARG_ITEMS
androidx.biometric.R$attr: int contentInsetLeft
com.swmansion.reanimated.keyboard.Keyboard: int SYSTEM_BAR_TYPE_MASK
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PADDING
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.facebook.react.bridge.JavaOnlyMap$Companion$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$drawable: int abc_item_background_holo_light
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_TRANSFORM_MATRIX
androidx.biometric.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.biometric.R$color: int material_deep_teal_500
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String NONE
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper looper
com.facebook.react.modules.core.JavaTimerManager: float FRAME_DURATION_MS
androidx.biometric.R$styleable: int[] Toolbar
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.blob.BlobModule$Companion Companion
androidx.biometric.R$attr: int font
com.facebook.react.R$drawable: int paused_in_debugger_dialog_background
androidx.biometric.R$style: int Widget_AppCompat_Button
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity VARIANT
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.facebook.react.LazyReactPackage$1: com.facebook.react.LazyReactPackage this$0
androidx.biometric.BiometricFragment: int CANCELED_FROM_NEGATIVE_BUTTON
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
org.pgsqlite.SQLitePlugin: java.util.concurrent.ExecutorService threadPool
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: com.facebook.react.runtime.BridgelessReactContext context
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.DevServerHelper$Companion Companion
androidx.biometric.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.biometric.R$attr: int fontProviderFetchTimeout
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean mIsTransitionPrepared
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
androidx.biometric.R$style: int Widget_AppCompat_ActionButton
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TAB
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap zIndexHash
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.FabricEventDispatcher$Companion Companion
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: int mDestY
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
org.pgsqlite.SQLitePlugin: android.content.Context context
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.core.DownsampleMode mDownsampleOverride
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: float mTargetY
androidx.biometric.R$id: int action_mode_close_button
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean fuseboxNetworkInspectionEnabledCache
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int keyId_
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: float BLUR_RADIUS_SIGMA_SCALE
androidx.biometric.R$drawable: int abc_switch_thumb_material
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion Companion
androidx.biometric.R$styleable: int AppCompatTheme_dialogCornerRadius
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String text
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.lang.ref.WeakReference mWeakAndroidUIScheduler
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: com.facebook.react.uimanager.UIBlock mBlock
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.oblador.keychain.KeychainModule: java.lang.String KEYCHAIN_MODULE
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE
androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING
androidx.biometric.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.facebook.react.R$id: int accessibility_state
com.facebook.react.animated.ModulusAnimatedNode: int inputNode
androidx.biometric.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst UPPER
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.NodesManager mNodesManager
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer packagerLocationCustomizer
androidx.biometric.R$attr: int iconTintMode
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: java.util.Map INTERPOLATOR
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$special$$inlined$sortBy$1: android.text.Spanned $text$inlined
androidx.biometric.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int LARGE
androidx.biometric.R$styleable: int[] AnimatedStateListDrawableTransition
com.facebook.react.views.textinput.ReactEditText: boolean disableTextDiffing
com.facebook.react.BuildConfig: boolean UNSTABLE_ENABLE_FUSEBOX_RELEASE
androidx.biometric.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String NAME
androidx.biometric.R$styleable: int SwitchCompat_track
androidx.biometric.R$style: int Widget_AppCompat_ListPopupWindow
com.facebook.react.modules.network.ProgressResponseBody$source$1: com.facebook.react.modules.network.ProgressResponseBody this$0
com.google.crypto.tink.proto.KeyData: int KEY_MATERIAL_TYPE_FIELD_NUMBER
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.ReactInstanceManager this$0
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_MINIMUM_FONT_SIZE
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManager$ReactContextInitParams mPendingReactContextInitParams
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform NONE
androidx.biometric.R$styleable: int GradientColor_android_centerX
androidx.biometric.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.facebook.react.R$string: int catalyst_heap_capture
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_X
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableJSRuntimeGCOnMemoryPressureOnIOSCache
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.facebook.hermes.intl.LocaleIdTokenizer: java.lang.CharSequence mLocaleIdBuffer
com.facebook.react.animated.InterpolationAnimatedNode$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$style: int Platform_V25_AppCompat_Light
androidx.biometric.BiometricViewModel: androidx.biometric.AuthenticationCallbackProvider mAuthenticationCallbackProvider
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object value
com.oblador.vectoricons.VectorIconsModuleImpl: java.lang.String NAME
androidx.biometric.R$dimen: int notification_small_icon_size_as_large
androidx.biometric.R$color: int ripple_material_dark
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: android.graphics.Rect mVisibleViewArea
com.facebook.react.uimanager.ViewProps: java.lang.String MIX_BLEND_MODE
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.LocaleObjectAndroid mLocale
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean mResizingAllowedOverride
androidx.biometric.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.facebook.react.uimanager.drawable.BorderDrawable: java.lang.Integer[] borderColors
com.facebook.react.devsupport.RedBoxContentView: android.view.View lineSeparator
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: int hkdfHashType_
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey: com.oblador.keychain.cipherStorage.CipherStorageBase this$0
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: com.facebook.react.devsupport.DevSupportManagerBase this$0
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchDispatchViewUpdatesTime
androidx.biometric.R$anim: int abc_slide_in_bottom
com.facebook.react.uimanager.ReactStage$Companion: com.facebook.react.uimanager.ReactStage$Companion $$INSTANCE
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle MEDIUM
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float DEFAULT_CIRCLE_TARGET
com.facebook.react.fabric.FabricUIManager$1: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.runtime.BridgelessReactStateTracker: java.util.List states
com.facebook.react.views.view.ReactViewGroup: java.util.Set mChildrenRemovedWhileTransitioning
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge LEFT
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_DECORATION_STYLE
com.facebook.react.views.textinput.ReactTextInputTextWatcher: java.lang.String previousText
com.facebook.react.common.DebugServerException: java.lang.String originalMessage
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.ReactStylesDiffMap mCurrentProps
androidx.biometric.R$styleable: int MenuItem_android_numericShortcut
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$Companion Companion
androidx.biometric.BiometricManager: android.hardware.biometrics.BiometricManager mBiometricManager
com.facebook.react.animated.ColorAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$2: com.facebook.react.jstasks.HeadlessJsTaskConfig $taskConfig
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrParams params_
com.facebook.react.R$id: int fps_text
com.swmansion.reanimated.sensor.ReanimatedSensorType: int type
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mHitPathByPointerId
com.oblador.keychain.cipherStorage.CipherStorageBase: java.nio.charset.Charset UTF8
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1: int $requestId
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OVER_CAPTURE
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction mNotifyAboutKeyboardChange
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager mReactInstanceManager
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper INSTANCE
com.facebook.drawee.view.DraweeView: boolean sGlobalLegacyVisibilityHandlingEnabled
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
androidx.biometric.R$style: int ThemeOverlay_AppCompat
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1: com.facebook.react.bridge.ReadableArray $opsAndArgs
androidx.drawerlayout.widget.DrawerLayout: int DEFAULT_SCRIM_COLOR
com.facebook.hermes.intl.Constants: java.lang.String[] SENSITIVITY_POSSIBLE_VALUES
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
androidx.biometric.R$attr: int voiceIcon
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName SHORTGENERIC
com.swmansion.reanimated.BuildConfig: int EXOPACKAGE_FLAGS
com.facebook.react.views.scroll.ReactScrollView: android.view.View mContentView
androidx.biometric.R$layout: int abc_screen_content_include
androidx.biometric.R$style: int Base_Widget_AppCompat_PopupWindow
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: java.lang.String LOG_TAG
androidx.biometric.R$dimen: int abc_list_item_height_small_material
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
androidx.biometric.R$id: int accessibility_custom_action_10
com.facebook.react.views.text.ReactTextUpdate: int jsEventCounter
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.biometric.R$styleable: int ColorStateListItem_android_color
com.facebook.react.uimanager.ReactStage: int MODULE_DID_LOAD
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean SHOW_CHANGED_VIEW_HIERARCHIES
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle$Companion Companion
com.facebook.react.defaults.DefaultReactHostDelegate: java.util.List reactPackages
com.facebook.react.animated.PropsAnimatedNode: int connectedViewTag
com.facebook.react.packagerconnection.FileIoHandler: java.util.Map requestHandlers
com.facebook.hermes.intl.Collator: com.facebook.hermes.intl.ILocaleObject mResolvedLocaleObject
com.facebook.react.ReactInstanceManager: com.facebook.react.MemoryPressureRouter mMemoryPressureRouter
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_Y
androidx.biometric.R$styleable: int AppCompatTheme_toolbarStyle
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
androidx.biometric.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: com.facebook.react.ReactRootView this$0
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableFabricRendererCache
com.facebook.react.uimanager.events.FabricEventDispatcher: boolean isDispatchScheduled
androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mInnerClipPathForBorderRadius
com.swmansion.rnscreens.ScreensModule: java.util.concurrent.atomic.AtomicBoolean isActiveTransition
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.Spacing borderWidth
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole KEYBOARDKEY
androidx.biometric.R$array: int assume_strong_biometrics_models
com.facebook.react.animated.ColorAnimatedNode: int rNodeId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState mReactScrollViewScrollState
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean sTriedToGetScrollerField
com.facebook.drawee.view.DraweeView: com.facebook.drawee.view.DraweeHolder mDraweeHolder
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.fabric.mounting.MountItemDispatcher: long mBatchedExecutionTime
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventEmitterImpl mReactEventEmitter
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: com.facebook.react.bridge.ReactApplicationContext reactContext
androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID
com.facebook.react.packagerconnection.PackagerConnectionSettings: android.content.Context appContext
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay mResolvedCompactDisplay
androidx.biometric.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
androidx.appcompat.widget.SwitchCompat: int mSwitchRight
com.facebook.react.views.scroll.ReactScrollView: boolean mDisableIntervalMomentum
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Display3
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mOverflowInset
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String NAME
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mScrollEventThrottle
androidx.biometric.R$style: int Theme_AppCompat_DayNight_Dialog
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.fabric.StateWrapperImpl$Companion Companion
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: java.lang.ref.WeakReference viewRef
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String NAME
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper INSTANCE
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType$Companion Companion
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: long ttl
androidx.biometric.R$styleable: int FontFamilyFont_font
com.facebook.react.animated.SpringAnimation$PhysicsState: double position
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: com.google.crypto.tink.proto.AesGcmHkdfStreamingKey DEFAULT_INSTANCE
com.facebook.react.animated.AdditionAnimatedNode: int[] inputNodes
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.Matrix sTempTransform
com.google.crypto.tink.proto.HmacKeyFormat: int VERSION_FIELD_NUMBER
com.facebook.react.uimanager.JSPointerDispatcher: int mCoalescingKey
androidx.biometric.R$drawable: int abc_spinner_textfield_background_material
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: com.google.crypto.tink.KeyTemplate mDeterministicAeadKeyTemplate
androidx.biometric.R$anim: int abc_fade_out
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String componentStack
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList mListeners
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.react.jscexecutor.JSCExecutor$Companion Companion
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: com.facebook.react.modules.core.JavaTimerManager this$0
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.devsupport.BridgeDevSupportManager: com.facebook.react.devsupport.BridgeDevSupportManager$Companion Companion
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.RotationOptions mRotationOptions
com.facebook.react.views.modal.ShowEvent: java.lang.String EVENT_NAME
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_UP
com.facebook.react.uimanager.events.Event: boolean isInitialized
com.facebook.drawee.view.DraweeView: float mAspectRatio
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int _height
com.facebook.react.bridge.Inspector$Page: java.lang.String vm
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: int derivedKeySize_
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_FAMILY
com.facebook.react.uimanager.ViewProps: java.lang.String MIN_WIDTH
androidx.biometric.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.facebook.react.ReactInstanceManager: boolean mRequireActivity
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_ELLIPSIZE_MODE
androidx.biometric.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodeToView$1: int $viewTag
androidx.biometric.R$dimen: int highlight_alpha_material_dark
androidx.biometric.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$FormatMatcher
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String catalogueName_
com.facebook.react.devsupport.StackTraceHelper: java.util.regex.Pattern STACK_FRAME_PATTERN1
androidx.biometric.R$styleable: int AppCompatTheme_colorPrimaryDark
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
androidx.biometric.R$string: int abc_action_mode_done
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextViewManager$Companion Companion
com.facebook.react.views.text.TextAttributeProps: boolean mAllowFontScaling
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: java.lang.String resizeMode
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_OFFSET
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.UIViewOperationQueue mUIViewOperationQueue
androidx.fragment.app.FragmentActivity: boolean mCreated
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener mListener
com.facebook.react.common.mapbuffer.MapBuffer$Companion: com.facebook.react.common.mapbuffer.MapBuffer$Companion $$INSTANCE
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.bridge.ReadableMap mCurrentContentOffset
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_CONNECT_ANIMATED_NODE_TO_VIEW
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
androidx.biometric.R$attr: int windowActionBarOverlay
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
androidx.biometric.R$drawable: int notification_template_icon_bg
com.facebook.react.views.text.FontMetricsUtil: java.lang.String CAP_HEIGHT_MEASUREMENT_TEXT
com.facebook.react.views.text.TextAttributeProps: java.lang.String mFontFamily
com.facebook.react.bridge.ReadableNativeMap: kotlin.Lazy localTypeMap$delegate
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
androidx.biometric.R$styleable: int SearchView_submitBackground
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_ENTER
androidx.appcompat.widget.SwitchCompat: boolean mEnforceSwitchWidth
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.react.fabric.SurfaceHandlerBinding$Companion Companion
androidx.biometric.R$style: int Base_TextAppearance_AppCompat
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$dimen: int notification_media_narrow_margin
com.google.crypto.tink.shaded.protobuf.AbstractMessageLite: int memoizedHashCode
com.facebook.hermes.intl.Constants: java.lang.String[] COLLATOR_USAGE_POSSIBLE_VALUES
androidx.biometric.R$styleable: int TextAppearance_android_textSize
androidx.biometric.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.swmansion.reanimated.layoutReanimation.Snapshot: float[] identityMatrix
com.facebook.react.modules.core.ReactChoreographer$CallbackType: int order
androidx.biometric.R$id: int scrollView
androidx.biometric.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.biometric.R$drawable: int notification_bg_normal_pressed
com.facebook.react.devsupport.StackTraceHelper: java.util.regex.Pattern STACK_FRAME_PATTERN2
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean animatedShouldSignalBatchCache
com.swmansion.reanimated.keyboard.WindowsInsetsManager: boolean mIsStatusBarTranslucent
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManagerBinding mBinding
com.swmansion.rnscreens.SearchBarManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer$Companion Companion
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_STOP_ANIMATION
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useFabricInteropCache
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.biometric.FingerprintDialogFragment$4: androidx.biometric.FingerprintDialogFragment this$0
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.facebook.react.modules.statusbar.StatusBarModule: com.facebook.react.modules.statusbar.StatusBarModule$Companion Companion
com.facebook.react.R$string: int catalyst_reload_button
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.JSExceptionHandler exceptionHandler
com.facebook.react.uimanager.ViewProps: int[] PADDING_MARGIN_SPACING_TYPES
androidx.biometric.BiometricPrompt$CryptoObject: javax.crypto.Cipher mCipher
androidx.biometric.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
androidx.biometric.BiometricManager$Authenticators: int BIOMETRIC_STRONG
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaNode mYogaNode
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useAlwaysAvailableJSErrorHandlingCache
androidx.biometric.R$attr: int buttonIconDimen
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_BOTTOM_RIGHT_RADIUS
com.facebook.react.modules.dialog.AlertFragment: com.facebook.react.modules.dialog.AlertFragment$Companion Companion
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: java.util.Set mFragmentsWithListenerRegistry
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int _surfaceId
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl RELOAD
com.facebook.react.uimanager.JSPointerDispatcher$1: com.facebook.react.uimanager.events.EventDispatcher val$eventDispatcher
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Year
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useTurboModulesCache
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: long mMaximumDatabaseSize
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int DISCRETE
androidx.biometric.R$drawable: int btn_checkbox_unchecked_mtrl
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.facebook.react.views.switchview.ReactSwitchShadowNode: int height
com.facebook.react.modules.core.ReactChoreographer$CallbackType: kotlin.enums.EnumEntries $ENTRIES
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: int HKDF_HASH_TYPE_FIELD_NUMBER
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: java.lang.String SHARED_PREFERENCES_FILENAME
androidx.biometric.R$attr: int drawableTintMode
com.facebook.react.fabric.FabricUIManager$4: int val$initialReactTag
androidx.appcompat.widget.SwitchCompat: int SANS
com.facebook.react.devsupport.inspector.InspectorNetworkHelper$loadNetworkResource$1: com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener $listener
androidx.biometric.R$styleable: int ActionBar_elevation
androidx.appcompat.app.AppCompatActivity: java.lang.String DELEGATE_TAG
com.facebook.react.uimanager.DisplayMetricsHolder: java.lang.String INITIALIZATION_MISSING_MESSAGE
com.swmansion.rnscreens.ScreenFooterManager: com.swmansion.rnscreens.ScreenFooterManager$Companion Companion
com.facebook.react.util.ExceptionDataHelper: com.facebook.react.util.ExceptionDataHelper INSTANCE
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.biometric.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.JavaScriptContextHolder javaScriptContextHolder
androidx.biometric.BiometricManager: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int deltaHeight
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.packagerconnection.FileIoHandler: java.lang.String TAG
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$backPressedCallback$1: kotlin.jvm.functions.Function0 $handleCloseAction
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] scale
androidx.biometric.BiometricPrompt: int ERROR_LOCKOUT
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.events.RCTEventEmitter mCustomEventHandler
com.facebook.react.runtime.internal.bolts.Task: java.util.concurrent.Executor IMMEDIATE_EXECUTOR
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String cppVersion
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.DimensionPropConverter: com.facebook.react.bridge.DimensionPropConverter$Companion Companion
androidx.biometric.R$style: int Widget_AppCompat_AutoCompleteTextView
com.facebook.react.uimanager.style.BorderStyle: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$styleable: int SearchView_searchHintIcon
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.biometric.R$attr: int navigationMode
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.ILocaleObject mResolvedLocaleObject
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: int jsArgCount
androidx.biometric.R$styleable: int AppCompatTheme_buttonStyle
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KeyTemplate dekTemplate_
com.facebook.react.uimanager.style.ComputedBorderRadius$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$id: int src_atop
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mOuterClipTempRectForBorderRadius
com.facebook.react.devsupport.MultipartStreamReader: com.facebook.react.devsupport.MultipartStreamReader$Companion Companion
com.facebook.react.views.text.TextAttributeProps: int mTextAlign
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: com.facebook.react.views.modal.ReactModalHostView this$0
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: kotlin.enums.EnumEntries $ENTRIES
com.swmansion.reanimated.NodesManager$3: java.util.concurrent.Semaphore val$semaphore
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: com.swmansion.reanimated.keyboard.WindowsInsetsManager mWindowsInsetsManager
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState BEFORE_RESUME
androidx.biometric.R$styleable: int LinearLayoutCompat_android_baselineAligned
androidx.biometric.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.biometric.R$string: int abc_activitychooserview_choose_application
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role CELL
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats streamingTransactionEndStats
androidx.biometric.BiometricPrompt: int ERROR_UNABLE_TO_PROCESS
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String GRAYSCALE_MODE_EVENT_NAME
com.facebook.react.views.text.TextAttributeProps: float mOpacity
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.util.JSStackTrace: java.lang.String FILE_KEY
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel CANARY
com.facebook.react.uimanager.TouchTargetHelper: android.graphics.PointF tempPoint
androidx.biometric.R$id: int search_voice_btn
com.facebook.react.module.model.ReactModuleInfo: boolean isTurboModule
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$Companion Companion
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Dimensions: com.facebook.react.uimanager.LengthPercentage y
com.facebook.react.uimanager.common.UIManagerType$Companion: int DEFAULT
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.common.LifecycleState mInitialLifecycleState
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] $VALUES
androidx.biometric.R$dimen: int abc_list_item_height_material
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1: boolean $animated
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second mSecond
androidx.biometric.R$string: int abc_menu_shift_shortcut_label
com.facebook.react.uimanager.JSPointerDispatcher: int UNSELECTED_VIEW_TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: double fps
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float blurRadius
com.facebook.react.bridge.JSBundleLoader$Companion$createAssetLoader$1: java.lang.String $assetUrl
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.LayoutShadowNode: boolean mCollapsable
com.facebook.react.devsupport.DebugOverlayController: com.facebook.react.devsupport.DebugOverlayController$Companion Companion
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager uiManager
com.google.crypto.tink.proto.KeyData: int keyMaterialType_
com.facebook.react.modules.network.ForwardingCookieHandler: com.facebook.react.modules.network.ForwardingCookieHandler$Companion Companion
androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker
androidx.biometric.R$attr: int actionBarSize
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int status_
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole NONE
androidx.biometric.R$style: int Widget_AppCompat_ActionMode
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence mSubtitle
androidx.biometric.R$style: int TextAppearance_AppCompat
androidx.biometric.R$dimen: int abc_text_size_medium_material
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object result
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String BACKSPACE_KEY_VALUE
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] $VALUES
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.text.Format mFinalFormat
androidx.biometric.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.facebook.react.runtime.internal.bolts.Task: boolean complete
androidx.biometric.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.facebook.react.runtime.internal.bolts.Executors: com.facebook.react.runtime.internal.bolts.Executors INSTANCE
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey: java.security.Key key
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.facebook.react.uimanager.Spacing: int LEFT
com.facebook.react.R$string: int imagebutton_description
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsInIllegalUIState
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String NAME
androidx.biometric.R$id: int accessibility_custom_action_24
com.google.crypto.tink.proto.Keyset$Key: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
androidx.biometric.R$styleable: int SwitchCompat_thumbTextPadding
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: com.facebook.yoga.YogaDirection mLayoutDirection
com.facebook.react.R$layout: int redbox_item_title
androidx.biometric.R$attr: int buttonCompat
com.facebook.react.uimanager.ViewProps: java.lang.String RIGHT
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation SCIENTIFIC
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle H24
com.facebook.react.animated.DecayAnimation: double lastValue
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping INSTANCE
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: int mEventType
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.devsupport.interfaces.DevLoadingViewManager devLoadingViewManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.facebook.react.views.text.TextAttributes: boolean mAllowFontScaling
androidx.biometric.R$id: int tag_screen_reader_focusable
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useFabricInteropCache
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: float[] ZERO_RADII
com.swmansion.reanimated.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GYROSCOPE
androidx.biometric.R$id: int tag_accessibility_clickable_spans
androidx.biometric.R$styleable: int AppCompatTextView_drawableRightCompat
com.facebook.react.views.drawer.events.DrawerOpenedEvent: java.lang.String EVENT_NAME
com.facebook.react.runtime.ReactHostImplDevHelper: com.facebook.react.runtime.ReactHostImpl delegate
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType BOOLEAN
androidx.biometric.R$attr: int listPreferredItemPaddingStart
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.ArrayList stack
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey: java.lang.String name
androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft
androidx.biometric.R$styleable: int AppCompatImageView_tint
androidx.biometric.R$dimen: int abc_action_bar_elevation_material
com.nozbe.watermelondb.BuildConfig: java.lang.String BUILD_TYPE
com.oblador.keychain.cipherStorage.CipherStorageBase: java.util.concurrent.atomic.AtomicBoolean isSupportsSecureHardware
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
androidx.biometric.R$styleable: int AppCompatTheme_actionModeStyle
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int reactTag
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_LEFT_RADIUS
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot targetViewSnapshot
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.lang.Object moduleCleanupLock
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName SHORT
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: java.util.List highlightedElementsRectangles
androidx.biometric.R$dimen: int abc_action_button_min_width_material
com.facebook.react.ReactInstanceManager: java.util.List mViewManagers
androidx.biometric.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String FIREBASE_TEST_LAB
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.events.TouchEvent: long UNSET
androidx.biometric.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month NARROW
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int ANIMATIONS_DRAG_FACTOR
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float mGapBetweenPaths
com.facebook.react.bridge.BridgeReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int AES_CTR_KEY_FORMAT_FIELD_NUMBER
com.facebook.react.util.AndroidVersion: com.facebook.react.util.AndroidVersion INSTANCE
com.facebook.react.views.text.ReactTextUpdate: float paddingTop
com.facebook.react.views.text.TextLayoutManager: java.lang.ThreadLocal sTextPaintInstance
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.BackgroundStyleApplicator INSTANCE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
com.facebook.react.views.textinput.ReactTextScrollWatcher: int previousHorizontal
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderRGB
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int keySize_
androidx.security.crypto.MasterKey: java.lang.String KEYSTORE_PATH_URI
androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod
androidx.biometric.R$styleable: int ActionMode_height
com.facebook.hermes.intl.LocaleObjectAndroid: boolean $assertionsDisabled
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String CONTENT_OFFSET_TOP
androidx.biometric.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role FORM
androidx.biometric.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] $VALUES
com.reactnativecommunity.asyncstorage.SerialExecutor: java.util.ArrayDeque mTasks
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.proto.ChaCha20Poly1305Key DEFAULT_INSTANCE
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String NAME
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String USER_PRESENCE
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String VALUE_COLUMN
androidx.biometric.R$id: int accessibility_custom_action_19
com.facebook.react.util.RNLog: com.facebook.react.util.RNLog INSTANCE
androidx.biometric.R$dimen: int abc_dialog_fixed_width_major
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme overrideColorScheme
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
androidx.biometric.R$styleable: int AppCompatTheme_listMenuViewStyle
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean doRefresh
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String methodName
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
androidx.biometric.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.react.common.MapBuilder$Builder: java.util.Map mMap
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerTopRightCorner
com.facebook.react.devsupport.PerftestDevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings devSettings
com.facebook.react.animated.PropsAnimatedNode: com.facebook.react.bridge.UIManager connectedViewUIManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.react.R$string: int catalyst_debug_open
com.facebook.react.views.textinput.ReactEditText: boolean isSettingTextFromState
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.scroll.ReactScrollViewHelper: boolean DEBUG_MODE
androidx.biometric.R$attr: int paddingBottomNoButtons
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1: com.facebook.react.bridge.Promise $promise
androidx.fragment.app.Fragment: boolean mInLayout
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$GradientSize size
com.facebook.react.animated.NativeAnimatedModule$removeAnimatedEventFromView$1: int $viewTag
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderWidth
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_HINT
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isCanceled
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessReactStateTracker mBridgelessReactStateTracker
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENUBAR
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle mDateStyle
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation COMPACT
com.facebook.react.modules.network.ReactCookieJarContainer: okhttp3.CookieJar cookieJar
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER_LARGE
com.facebook.react.uimanager.drawable.OutlineDrawable: float outlineOffset
androidx.biometric.R$color: int primary_material_light
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: android.view.ViewGroup val$parentView
androidx.biometric.R$styleable: int AppCompatTheme_switchStyle
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics: float left
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_IMAGE_SIZE
com.facebook.react.bridge.CallbackImpl: int callbackId
androidx.biometric.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
com.facebook.hermes.intl.Constants: java.lang.String LOCALEMATCHER
com.facebook.react.views.scroll.ReactScrollView: boolean mSendMomentumEvents
androidx.biometric.R$attr: int textAppearanceSearchResultTitle
com.facebook.react.views.text.FontMetricsUtil: float AMPLIFICATION_FACTOR
androidx.biometric.R$style: int Widget_AppCompat_TextView
com.facebook.react.devsupport.StackTraceHelper: java.lang.String IS_FATAL_KEY
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: android.util.SparseIntArray downTimeToCoalescingKey
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$Style mResolvedStyle
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object mEventsStagingLock
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_EXTENSION_PARAM_CASEFIRST_LONG
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.proto.KeyData DEFAULT_INSTANCE
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier: java.lang.String scriptSubtag
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.StateWrapper stateWrapper
androidx.biometric.R$style: int Platform_V21_AppCompat
androidx.biometric.R$drawable: int abc_list_pressed_holo_dark
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$2: com.facebook.react.ReactInstanceManager $reactInstanceManager
androidx.biometric.R$color: int material_blue_grey_950
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.bridge.ReactApplicationContext reactContext
androidx.biometric.R$styleable: int ActionBar_customNavigationLayout
androidx.biometric.R$style: int Widget_AppCompat_Light_PopupMenu
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: android.widget.PopupWindow devLoadingPopup
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String NAME
androidx.biometric.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.facebook.react.fabric.LongStreamingStats: java.util.Queue maxHeap
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver receiver
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_END_RADIUS
com.facebook.react.devsupport.DevSupportManagerBase: java.io.File jsBundleDownloadedFile
androidx.biometric.R$color: int material_blue_grey_800
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: com.facebook.react.bridge.ReadableArray commandArgs
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.lang.String packageName
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean didLayout
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$TimeStyle
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String TOP_ACCESSIBILITY_ACTION_EVENT
com.facebook.react.views.textinput.ReactTextInputTextWatcher: com.facebook.react.views.textinput.ReactEditText editText
androidx.biometric.R$color: int abc_background_cache_hint_selector_material_dark
com.facebook.jni.CppSystemErrorException: int errorCode
androidx.biometric.R$style: int Widget_AppCompat_Button_Borderless
androidx.biometric.R$id: int normal
com.reactnativecommunity.cameraroll.CameraRollModule: int DELETE_REQUEST_CODE
com.google.crypto.tink.proto.Keyset$Key: int KEY_DATA_FIELD_NUMBER
androidx.biometric.R$styleable: int[] GradientColorItem
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] $VALUES
androidx.biometric.R$string: int abc_shareactionprovider_share_with
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String file
androidx.biometric.R$attr: int windowMinWidthMajor
androidx.biometric.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.facebook.react.views.text.ReactTextUpdate: int textAlign
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
androidx.biometric.R$styleable: int[] ListPopupWindow
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: java.util.Map _eagerViewManagerMap
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int startWidth
com.facebook.hermes.intl.DateTimeFormat: boolean useDefaultNumberSystem
androidx.biometric.R$id: int progress_horizontal
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: float contentWidth
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1: java.util.ArrayList $permissionsToCheck
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: com.facebook.react.devsupport.BundleDownloader this$0
androidx.biometric.R$attr: int tooltipFrameBackground
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] $VALUES
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager viewManager
androidx.biometric.BiometricViewModel$NegativeButtonListener: java.lang.ref.WeakReference mViewModelRef
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.Paint backgroundPaint
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
androidx.biometric.BiometricPrompt$PromptInfo$Builder: java.lang.CharSequence mDescription
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int SCALE_DOWN_DURATION
com.facebook.react.animated.SpringAnimation: double originalValue
com.facebook.react.modules.network.ProgressResponseBody: com.facebook.react.modules.network.ProgressListener progressListener
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: com.facebook.react.bridge.Callback mCallback
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap mTagToViewState
com.facebook.imagepipeline.request.ImageRequest: boolean sCacheHashcode
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT LEAVE_CAPTURE
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.facebook.react.animated.ValueAnimatedNode: double offset
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow
androidx.biometric.R$id: int search_src_text
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_STATE
androidx.biometric.R$string: int abc_capital_on
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$id: int notification_main_column
com.facebook.react.uimanager.ReactRootViewTagGenerator: com.facebook.react.uimanager.ReactRootViewTagGenerator INSTANCE
com.facebook.react.devsupport.RedBoxContentView: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeOffset$1: double $value
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_SUSPENDED
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean cxxNativeAnimatedEnabledCache
com.facebook.react.devsupport.DebugOverlayController: android.view.WindowManager windowManager
com.facebook.react.views.drawer.events.DrawerSlideEvent: com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion Companion
androidx.biometric.R$id: int wrap_content
com.swmansion.reanimated.NodesManager$1: int val$viewTag
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver this$0
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.facebook.react.R$string: int catalyst_debug_connecting
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: android.icu.text.DateFormat mDateFormat
androidx.biometric.R$id: int info
com.facebook.react.ReactRootView: com.facebook.react.ReactAndroidHWInputDeviceHelper mAndroidHWInputDeviceHelper
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
androidx.biometric.R$id: int actions
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1: int $animationId
androidx.biometric.R$style: int Base_V21_Theme_AppCompat
com.facebook.react.common.assets.ReactFontManager$AssetFontFamily: android.util.SparseArray typefaceSparseArray
com.google.crypto.tink.proto.AesCtrKeyFormat: int keySize_
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.common.ShakeDetector shakeDetector
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry INSTANCE
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role mRole
androidx.biometric.R$styleable: int SearchView_headerLayout
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
com.facebook.react.uimanager.events.PointerEventHelper: int X_FLAG_SUPPORTS_HOVER
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String NAME
com.facebook.react.modules.dialog.AlertFragment: java.lang.String ARG_BUTTON_NEGATIVE
androidx.biometric.BiometricFragment$PromptExecutor: android.os.Handler mPromptHandler
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Map mCurrentlyDownPointerIdsToHitPath
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.facebook.react.devsupport.RedBoxContentView: android.view.View$OnClickListener reportButtonOnClickListener
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS
com.facebook.react.uimanager.events.PointerEventHelper$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$styleable: int ColorStateListItem_android_lStar
com.oblador.keychain.KeychainModule$Maps: java.lang.String PASSWORD
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.GuardedFrameCallback mChoreographerCallback
androidx.biometric.BiometricFragment$4: androidx.biometric.BiometricFragment this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
androidx.biometric.R$style: int Base_Widget_AppCompat_PopupMenu
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.biometric.R$styleable: int AppCompatTheme_dividerHorizontal
com.google.crypto.tink.proto.KeyTypeEntry: int KEY_MANAGER_VERSION_FIELD_NUMBER
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge END
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.internal.ChoreographerProvider$Choreographer choreographer$1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.bridge.ReactNativeJniCommonSoLoader: boolean initialized
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel WARNING
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DOCUMENT
androidx.biometric.R$dimen: int abc_list_item_height_large_material
com.facebook.react.views.switchview.ReactSwitch: boolean allowChange
androidx.biometric.R$styleable: int View_android_focusable
com.google.crypto.tink.proto.AesEaxParams: int ivSize_
com.facebook.drawee.view.DraweeView: java.lang.Object mExtraData
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
androidx.biometric.R$attr: int actionModeCloseButtonStyle
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mLastQueriedSurfaceMountingManager
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String METRO_HOST_PROP_NAME
androidx.fragment.app.Fragment: boolean mRemoving
com.facebook.react.views.text.ReactFontManager: com.facebook.react.common.assets.ReactFontManager delegate
com.facebook.react.R$id: int rn_redbox_line_separator
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.style.Overflow mOverflow
androidx.biometric.R$attr: int buttonBarNegativeButtonStyle
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TARGET_SURFACE_KEY
com.facebook.react.uimanager.MeasureSpecAssertions: com.facebook.react.uimanager.MeasureSpecAssertions INSTANCE
com.oblador.keychain.PrefsStorage$ResultSet: java.lang.String cipherStorageName
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map webSocketConnections
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawableKt: float BLUR_RADIUS_SIGMA_SCALE
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: java.lang.String $bundleUrl
com.facebook.react.uimanager.ViewProps: com.facebook.react.uimanager.ViewProps INSTANCE
com.facebook.react.common.JavascriptException: java.lang.String extraDataAsJson
androidx.biometric.R$styleable: int GradientColor_android_tileMode
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableCustomFocusSearchOnClippedElementsAndroidCache
androidx.biometric.R$drawable: int abc_cab_background_internal_bg
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: int index
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object idleCallbackGuard
androidx.biometric.BiometricPrompt$PromptInfo: int mAllowedAuthenticators
androidx.biometric.R$id: int off
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult: com.facebook.hermes.intl.ILocaleObject matchedLocale
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: boolean newArchitectureEnabled
androidx.biometric.R$attr: int titleTextColor
androidx.biometric.R$styleable: int MenuView_android_windowAnimationStyle
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.views.image.ReactImageView: int REMOTE_IMAGE_FADE_DURATION_MS
androidx.biometric.R$dimen: int abc_action_bar_default_height_material
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
androidx.biometric.R$attr: int fontProviderFetchStrategy
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View mTransitionContainer
com.google.crypto.tink.proto.AesCmacParams: int TAG_SIZE_FIELD_NUMBER
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mOffsetByPointerId
com.swmansion.reanimated.NodesManager: int mAnimationsDragFactor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.facebook.hermes.intl.Constants: java.lang.String COLLATION
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1: androidx.biometric.AuthenticationCallbackProvider$Listener val$listener
com.facebook.react.uimanager.LayoutShadowNode: com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue mTempYogaValue
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.facebook.react.modules.debug.FpsDebugFrameCallback: int fourPlusFrameStutters
androidx.biometric.R$dimen: int abc_button_inset_vertical_material
com.facebook.react.views.scroll.ReactScrollView: int UNSET_CONTENT_OFFSET
androidx.biometric.R$id: int group_divider
com.facebook.react.animated.NativeAnimatedModule$dropAnimatedNode$1: int $tag
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int version_
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.proto.AesEaxParams DEFAULT_INSTANCE
androidx.biometric.R$style: int Widget_AppCompat_Button_Colored
com.facebook.react.R$string: int catalyst_change_bundle_location_input_hint
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion Companion
androidx.biometric.R$styleable: int ActionBar_homeLayout
com.facebook.react.runtime.ReactHostImpl$2: kotlin.jvm.functions.Function1 val$onDestroyFinished
com.facebook.react.ReactInstanceManagerBuilder: android.app.Application mApplication
androidx.fragment.app.Fragment: java.lang.String mTag
androidx.fragment.app.DialogFragment: boolean mShownByMe
com.facebook.react.modules.fresco.ImageCacheControl: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$styleable: int ActionBar_displayOptions
androidx.biometric.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.biometric.BiometricViewModel: boolean mIsDelayingPrompt
androidx.biometric.R$styleable: int[] LinearLayoutCompat
com.facebook.react.modules.network.RequestBodyUtil: java.lang.String NAME
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int start
androidx.biometric.R$drawable: int abc_list_divider_material
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String VALUE_KEYSET_ALIAS
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: kotlin.enums.EnumEntries $ENTRIES
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.common.GestureHandlerStateManager gestureHandlerStateManager
androidx.drawerlayout.widget.DrawerLayout: java.lang.String ACCESSIBILITY_CLASS_NAME
okio.ForwardingSource: okio.Source delegate
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role PROGRESSBAR
com.facebook.react.views.imagehelper.ImageSource: double size
com.facebook.react.reactperflogger.NativeModulePerfLogger: com.facebook.jni.HybridData mHybridData
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_LOCATION
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle H12
com.facebook.react.MemoryPressureRouter: java.util.concurrent.CopyOnWriteArrayList listeners
com.facebook.react.common.ShakeDetector: android.hardware.SensorManager sensorManager
com.facebook.react.devsupport.DevServerHelper: java.lang.String DEBUGGER_MSG_DISABLE
androidx.biometric.R$style: int Base_V26_Widget_AppCompat_Toolbar
androidx.biometric.R$attr: int actionModeCloseDrawable
com.facebook.react.R$string: int rn_tab_description
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.facebook.react.R$string: int state_unselected_description
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_TEXT_ATTRIBUTES
com.facebook.react.module.model.ReactModuleInfo: boolean canOverrideExistingModule
androidx.biometric.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.facebook.react.animated.NativeAnimatedModule$getValue$1: int $animatedValueNodeTag
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.style.Overflow mOverflow
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mFrom
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: java.io.File $bundleFile
com.facebook.react.R$id: int rn_redbox_report_button
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller mSuperCaller
com.facebook.drawee.view.DraweeView: boolean mInitialised
androidx.biometric.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.facebook.react.views.switchview.ReactSwitch: java.lang.Integer trackColorForTrue
androidx.biometric.R$attr: int dropDownListViewStyle
com.facebook.react.common.ShakeDetector: int minNumShakes
androidx.biometric.R$styleable: int AppCompatTheme_actionBarTheme
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
androidx.biometric.R$styleable: int[] RecycleListView
com.swmansion.rnscreens.ScreensModule: com.swmansion.rnscreens.ScreensModule$Companion Companion
com.facebook.hermes.intl.Collator: com.facebook.hermes.intl.IPlatformCollator mPlatformCollatorObject
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.react.bridge.ReactSoftExceptionLogger: com.facebook.react.bridge.ReactSoftExceptionLogger INSTANCE
com.facebook.react.R$id: int accessibility_collection
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
androidx.customview.widget.ExploreByTouchHelper: int HOST_ID
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.ViewManager mViewManager
com.facebook.react.uimanager.ViewProps: java.lang.String OPACITY
com.facebook.react.views.textinput.ReactTextScrollWatcher: int surfaceId
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String NAME
com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: kotlin.enums.EnumEntries $ENTRIES
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.Postprocessor mPostprocessor
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: java.lang.String mEventName
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap map
com.facebook.react.internal.interop.InteropEvent: com.facebook.react.bridge.WritableMap eventData
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.EncryptedKeyset DEFAULT_INSTANCE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_HEIGHT
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.facebook.react.runtime.internal.bolts.Executors: java.util.concurrent.Executor UI_THREAD
androidx.biometric.R$color: int abc_primary_text_material_light
androidx.biometric.R$anim: int abc_fade_in
com.facebook.react.uimanager.ViewProps: java.lang.String ON_CLICK
androidx.security.crypto.MasterKeys: java.lang.String MASTER_KEY_ALIAS
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchBatchedExecutionTime
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
androidx.biometric.R$drawable: int abc_ic_ab_back_material
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.packagerconnection.PackagerConnectionSettings packagerConnectionSettings
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String key
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: java.lang.CharSequence mLocaleIdBuffer
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String commandId
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_START_RADIUS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ALPHA_ANIMATION_DURATION
androidx.biometric.R$styleable: int AppCompatTextView_drawableTintMode
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_COLOR
com.facebook.react.uimanager.UIManagerModule$3: int val$widthMeasureSpec
com.facebook.react.views.textinput.ReactEditText: boolean autoFocus
com.facebook.react.R$id: int labelled_by
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_PROGRESS
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_RIGHT
com.facebook.react.modules.dialog.AlertFragment: java.lang.String ARG_TITLE
androidx.biometric.R$style: int TextAppearance_AppCompat_Large
androidx.biometric.R$style: int Widget_AppCompat_ListView
com.facebook.react.views.view.MeasureUtil$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalJsFrames
com.facebook.react.jstasks.HeadlessJsTaskConfig: java.lang.String taskKey
com.facebook.react.views.switchview.ReactSwitch: java.lang.Integer trackColorForFalse
com.facebook.react.CoreModulesPackage: int mMinTimeLeftInFrameForNonBatchedOperationMs
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.image.ReactImageManager: java.lang.String REGISTRATION_NAME
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType MAP
com.facebook.react.R$layout: int alert_title_layout
com.facebook.react.runtime.BridgelessReactContext: java.util.concurrent.atomic.AtomicReference sourceURLRef
androidx.biometric.R$attr: int measureWithLargestChild
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion Companion
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: java.util.List links
androidx.biometric.R$styleable: int AppCompatTheme_editTextBackground
com.facebook.react.uimanager.ViewProps: java.lang.String OVERFLOW
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$FrameViewHolder: android.widget.TextView methodView
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostDelegate mReactHostDelegate
com.google.crypto.tink.proto.RegistryConfig: int CONFIG_NAME_FIELD_NUMBER
com.facebook.react.uimanager.ViewProps: java.lang.String LAYOUT_DIRECTION
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_LIBRARY_DIRECTORY
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_BOTTOM
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent$Companion Companion
com.facebook.react.views.modal.ReactModalHostView: android.content.DialogInterface$OnShowListener onShowListener
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.facebook.react.bridge.JSBundleLoader$Companion$createAssetLoader$1: android.content.Context $context
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType COMPACT_ROUNDING
com.rnbiometrics.ReactNativeBiometrics$2: com.facebook.react.bridge.ReadableMap val$params
androidx.biometric.R$styleable: int AppCompatTheme_panelBackground
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.DevSupportManagerBase$Companion Companion
com.facebook.react.devsupport.PackagerStatusCheck: java.lang.String PACKAGER_STATUS_URL_TEMPLATE
androidx.biometric.R$id: int accessibility_custom_action_5
androidx.biometric.R$id: int accessibility_custom_action_12
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable cssBackground
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge HORIZONTAL
com.oblador.keychain.KeychainModule$AuthPromptOptions: java.lang.String CANCEL
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: com.facebook.react.bridge.WritableArray timersToCall
com.facebook.react.fabric.mounting.MountItemDispatcher: java.lang.String TAG
com.facebook.react.devsupport.BundleDownloader: java.lang.String TAG
androidx.biometric.R$style: int TextAppearance_AppCompat_Display1
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: int $requestId
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float topLeft
com.facebook.react.animated.SpringAnimation: boolean springStarted
androidx.biometric.R$dimen: int abc_config_prefDialogWidth
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style UNIT
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_OFFSET
androidx.biometric.R$dimen: int abc_text_size_menu_material
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay mResolvedSignDisplay
com.facebook.react.uimanager.Spacing: int TOP
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.ReactInstanceManager: java.util.Collection mViewManagerNames
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
androidx.biometric.R$drawable: int abc_cab_background_top_material
androidx.biometric.R$dimen: int notification_right_side_padding_top
com.facebook.react.views.text.PreparedLayoutTextView: com.facebook.react.uimanager.style.Overflow overflow
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType MOVE
androidx.biometric.R$id: int shortcut
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object enqueuedRequestMonitor
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ResizeOptions mResizeOptions
com.facebook.react.uimanager.ViewProps: java.lang.String LETTER_SPACING
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.ByteString value_
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
androidx.biometric.BiometricManager: androidx.core.hardware.fingerprint.FingerprintManagerCompat mFingerprintManager
com.facebook.react.R$string: int catalyst_hot_reloading_auto_enable
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_BASE_ATTRIBUTES
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.modules.debug.interfaces.DeveloperSettings settings
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: int surfaceId
com.facebook.react.uimanager.drawable.OutlineDrawable: int outlineColor
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Hour
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle LONG
com.swmansion.worklets.WorkletsModule: com.swmansion.worklets.AndroidUIScheduler mAndroidUIScheduler
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.runtime.BridgelessReactStateTracker: com.facebook.react.runtime.BridgelessReactStateTracker$Companion Companion
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.facebook.react.bridge.DynamicFromArray: int index
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mMountItems
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState mReactScrollViewScrollState
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.UIManager mUIManager
com.facebook.react.BaseReactPackage$ModuleHolderProvider: com.facebook.react.bridge.ReactApplicationContext reactContext
androidx.biometric.R$id: int content
androidx.biometric.R$color: int primary_text_default_material_light
androidx.biometric.R$id: int action_bar_subtitle
androidx.biometric.R$attr: int collapseContentDescription
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXTERNAL_DIRECTORY
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: int val$finalIndex
com.google.crypto.tink.proto.Keyset: int KEY_FIELD_NUMBER
androidx.biometric.R$style: int Theme_AppCompat_Dialog_Alert
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.facebook.react.views.image.ImageLoadEvent: int height
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$HourCycle
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task mDestroyTask
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableAccessibilityOrderCache
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType MOMENTUM_BEGIN
com.facebook.react.uimanager.style.RadialGradient$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute NUMERIC
androidx.security.crypto.EncryptedFile$Builder: java.io.File mFile
androidx.biometric.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.facebook.hermes.intl.IPlatformCollator$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformCollator$Sensitivity
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage left
com.facebook.react.R$id: int accessibility_collection_item
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.google.crypto.tink.proto.Keyset$Key: int status_
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
androidx.biometric.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_REACT_TAG
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: boolean mSnappingToPage
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableDoubleMeasurementFixAndroidCache
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING
com.facebook.react.uimanager.ThemedReactContext: java.lang.String mModuleName
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacKey DEFAULT_INSTANCE
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats streamingDiffStats
androidx.fragment.app.Fragment: int INITIALIZING
androidx.biometric.R$attr: int actionModeShareDrawable
com.facebook.react.R$layout: int redbox_view
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SCROLLBAR
androidx.biometric.R$styleable: int ViewBackgroundHelper_android_background
com.swmansion.worklets.AndroidUIScheduler: com.facebook.jni.HybridData mHybridData
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$id: int accessibility_custom_action_20
androidx.biometric.R$color: int abc_primary_text_disable_only_material_light
androidx.biometric.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_WIDTH
androidx.biometric.R$id: int checkbox
androidx.activity.OnBackPressedCallback: kotlin.jvm.functions.Function0 enabledChangedCallback
com.facebook.react.views.scroll.ScrollEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: int selectionEnd
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
androidx.biometric.R$drawable: int abc_ratingbar_small_material
com.facebook.react.modules.fresco.FrescoModule: boolean clearOnDestroy
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: androidx.biometric.BiometricPrompt$PromptInfo promptInfo
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mIsStopped
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_ROLE
com.facebook.react.runtime.cxxreactpackage.CxxReactPackage: com.facebook.jni.HybridData mHybridData
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.lang.String QUEUE_TIME
com.facebook.react.modules.debug.FpsDebugFrameCallback: boolean isRecordingFpsInfoAtEachFrame
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mTempRect
com.facebook.react.animated.SubtractionAnimatedNode: int[] inputNodes
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String primitiveName_
com.swmansion.reanimated.NativeWorkletsModuleSpec: java.lang.String NAME
com.learnium.RNDeviceInfo.RNDeviceModule: boolean mLastPowerSaveState
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_RIGHT_RADIUS
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState RESUMED
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JavaScriptExecutorFactory mJavaScriptExecutorFactory
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
androidx.biometric.R$styleable: int SearchView_android_imeOptions
androidx.biometric.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_START
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean disableMainQueueSyncDispatchIOSCache
com.facebook.react.uimanager.ViewProps: java.lang.String MAX_FONT_SIZE_MULTIPLIER
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate surfaceDelegate
androidx.fragment.app.Fragment: int mBackStackNesting
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int mLayoutDirectionOverride
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener mListener
com.facebook.react.ReactFragment: java.lang.String ARG_FABRIC_ENABLED
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String NAME
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.RectF tempRectForOutline
com.facebook.react.animated.NativeAnimatedModule$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.animated.ValueAnimatedNode: double nodeValue
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_Y
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.uimanager.events.EventDispatcher eventDispatcherOverride
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config config
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: android.graphics.Paint shadowPaint
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacParams params_
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule$Companion Companion
androidx.biometric.R$attr: int fontProviderCerts
androidx.biometric.R$styleable: int AlertDialog_singleChoiceItemLayout
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.ReactInstanceManager: java.lang.String TAG
com.facebook.react.animated.NativeAnimatedModule: boolean batchingControlledByJS
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableLayoutAnimationsOnIOSCache
com.facebook.react.R$id: int mix_blend_mode
androidx.biometric.R$color: int primary_dark_material_dark
androidx.biometric.R$style: int TextAppearance_AppCompat_Tooltip
com.google.crypto.tink.proto.AesGcmKeyFormat: int VERSION_FIELD_NUMBER
com.facebook.hermes.intl.ParsedLocaleIdentifier: java.util.ArrayList puExtensions
com.google.crypto.tink.proto.AesCtrKey: int version_
com.facebook.react.ReactFragment: boolean mDisableHostLifecycleEvents
com.facebook.react.uimanager.JSPointerDispatcher$1: com.facebook.react.uimanager.JSPointerDispatcher this$0
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.String[] $iteratorKeys
androidx.biometric.R$styleable: int SearchView_queryHint
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactLifecycleStateManager mReactLifecycleStateManager
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray callbacks
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: com.facebook.react.bridge.Callback mCallback
com.facebook.react.animated.NativeAnimatedNodesManager: boolean warnedAboutGraphTraversal
com.facebook.react.runtime.ReactSurfaceView: boolean wasMeasured
androidx.biometric.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.facebook.react.modules.network.OkHttpClientProvider: com.facebook.react.modules.network.OkHttpClientProvider INSTANCE
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst FALSE
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String PAGE_Y_KEY
androidx.biometric.R$styleable: int SearchView_searchPrefixText
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_EXTRACT_ANIMATED_NODE_OFFSET
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchRunEndTime
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS
com.facebook.react.ReactInstanceManager: java.lang.Thread mCreateReactContextThread
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsCompat mDispachedInsets
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List afterUIBlocks
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitter
androidx.biometric.R$id: int action_menu_presenter
com.facebook.react.uimanager.ViewProps: java.lang.String RESIZE_METHOD
androidx.biometric.R$dimen: int disabled_alpha_material_light
androidx.biometric.R$anim: int abc_tooltip_exit
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.facebook.react.R$string: int state_busy_description
androidx.fragment.app.Fragment: boolean mUserVisibleHint
androidx.biometric.R$id: int action_text
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerProvider: java.lang.String ONE_PLUS_BRAND
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.DoubleTapReloadRecognizer doubleTapReloadRecognizer
com.facebook.react.views.textinput.ReactTextInputLocalData: float textSize
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableDestroyShadowTreeRevisionAsyncCache
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType String
androidx.biometric.R$attr: int tickMarkTintMode
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable$1: int[] $SwitchMap$com$facebook$react$uimanager$style$BorderStyle
androidx.biometric.R$color: int abc_color_highlight_material
com.facebook.react.ReactInstanceManagerBuilder: java.util.List mPackages
com.facebook.react.views.text.internal.span.ShadowStyleSpan: float radius
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: int mReactTag
androidx.biometric.R$styleable: int RecycleListView_paddingBottomNoButtons
com.facebook.react.ReactActivityDelegate: com.facebook.react.bridge.Callback mPermissionsCallback
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CANCEL_CAPTURE
androidx.biometric.R$id: int default_activity_button
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule
com.facebook.react.views.textinput.ReactEditText: boolean selectTextOnFocus
com.google.crypto.tink.proto.HmacParams: int TAG_SIZE_FIELD_NUMBER
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int height
com.facebook.react.common.assets.ReactFontManager: com.facebook.react.common.assets.ReactFontManager$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_START_RADIUS
com.facebook.react.views.text.ReactTypefaceUtils: com.facebook.react.views.text.ReactTypefaceUtils INSTANCE
com.facebook.react.views.scroll.OnScrollDispatchHelper: int prevX
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.proto.Keyset DEFAULT_INSTANCE
androidx.biometric.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String originalMessage
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback currentFrameCallback
androidx.biometric.R$drawable: int abc_vector_test
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
androidx.biometric.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OVER_CAPTURE
androidx.biometric.R$styleable: int FontFamilyFont_android_font
androidx.biometric.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.facebook.react.uimanager.TouchTargetHelper: android.graphics.Matrix inverseMatrix
androidx.biometric.R$id: int fragment_container_view_tag
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitchManager$Companion Companion
androidx.biometric.R$styleable: int AppCompatTextView_drawableTopCompat
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.reactnativecommunity.cameraroll.CameraRollModule: com.facebook.react.bridge.Promise deletePromise
com.facebook.react.modules.fresco.SystraceRequestListener: int currentId
androidx.biometric.BiometricViewModel: boolean mIsPromptShowing
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.util.HashMap sActionIdMap
com.facebook.react.animated.NativeAnimatedModule: long currentFrameNumber
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: java.util.Map propSetters
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mSurfaceId
androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.bridge.WritableMap data
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion Companion
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era NARROW
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: long mInstanceHandle
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.Keyset$Key DEFAULT_INSTANCE
androidx.biometric.R$attr: int listItemLayout
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableViewCullingCache
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mPathForSingleBorder
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay mWeekDay
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer buffer
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object mEventsToDispatchLock
com.facebook.react.animated.AnimationDriver: boolean hasFinished
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.util.Set accessedFeatureFlags
com.facebook.react.views.image.ReactImageView: java.lang.Object callerContext
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_JS_DEV_MODE_DEBUG_KEY
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_LOAD
com.facebook.react.uimanager.OnLayoutEvent: int width
androidx.biometric.R$styleable: int GradientColor_android_endX
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.biometric.R$dimen: int abc_dialog_title_divider_material
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: int keySize_
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mClippingRect
com.facebook.react.util.RNLog: int LOG
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_DELETE
androidx.biometric.R$id: int fingerprint_subtitle
com.facebook.react.uimanager.ViewProps: java.lang.String AUTO
androidx.biometric.R$attr: int showTitle
androidx.security.crypto.EncryptedFile$Builder: java.lang.String mMasterKeyAlias
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String LOCATION_Y_KEY
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_TEXT_TRANSFORM
com.facebook.react.uimanager.events.FabricEventDispatcherKt: java.lang.String TAG
com.facebook.react.devsupport.RedBoxContentView: com.facebook.react.devsupport.interfaces.RedBoxHandler redBoxHandler
androidx.biometric.BiometricPrompt: java.lang.String BIOMETRIC_FRAGMENT_TAG
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.swmansion.reanimated.keyboard.WindowsInsetsManager: java.lang.ref.WeakReference mReactContext
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
androidx.biometric.BiometricPrompt$PromptInfo$Builder: java.lang.CharSequence mNegativeButtonText
com.facebook.react.views.view.ReactViewManager$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.runtime.internal.bolts.Task: java.util.concurrent.Executor UI_THREAD_EXECUTOR
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.facebook.react.uimanager.LengthPercentageType: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$layout: int abc_tooltip
androidx.biometric.BiometricPrompt$PromptInfo$Builder: boolean mIsDeviceCredentialAllowed
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
androidx.biometric.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.crypto.tink.proto.AesGcmKey: int version_
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri uri
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: com.facebook.react.bridge.ReactApplicationContext $reactApplicationContext
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$onPackagerConnectedCallback$1: com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener $commandListener
androidx.biometric.R$attr: int drawerArrowStyle
com.facebook.react.fabric.events.EventBeatManager: com.facebook.react.fabric.events.EventBeatManager$Companion Companion
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader$Companion Companion
com.facebook.react.animated.ColorAnimatedNode: int bNodeId
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.animated.NativeAnimatedModule$1: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.runtime.hermes.HermesInstance: com.facebook.react.runtime.hermes.HermesInstance$Companion Companion
androidx.biometric.R$styleable: int MenuItem_numericModifiers
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType$Companion Companion
com.facebook.react.uimanager.NativeViewHierarchyManager$1: java.util.Set val$pendingDeletionTags
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader $callback
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SCROLLVIEW
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactTextInputManager$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole COMBOBOX
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName SHORTOFFSET
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int LAYOUT
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl DEFAULT
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role HEADING
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: com.facebook.react.bridge.ReadableArray val$keyValueArray
com.facebook.react.uimanager.ViewProps: java.lang.String NEEDS_OFFSCREEN_ALPHA_COMPOSITING
com.facebook.react.views.scroll.ScrollEvent: int scrollViewHeight
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrParams params_
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GRAVITY
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: int version_
com.facebook.react.ReactInstanceManagerBuilder: java.lang.String mJSBundleAssetUrl
androidx.biometric.R$styleable: int[] FontFamily
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: java.lang.ref.WeakReference viewRef
androidx.biometric.R$dimen: int abc_action_bar_content_inset_material
androidx.biometric.BiometricPrompt$CryptoObject: javax.crypto.Mac mMac
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
androidx.biometric.R$styleable: int ActionBar_contentInsetStart
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor accessor
androidx.biometric.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.biometric.R$color: int material_grey_800
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.learnium.RNDeviceInfo.RNDeviceModule: double mLastBatteryLevel
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String EVENT_NAME
androidx.biometric.R$styleable: int RecycleListView_paddingTopNoTitle
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_SAVE
androidx.biometric.BiometricManager: int BIOMETRIC_ERROR_NONE_ENROLLED
com.facebook.react.views.text.ReactTextUpdate: int textBreakStrategy
androidx.biometric.R$attr: int iconifiedByDefault
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher BESTFIT
androidx.biometric.R$attr: int borderlessButtonStyle
com.facebook.react.uimanager.ViewProps: java.lang.String LEFT
com.facebook.react.uimanager.common.ViewUtil: int NO_SURFACE_ID
com.facebook.react.views.view.ReactDrawableHelper: com.facebook.react.views.view.ReactDrawableHelper INSTANCE
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.ReactChoreographer reactChoreographer
androidx.biometric.FingerprintDialogFragment: int STATE_NONE
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: boolean mEnabled
com.facebook.react.views.textinput.ReactEditText: java.lang.String TAG
androidx.biometric.R$id: int uniform
androidx.biometric.R$attr: int menu
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
androidx.biometric.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.google.crypto.tink.proto.Keyset$Key: int KEY_ID_FIELD_NUMBER
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.animated.TrackingAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenY
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int TYPE_URL_FIELD_NUMBER
androidx.biometric.BiometricPrompt: int ERROR_NO_SPACE
com.google.crypto.tink.proto.AesCmacParams: int tagSize_
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String USE_DEFAULT_TYPE
com.facebook.react.animated.FrameBasedAnimationDriver: int currentLoop
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: com.facebook.jni.HybridData mHybridData
androidx.biometric.BiometricFragment$1: androidx.biometric.BiometricFragment this$0
com.facebook.react.R$id: int view_tag_instance_handle
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_REPEAT
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] regionAliasReplacements3
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal VIEW_MGR_ARGS
com.facebook.react.devsupport.DefaultDevSupportManagerFactory: com.facebook.react.devsupport.DefaultDevSupportManagerFactory$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_COLOR
androidx.biometric.R$attr: int background
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float blurRadius
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_Y
androidx.biometric.R$string: int generic_error_user_canceled
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginX
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.views.text.ReactTextUpdate: float paddingBottom
androidx.biometric.R$styleable: int TextAppearance_android_shadowDy
com.facebook.react.modules.blob.BlobProvider: java.util.concurrent.ExecutorService executor
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BOTTOM
com.facebook.react.uimanager.Spacing: int START
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState CLOSING
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: long frameStartTime
com.facebook.hermes.intl.IPlatformCollator$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformCollator$Usage
com.facebook.react.animated.NativeAnimatedModule$startListeningToAnimatedNodeValue$1: int $tag
androidx.biometric.R$color: int primary_dark_material_light
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
androidx.biometric.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.facebook.react.uimanager.events.TouchEvent: short coalescingKey
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String COLLATION
com.facebook.react.views.scroll.ReactHorizontalScrollView: long mLastScrollDispatchTime
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_START_START_RADIUS
androidx.biometric.R$attr: int backgroundStacked
androidx.biometric.R$attr: int srcCompat
com.facebook.react.uimanager.ViewProps: java.lang.String ROW_GAP
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient client
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SCROLLBAR
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Set mHoveringPointerIds
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TABLIST
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEventType touchEventType
androidx.biometric.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.biometric.R$layout: int notification_action_tombstone
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_TEXT_TRANSFORM
com.facebook.react.common.mapbuffer.MapBuffer$Companion: kotlin.ranges.IntRange KEY_RANGE
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.biometric.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.facebook.react.views.scroll.ScrollEvent: float xVelocity
androidx.biometric.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
androidx.biometric.R$attr: int buttonStyle
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderAlpha
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.nozbe.watermelondb.BuildConfig: boolean DEBUG
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: boolean italic
com.facebook.react.animated.MultiplicationAnimatedNode: int[] inputNodes
androidx.biometric.R$attr: int textAppearanceSearchResultSubtitle
com.facebook.react.views.text.ReactBaseTextShadowNode: int mJustificationMode
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
com.facebook.react.views.text.ReactTextShadowNode: com.facebook.yoga.YogaMeasureFunction mTextMeasureFunction
com.facebook.react.devsupport.DevServerHelper: android.content.Context applicationContext
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$styleable: int SearchView_suggestionRowLayout
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.animated.ObjectAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DRAGGING
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionInParentIndex
com.facebook.react.modules.dialog.DialogModule: boolean isInForeground
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
com.facebook.react.runtime.CoreReactPackage: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler hardwareBackBtnHandler
androidx.biometric.R$drawable: int abc_btn_check_material
androidx.drawerlayout.widget.DrawerLayout: int PEEK_DELAY
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean indeterminate
androidx.biometric.BiometricFragment$3: androidx.biometric.BiometricFragment this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SPINBUTTON
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: com.facebook.react.bridge.ReactApplicationContext $reactApplicationContext
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
androidx.biometric.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.facebook.react.views.progressbar.ProgressBarContainerView: java.lang.Integer color
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext mThemedContext
com.facebook.react.animated.ColorAnimatedNode: com.facebook.react.bridge.ReactApplicationContext reactApplicationContext
com.facebook.react.runtime.ReactHostImpl$3: com.facebook.react.runtime.internal.bolts.TaskCompletionSource val$taskCompletionSource
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: float mTargetX
androidx.biometric.FingerprintDialogFragment: androidx.biometric.BiometricViewModel mViewModel
com.facebook.react.views.text.ReactBaseTextShadowNode: java.util.Map mInlineViews
com.facebook.react.modules.blob.BlobModule$networkingRequestBodyHandler$1: com.facebook.react.modules.blob.BlobModule this$0
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long maxAnimationDuration
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] $VALUES
androidx.fragment.app.DialogFragment: java.lang.String SAVED_INTERNAL_DIALOG_SHOWING
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.lang.String TAG
com.facebook.react.modules.debug.FpsDebugFrameCallback: double DEFAULT_FPS
com.facebook.react.runtime.internal.bolts.Task: java.lang.Object lock
com.facebook.react.modules.appstate.AppStateModule: java.lang.String appState
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel[] $VALUES
androidx.biometric.R$attr: int toolbarNavigationButtonStyle
com.facebook.hermes.intl.NumberFormat: int mResolvedMinimumIntegerDigits
com.facebook.react.uimanager.ViewProps: java.lang.String VISIBLE
androidx.biometric.R$anim: int abc_grow_fade_in_from_bottom
com.rnbiometrics.ReactNativeBiometrics: java.lang.String biometricKeyAlias
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.runtime.BridgelessCatalystInstance$Companion Companion
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String TABLE_CATALYST
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline pipeline
androidx.biometric.FingerprintDialogFragment: int MESSAGE_DISPLAY_TIME_MS
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] $VALUES
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String CHANGED_TOUCHES_KEY
androidx.security.crypto.EncryptedSharedPreferences: java.util.List mListeners
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String PADDING_PKCS1
androidx.biometric.BiometricFragment$9: androidx.biometric.BiometricFragment this$0
com.facebook.react.modules.network.ProgressRequestBody: com.facebook.react.modules.network.ProgressListener progressListener
androidx.biometric.R$styleable: int MenuItem_android_onClick
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.TimingModule$Companion Companion
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter mPlatformNumberFormatter
com.facebook.react.views.text.ReactBaseTextShadowNode: int mNumberOfLines
androidx.biometric.R$styleable: int ActionMode_titleTextStyle
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String mMarkerName
androidx.biometric.R$attr: int theme
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.facebook.react.R$style: int Theme_ReactNative_TextInput_DefaultBackground
androidx.biometric.BiometricViewModel: java.lang.CharSequence mNegativeButtonTextOverride
androidx.security.crypto.EncryptedSharedPreferences$Editor: java.util.List mKeysChanged
com.facebook.react.fabric.FabricUIManager$4: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.BaseReactPackage$ModuleHolderProvider: java.lang.String name
androidx.fragment.app.Fragment: int AWAITING_ENTER_EFFECTS
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: java.util.List mBackgroundImageLayers
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Integer color
com.facebook.react.modules.debug.FpsDebugFrameCallback: int expectedNumFramesPrev
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.react.views.textinput.ReactTextScrollWatcher: int previousVert
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener onRequestCloseListener
com.imagepicker.ImagePickerModule: com.imagepicker.ImagePickerModuleImpl imagePickerModuleImpl
com.swmansion.reanimated.NodesManager: java.lang.Runnable mUnsubscribe
androidx.biometric.R$layout: int abc_select_dialog_material
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable originalBackground
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useTurboModulesCache
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String EXOPACKAGE_LOCATION_FORMAT
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay LONG
com.facebook.react.modules.blob.BlobModule$webSocketContentHandler$1: com.facebook.react.modules.blob.BlobModule this$0
com.facebook.react.R$drawable: int paused_in_debugger_background
com.facebook.react.uimanager.events.EventCategoryDef$Companion: com.facebook.react.uimanager.events.EventCategoryDef$Companion $$INSTANCE
com.facebook.react.modules.network.ProgressResponseBody: long totalBytesRead
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel STABLE
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_Y
androidx.fragment.app.Fragment: android.view.View mView
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.devsupport.DevInternalSettings$Listener listener
com.google.crypto.tink.proto.AesCtrParams: int IV_SIZE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: androidx.drawerlayout.widget.DrawerLayout drawerLayout
androidx.biometric.R$styleable: int ColorStateListItem_alpha
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.facebook.react.views.textinput.ReactTextScrollWatcher: com.facebook.react.views.textinput.ReactEditText editText
androidx.biometric.R$dimen: int highlight_alpha_material_colored
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS
com.facebook.react.ReactInstanceManager: java.util.Collection mReactInstanceEventListeners
com.swmansion.worklets.WorkletsModule: com.swmansion.worklets.WorkletsMessageQueueThread mMessageQueueThread
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1: com.facebook.react.devsupport.DevServerHelper this$0
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsForTests: com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsForTests INSTANCE
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKey DEFAULT_INSTANCE
androidx.biometric.R$styleable: int AppCompatTheme_seekBarStyle
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.uimanager.events.TouchesHelper INSTANCE
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] regionAliasKeys2
com.facebook.react.uimanager.UIImplementation: long mLastCalculateLayoutTime
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayList val$batchedOperations
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole VIEWGROUP
androidx.biometric.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1: com.facebook.react.modules.permissions.PermissionsModule this$0
androidx.biometric.R$styleable: int AppCompatTheme_editTextStyle
androidx.biometric.R$string: int abc_menu_function_shortcut_label
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: int FRAME_TIME_MS
androidx.biometric.BiometricPrompt$PromptInfo$Builder: boolean mIsConfirmationRequired
androidx.biometric.R$dimen: int abc_dropdownitem_icon_width
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: java.util.Map lazyViewManagerMap
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_DISABLE_ANIMATIONS
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap backingMap
androidx.biometric.R$styleable: int GradientColor_android_gradientRadius
com.facebook.react.ReactInstanceManagerBuilder: java.lang.String TAG
com.facebook.react.animated.AnimatedNode: int BFSColor
androidx.biometric.R$id: int progress_circular
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mEnteringViews
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.lang.Object[] $iteratorValues
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: int mSubtagEnd
com.facebook.react.views.view.ViewGroupClickEvent: java.lang.String EVENT_NAME
androidx.biometric.R$attr: int colorControlHighlight
com.facebook.react.uimanager.PointerEvents: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.uimanager.StateWrapper stateWrapper
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.JSTouchDispatcher jSTouchDispatcher
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.DevToolsReactPerfLogger$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.swmansion.reanimated.NodesManager: java.util.Set nativeProps
com.swmansion.reanimated.sensor.ReanimatedSensor: int DEFAULT_INTERVAL
androidx.biometric.BiometricErrorData: java.lang.CharSequence mErrorMessage
com.facebook.react.views.textinput.ReactTextSelectionWatcher: int previousSelectionEnd
com.facebook.react.common.DebugServerException: java.lang.String GENERIC_ERROR_MESSAGE
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List mModuleProviders
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_TRANSFORM
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_END
com.facebook.react.views.scroll.ReactScrollView: boolean mRemoveClippedSubviews
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer cookieJarContainer
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LINE_BREAK_STRATEGY
androidx.fragment.app.FragmentActivity: boolean mResumed
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$deleteView$1: com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener $listener
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.bridge.ReactApplicationContext reactApplicationContext
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.biometric.R$styleable: int FontFamilyFont_android_fontStyle
com.google.crypto.tink.proto.KmsAeadKey: int version_
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_PLAYABLE_DURATION
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_WIDTH
com.facebook.react.devsupport.interfaces.ErrorType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.animated.FrameBasedAnimationDriver: long startFrameTimeNanos
androidx.biometric.R$styleable: int AppCompatTextView_fontVariationSettings
androidx.biometric.R$style: int ThemeOverlay_AppCompat_Light
androidx.biometric.R$style: int Widget_AppCompat_Toolbar
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback mCurrentFrameCallback
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle mBorderRadius
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: java.lang.String mCommand
androidx.biometric.R$attr: int logoDescription
com.swmansion.rnscreens.ScreenFooterManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.animated.DivisionAnimatedNode: int[] inputNodes
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_WIDTH
androidx.biometric.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.facebook.react.ReactActivity: androidx.activity.OnBackPressedCallback mBackPressedCallback
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget mInspectorTarget
com.facebook.react.uimanager.annotations.ReactProp: com.facebook.react.uimanager.annotations.ReactProp$Companion Companion
com.facebook.react.uimanager.events.EventCategoryDef: com.facebook.react.uimanager.events.EventCategoryDef$Companion Companion
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mDragging
com.facebook.react.devsupport.DevSupportManagerBase: android.app.AlertDialog devOptionsDialog
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.drawer.events.DrawerSlideEvent: float offset
com.facebook.react.uimanager.style.Overflow: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float DECELERATE_INTERPOLATION_FACTOR
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtagIterationFailed: com.facebook.hermes.intl.LocaleIdTokenizer this$0
com.oblador.keychain.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.runtime.internal.bolts.Executors: java.util.concurrent.Executor IMMEDIATE
androidx.biometric.R$string: int abc_search_hint
com.facebook.react.bridge.BridgeSoLoader: com.facebook.react.bridge.BridgeSoLoader INSTANCE
com.facebook.react.devsupport.DevSupportManagerBase: boolean isPackagerConnected
com.facebook.hermes.intl.LocaleIdTokenizer: int mCurrentSubtagEnd
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ROTATION_VECTOR
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats streamingLayoutStats
androidx.biometric.R$attr: int tintMode
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
androidx.biometric.BiometricFragment$7: androidx.biometric.BiometricFragment this$0
com.facebook.react.fabric.FabricSoLoader: com.facebook.react.fabric.FabricSoLoader INSTANCE
com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.NativeModuleRegistryBuilder$Companion Companion
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_RADIUS
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean commonTestFlagCache
androidx.biometric.R$style: int Platform_ThemeOverlay_AppCompat
com.facebook.react.views.text.ReactTextViewManager: java.lang.String TAG
com.facebook.hermes.intl.PlatformCollatorAndroid: java.text.RuleBasedCollator mCollator
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Set activeTasks
androidx.biometric.R$dimen: int abc_button_inset_horizontal_material
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object callerContext
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: float height
androidx.biometric.FingerprintDialogFragment: android.os.Handler mHandler
androidx.biometric.R$attr: int searchIcon
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.common.SurfaceDelegateFactory surfaceDelegateFactory
com.facebook.react.R$style: int Theme_Catalyst_LogBox
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: com.facebook.react.views.textinput.ReactEditText editText
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
androidx.biometric.R$dimen: int abc_select_dialog_padding_start_material
androidx.biometric.R$styleable: int[] CompoundButton
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_WIDTH
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType[] $VALUES
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int PARAMS_FIELD_NUMBER
com.rnbiometrics.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.biometric.R$style: int Base_V7_Theme_AppCompat_Dialog
com.facebook.react.ReactRootView: java.lang.String TAG
com.facebook.react.devsupport.BundleDownloader$BundleInfo: int filesChangedCount
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: boolean ENABLED
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.facebook.react.views.text.ReactTextView: int DEFAULT_GRAVITY
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform LOWERCASE
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableAccumulatedUpdatesInRawPropsAndroidCache
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] $VALUES
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeValue$1: double $value
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] $VALUES
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ROW
androidx.security.crypto.MasterKey: java.lang.String mKeyAlias
com.google.crypto.tink.proto.AesCtrKeyFormat: int PARAMS_FIELD_NUMBER
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList methods
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: int VERSION_FIELD_NUMBER
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.bridge.Callback mAnimationComplete
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Headline
com.swmansion.reanimated.BuildConfig: java.lang.String REANIMATED_VERSION_JAVA
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_OUT
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_STOP
androidx.biometric.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.facebook.react.uimanager.Spacing: float defaultValue
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_Y
androidx.biometric.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.biometric.R$styleable: int GradientColor_android_endY
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mReturningToStart
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: int PARAMS_FIELD_NUMBER
com.facebook.react.views.text.PreparedLayoutTextView: com.facebook.react.views.text.PreparedLayoutTextView$TextSelection selection
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactContext mCurrentReactContext
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String NAME
androidx.biometric.R$styleable: int Toolbar_titleMarginTop
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItemFactory INSTANCE
com.facebook.react.views.textinput.ReactTextSelectionWatcher: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_JS_MINIFY_DEBUG_KEY
androidx.biometric.R$styleable: int AppCompatTheme_actionButtonStyle
androidx.biometric.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.biometric.R$attr: int actionModeStyle
androidx.biometric.CryptoObjectUtils: java.lang.String TAG
com.facebook.react.animated.SpringAnimation$PhysicsState: double velocity
com.facebook.react.views.textinput.ReactEditText: java.lang.String fontFamily
com.facebook.react.animated.NativeAnimatedModule: boolean enqueuedAnimationOnFrame
com.google.crypto.tink.proto.AesGcmKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager mNativeViewHierarchyManager
com.facebook.react.uimanager.events.EventCategoryDef: int CONTINUOUS_START
com.swmansion.reanimated.NodesManager: java.util.concurrent.ConcurrentLinkedQueue mEventQueue
androidx.biometric.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.ILocaleObject mResolvedLocaleObjectForResolvedOptions
com.google.crypto.tink.proto.HmacKey: int version_
com.facebook.hermes.reactexecutor.HermesExecutorFactory: java.lang.String debuggerName
androidx.biometric.R$drawable: int abc_list_divider_mtrl_alpha
com.facebook.react.views.text.TextAttributeProps: float mLineHeightInput
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day NUMERIC
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int numRetries
androidx.appcompat.widget.SwitchCompat: int mThumbWidth
androidx.biometric.R$attr: int searchViewStyle
com.facebook.react.R$id: int accessibility_state_expanded
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int delayMs
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.UIManager mFabricUIManager
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_TOP_LEFT_RADIUS
com.facebook.react.views.drawer.events.DrawerClosedEvent: com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion Companion
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: com.facebook.react.modules.network.NetworkingModule this$0
com.facebook.react.runtime.ReactInstance$ReactJsExceptionHandlerImpl: com.facebook.react.bridge.queue.QueueThreadExceptionHandler queueThreadExceptionHandler
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableDestroyShadowTreeRevisionAsyncCache
com.facebook.react.uimanager.JSTouchDispatcher: long mGestureStartTime
androidx.biometric.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.facebook.react.uimanager.ViewProps: java.lang.String HIDDEN
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable invokeDefaultBackPressRunnable
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: com.facebook.react.devsupport.BundleDownloader this$0
com.facebook.react.uimanager.JSPointerDispatcher: java.lang.String TAG
com.facebook.react.views.textinput.ReactEditText: int stagedInputType
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType BOOL
com.oblador.keychain.KeychainModule: java.lang.String FACE_SUPPORTED_NAME
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
androidx.biometric.R$attr: int actionModePasteDrawable
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TRANSFORM_MATRIX
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_FLAG_MULTIPLE
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: android.app.Dialog dialog
androidx.biometric.R$id: int split_action_bar
com.facebook.react.views.scroll.OnScrollDispatchHelper: float xFlingVelocity
com.facebook.react.views.text.ReactTextUpdate: float paddingLeft
com.facebook.react.animated.NativeAnimatedModule$addAnimatedEventToView$1: java.lang.String $eventName
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
androidx.biometric.R$styleable: int CompoundButton_buttonTint
androidx.appcompat.widget.SwitchCompat: int mTouchMode
com.facebook.react.views.text.ReactTextView: android.text.Spannable mSpanned
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: com.facebook.react.bridge.ReadableArray val$keyValueArray
androidx.biometric.R$id: int titleDividerNoCustom
com.facebook.react.uimanager.NativeViewHierarchyManager$1: com.facebook.react.uimanager.NativeViewHierarchyManager this$0
androidx.biometric.R$integer: int status_bar_notification_info_maxnum
com.facebook.react.modules.network.ProgressiveStringDecoder: java.lang.String EMPTY_STRING
com.oblador.keychain.KeychainModule$Maps: java.lang.String AUTH_TYPE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ARTICLE
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType NATIVE_ANIMATED_MODULE
com.facebook.react.views.modal.ReactModalHostView: java.lang.String TAG
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object callerContext
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: java.util.ArrayList viewHierarchyUpdateFinishedEvents
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver mTabNavigatorObserver
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_SIZE_MULTIPLIER
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.facebook.react.uimanager.ViewDefaults: int LINE_HEIGHT
com.facebook.react.animated.ModulusAnimatedNode: double modulus
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1: java.lang.Runnable $runnable
com.facebook.react.uimanager.events.EventEmitterImpl: com.facebook.react.uimanager.events.EventEmitterImpl$Companion Companion
androidx.biometric.R$style: int Base_V28_Theme_AppCompat_Light
androidx.biometric.R$layout: int support_simple_spinner_dropdown_item
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_EXTENSION_PARAM_CASEFIRST_SHORT
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole CHECKBOX
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.runtime.JSRuntimeFactory jsRuntimeFactory
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT ENTER
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_END_RADIUS
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Display4
androidx.biometric.R$styleable: int Fragment_android_name
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable mDispatchEventsRunnable
androidx.security.crypto.MasterKey: android.security.keystore.KeyGenParameterSpec mKeyGenParameterSpec
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType TIMERS_EVENTS
androidx.biometric.R$id: int src_in
com.facebook.react.uimanager.ShadowNodeRegistry$SingleThreadAsserter: java.lang.Thread thread
androidx.biometric.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.biometric.R$attr: int drawableTopCompat
com.facebook.react.runtime.ReactHostImpl$CreationResult: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.uimanager.ViewAtIndex: int mTag
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableViewRecyclingForTextCache
com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil$Companion Companion
com.facebook.react.views.text.internal.span.SetSpanOperation: com.facebook.react.views.text.internal.span.ReactSpan what
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double lastRead
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_LEFT_WIDTH
com.facebook.react.uimanager.JSPointerDispatcher: boolean mRunHoverExitNextFrame
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat DEFAULT_INSTANCE
androidx.biometric.R$drawable: int abc_ic_voice_search_api_material
androidx.biometric.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ScrollWatcher scrollWatcher
com.facebook.react.uimanager.JSPointerDispatcher$1: android.view.MotionEvent val$motionEvent
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String DRAWER_POSITION_RIGHT
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String EXTRAPOLATE_TYPE_CLAMP
com.facebook.react.modules.network.ProgressiveStringDecoder: java.nio.charset.CharsetDecoder decoder
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: java.lang.String $url
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String TAG
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.biometric.R$style: int Base_V7_Widget_AppCompat_EditText
com.facebook.react.bridge.JsonWriterHelper: com.facebook.react.bridge.JsonWriterHelper INSTANCE
androidx.biometric.R$style: int Widget_AppCompat_ActionBar_TabView
com.facebook.react.R$anim: int catalyst_push_up_in
com.facebook.react.uimanager.JSPointerDispatcher: int UNSET_POINTER_ID
com.facebook.react.views.drawer.ReactDrawerLayout: int drawerWidth
com.facebook.react.views.textinput.ReactEditText: boolean contextMenuHidden
androidx.biometric.R$color: int dim_foreground_material_dark
com.facebook.react.jstasks.LinearCountingRetryPolicy: int delay
com.facebook.react.views.debuggingoverlay.TraceUpdate: android.graphics.RectF rectangle
com.google.crypto.tink.proto.KeysetInfo: int primaryKeyId_
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int numberOfChildrenWithZIndex
androidx.biometric.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_BIOMETRIC
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.facebook.react.uimanager.style.LogicalEdge: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String EVENT_NAME
com.facebook.react.views.text.ReactTextView: android.view.ViewGroup$LayoutParams EMPTY_LAYOUT_PARAMS
com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.animated.NativeAnimatedNodesManager$Companion Companion
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.oblador.keychain.KeychainModule$KnownCiphers: java.lang.String FB
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent$Companion Companion
com.facebook.react.uimanager.ViewManagerRegistry: java.util.Map mViewManagers
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager mSharedTransitionManager
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation
androidx.fragment.app.Fragment: int mFragmentId
androidx.biometric.R$attr: int switchTextAppearance
androidx.biometric.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_FILE_SIZE
androidx.security.crypto.EncryptedFile: com.google.crypto.tink.StreamingAead mStreamingAead
com.facebook.hermes.intl.Collator: com.facebook.hermes.intl.ILocaleObject mResolvedLocaleObjectForResolvedOptions
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableEagerRootViewAttachmentCache
com.facebook.react.bridge.BridgeReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.animated.AnimatedNode: int DEFAULT_ANIMATED_NODE_CHILD_COUNT
com.facebook.react.devsupport.BundleDownloader: okhttp3.Call downloadBundleFromURLCall
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.react.ReactRootView: int mUIManagerType
com.facebook.react.R$id: int rn_redbox_loading_indicator
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.bridge.DefaultJSExceptionHandler defaultJSExceptionHandler
androidx.biometric.R$style: int Widget_AppCompat_SeekBar
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int drawerState
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: int MIN_INSET_BOX_SHADOW_SDK_VERSION
com.facebook.react.animated.ColorAnimatedNode: int gNodeId
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.swmansion.reanimated.CopiedEvent: java.lang.String eventName
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: com.facebook.react.bridge.Callback val$callback
androidx.biometric.R$styleable: int AppCompatTheme_popupMenuStyle
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] $VALUES
androidx.drawerlayout.widget.DrawerLayout: java.lang.String TAG
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.facebook.react.views.image.ReactImageView: int fadeDurationMs
androidx.activity.ComponentActivity: int mContentLayoutId
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] $VALUES
androidx.biometric.R$id: int action_bar_spinner
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Companion Companion
androidx.biometric.BiometricManager$DefaultInjector: android.content.Context mContext
androidx.biometric.R$attr: int navigationContentDescription
androidx.biometric.R$drawable: int abc_dialog_material_background
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrKey aesCtrKey_
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.modules.debug.DevSettingsModule$Companion Companion
androidx.biometric.R$styleable: int AppCompatImageView_tintMode
com.facebook.react.animated.NativeAnimatedModule$startListeningToAnimatedNodeValue$1: com.facebook.react.animated.AnimatedNodeValueListener $listener
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String EVENT_NAME
androidx.biometric.R$drawable: int abc_list_selector_disabled_holo_light
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: java.util.Iterator iterator
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style DECIMAL
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_TEXT_SHADOW_COLOR
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OUT
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.PackagerConnectionSettings packagerConnectionSettings
androidx.biometric.FingerprintDialogFragment$1: androidx.biometric.FingerprintDialogFragment this$0
androidx.biometric.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
androidx.biometric.R$attr: int lastBaselineToBottomHeight
androidx.biometric.R$id: int accessibility_custom_action_13
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role COMBOBOX
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter$Style mStyle
com.facebook.react.animated.InterpolationAnimatedNode: double[] inputRange
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType mRoundingType
com.facebook.react.uimanager.Spacing: com.facebook.react.uimanager.Spacing$Companion Companion
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: boolean isListening
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.biometric.R$styleable: int FontFamily_fontProviderAuthority
androidx.biometric.R$styleable: int Toolbar_contentInsetStart
androidx.biometric.R$attr: int textLocale
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_COLOR
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_OPTION_NUMERIC
androidx.biometric.R$dimen: int abc_edit_text_inset_bottom_material
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.react.uimanager.ReactYogaConfigProvider INSTANCE
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.ref.WeakReference mContext
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.internal.ChoreographerProvider mChoreographerProvider
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: float value
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: boolean SLOWDOWN_ANIMATION_MODE
com.facebook.react.uimanager.style.RadialGradient: java.util.List colorStops
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionParent
androidx.biometric.BiometricViewModel: android.content.DialogInterface$OnClickListener mNegativeButtonListener
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateBridgelessEnabled
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: java.lang.String LOG_TAG
com.facebook.react.R$string: int state_collapsed_description
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mIsBeingDragged
androidx.biometric.R$attr: int ratingBarStyle
androidx.biometric.R$layout: int abc_expanded_menu_layout
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
androidx.biometric.R$dimen: int abc_search_view_preferred_width
com.facebook.react.runtime.ReactHostImpl$2: com.facebook.react.runtime.ReactHostImpl this$0
androidx.biometric.R$styleable: int FontFamily_fontProviderPackage
androidx.biometric.R$anim: int abc_shrink_fade_out_from_bottom
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii topLeft
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateFabricEnabled
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String PAGE_X_KEY
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray$Companion Companion
com.facebook.react.views.textinput.ReactEditText: java.lang.String submitBehavior
com.facebook.react.uimanager.style.LinearGradient: com.facebook.react.uimanager.style.LinearGradient$Direction direction
com.facebook.react.module.model.ReactModuleInfo: java.lang.String name
androidx.biometric.R$styleable: int ActionBar_title
com.facebook.react.fabric.ComponentFactory: com.facebook.react.fabric.ComponentFactory$Companion Companion
androidx.biometric.R$color: int notification_icon_bg_color
androidx.biometric.R$id: int icon_group
androidx.biometric.R$attr: int showDividers
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.LocaleObjectAndroid mLocaleObject
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_LOAD
com.facebook.react.ReactInstanceManager$4: com.facebook.react.ReactInstanceManager this$0
com.facebook.react.modules.debug.FpsDebugFrameCallback: int numFrameCallbacks
com.facebook.react.views.switchview.ReactSwitchEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map SHADOW_NODE_SETTER_MAP
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mViewCommandMountItems
com.swmansion.reanimated.keyboard.WindowsInsetsManager: boolean mIsNavigationBarTranslucent
com.facebook.react.modules.network.ForwardingCookieHandler: java.lang.String COOKIE_HEADER
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mRootViewAttached
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ACCELEROMETER
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher mFormatMatcher
androidx.appcompat.widget.SwitchCompat: float mThumbPosition
com.facebook.react.uimanager.ReactAccessibilityDelegate$3: int[] $SwitchMap$com$facebook$react$uimanager$ReactAccessibilityDelegate$AccessibilityRole
androidx.biometric.FingerprintDialogFragment: java.lang.Runnable mResetDialogRunnable
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$1: com.facebook.react.ReactHost $reactHost
com.facebook.react.animated.NativeAnimatedModule$addAnimatedEventToView$1: com.facebook.react.bridge.ReadableMap $eventMapping
androidx.biometric.R$color: int abc_btn_colored_text_material
androidx.biometric.R$dimen: int compat_notification_large_icon_max_height
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_DEFAULT
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge RIGHT
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics: float width
androidx.biometric.R$attr: int tickMarkTint
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_SLINGSHOT_DISTANCE
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: int val$tag
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.util.HashMap sensors
androidx.biometric.R$attr: int selectableItemBackgroundBorderless
androidx.biometric.R$dimen: int abc_dialog_fixed_height_minor
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.BridgelessReactContext context
androidx.biometric.R$drawable: int abc_btn_colored_material
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: boolean USE_TRANSLATE_ANIMATION
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_STYLE
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole BUTTON
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.Object _sync
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.VelocityHelper mVelocityHelper
androidx.biometric.R$string: int abc_searchview_description_clear
com.facebook.react.uimanager.style.BackgroundImageLayer: com.facebook.react.uimanager.style.Gradient gradient
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String NAME
com.facebook.react.packagerconnection.ReconnectingWebSocket: android.os.Handler handler
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableIOSViewClipToPaddingBoxCache
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.facebook.react.devsupport.StackTraceHelper: java.lang.String NAME_KEY
com.facebook.react.uimanager.ReactRoot: int STATE_STOPPED
com.facebook.react.ReactRootView$1: android.view.View val$child
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
com.google.crypto.tink.proto.KmsAeadKeyFormat: int KEY_URI_FIELD_NUMBER
com.facebook.react.animated.DivisionAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.react.common.build.ReactBuildConfig: boolean ENABLE_PERFETTO
com.facebook.react.bridge.GuardedAsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_END_RADIUS
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.react.views.image.ScaleTypeStartInside$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener $callback
androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity
com.facebook.react.animated.DecayAnimation: long startFrameTimeMillis
androidx.biometric.R$styleable: int AppCompatTheme_controlBackground
com.facebook.react.bridge.Inspector$Page: java.lang.String title
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceListItem
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
androidx.biometric.R$style: int AlertDialog_AppCompat
com.facebook.react.modules.network.ResponseUtil: com.facebook.react.modules.network.ResponseUtil INSTANCE
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int[] intBuffer
com.facebook.react.animated.NativeAnimatedModule$stopListeningToAnimatedNodeValue$1: int $tag
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_ACTIONS
androidx.biometric.R$id: int radio
com.facebook.react.uimanager.style.ColorStopUtils$WhenMappings: int[] $EnumSwitchMapping$0
com.google.crypto.tink.proto.AesGcmSivKey: int VERSION_FIELD_NUMBER
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: int[] mIndicesToRemove
com.facebook.react.BuildConfig: boolean DEBUG
com.facebook.react.R$string: int catalyst_hot_reloading_auto_disable
androidx.biometric.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
androidx.biometric.R$dimen: int tooltip_margin
androidx.biometric.R$attr: int drawableBottomCompat
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray$Companion Companion
com.facebook.react.runtime.JSRuntimeFactory: com.facebook.react.runtime.JSRuntimeFactory$Companion Companion
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource cachedImageSource
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.BytesRange mBytesRange
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved
androidx.biometric.R$styleable: int View_paddingStart
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType DOUBLE
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
com.oblador.vectoricons.VectorIconsModule$Errors: java.lang.String E_UNKNOWN_ERROR
androidx.biometric.R$string: int fingerprint_error_lockout
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String COLLATION_NUMERIC_CANON
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.views.textinput.ReactTextSelectionWatcher: com.facebook.react.views.textinput.ReactEditText editText
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int version_
com.facebook.react.views.scroll.OnScrollDispatchHelper: float yFlingVelocity
androidx.biometric.R$styleable: int AppCompatTheme_imageButtonStyle
com.facebook.react.R$layout: int fps_view
com.facebook.hermes.intl.IntlTextUtils: boolean $assertionsDisabled
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month UNDEFINED
androidx.biometric.R$styleable: int GradientColor_android_centerColor
androidx.biometric.R$id: int submenuarrow
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int count
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform mTextTransform
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_WEIGHT
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$Companion Companion
androidx.biometric.R$id: int src_over
com.oblador.keychain.KeychainModule$Errors: java.lang.String E_KEYSTORE_ACCESS_ERROR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.facebook.react.views.switchview.ReactSwitchEvent: com.facebook.react.views.switchview.ReactSwitchEvent$Companion Companion
com.facebook.react.runtime.ReactHostImpl: boolean mHostInvalidated
com.google.crypto.tink.proto.HmacKeyFormat: int PARAMS_FIELD_NUMBER
androidx.biometric.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BorderDrawable border
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$CurrencySign
com.facebook.react.devsupport.RedBoxContentView: com.facebook.react.devsupport.interfaces.RedBoxHandler$ReportCompletedListener reportCompletedListener
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1: com.facebook.react.bridge.ReadableArray $uris
androidx.biometric.R$drawable: int btn_radio_on_to_off_mtrl_animation
androidx.biometric.R$styleable: int[] ActionBarLayout
com.facebook.react.bridge.BridgeReactContext: boolean mDestroyed
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext mThemedReactContext
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: java.lang.String TAG
com.swmansion.reanimated.NodesManager$3: boolean val$trySynchronously
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mContext
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View view
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object handlerObject
com.facebook.hermes.intl.Constants: java.lang.String SENSITIVITY_ACCENT
com.facebook.react.views.scroll.ReactHorizontalScrollView: int pendingContentOffsetY
com.facebook.react.devsupport.DevServerHelper$openInspectorConnection$1: com.facebook.react.devsupport.DevServerHelper this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF outerClipTempRectForBorderRadius
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateConcurrentReactEnabled
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.facebook.react.uimanager.ViewProps: java.util.HashSet LAYOUT_ONLY_PROPS
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager parentViewManager
com.facebook.react.animated.NativeAnimatedModule$restoreDefaultValues$1: int $animatedNodeTag
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_WRAP
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType START
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.views.textinput.ReactEditText editText
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType Number
com.facebook.react.bridge.BridgeReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.bridge.BridgeReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult: java.lang.String cipherName
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute UNDEFINED
com.facebook.react.R$id: int accessibility_order_flow_to
androidx.biometric.R$styleable: int SearchView_searchIcon
androidx.biometric.R$dimen: int tooltip_horizontal_padding
com.facebook.react.uimanager.drawable.BorderDrawable: boolean needUpdatePath
com.facebook.react.R$id: int rn_redbox_reload_button
androidx.biometric.R$attr: int fontFamily
androidx.biometric.R$color: int abc_search_url_text_selected
com.facebook.react.uimanager.events.EventDispatcherImpl: short mNextEventTypeId
com.facebook.react.views.text.TextAttributeProps: float mMaxFontSizeMultiplier
com.facebook.react.modules.i18nmanager.I18nUtil: java.lang.String KEY_FOR_PERFS_MAKE_RTL_FLIP_LEFT_AND_RIGHT_STYLES
androidx.biometric.R$color: int tooltip_background_light
com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent motionEvent
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF tempRectForCenterDrawPath
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TOGGLEBUTTON
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.util.ArrayList viewsToSnapshot
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_EXTENSION_PARAM_NUMERIC_SHORT
com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier: java.util.ArrayList variantSubtagList
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay LONG
androidx.biometric.R$dimen: int abc_control_padding_material
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle UNDEFINED
com.facebook.react.fabric.mounting.MountItemDispatcher: long FRAME_TIME_NS
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String TEST_KEY_ALIAS
com.facebook.react.R$string: int catalyst_change_bundle_location_apply
com.facebook.react.devsupport.RedBoxContentView: android.widget.Button reportButton
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.content.Context context
androidx.biometric.R$color: int material_blue_grey_900
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int DEFAULT_BORDER_ALPHA
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents AUTO
com.facebook.hermes.intl.LanguageTagsGenerated: boolean UsePreprocessedCLDRData
androidx.biometric.R$layout: int abc_list_menu_item_radio
androidx.biometric.R$styleable: int Toolbar_contentInsetLeft
com.facebook.react.common.ShakeDetector: com.facebook.react.common.ShakeDetector$ShakeListener shakeListener
androidx.biometric.R$dimen: int notification_top_pad_large_text
com.rnbiometrics.ReactNativeBiometrics$1: com.facebook.react.bridge.Promise val$promise
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
org.pgsqlite.SQLitePlugin: java.util.regex.Pattern FIRST_WORD
com.facebook.react.uimanager.common.UIManagerType: int FABRIC
androidx.biometric.R$attr: int listPopupWindowStyle
com.facebook.react.views.scroll.ReactScrollView: java.util.List mSnapOffsets
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long timeStamp
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TARGET_KEY
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsColorSet
androidx.biometric.R$styleable: int ActionMenuItemView_android_minWidth
androidx.security.crypto.EncryptedFile$Builder: android.content.Context mContext
com.facebook.hermes.BuildConfig: boolean DEBUG
androidx.biometric.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: com.facebook.react.common.assets.ReactFontManager$TypefaceStyle$Companion Companion
androidx.fragment.app.DialogFragment: boolean mCreatingDialog
com.facebook.imagepipeline.request.ImageRequest: boolean mLocalThumbnailPreviewsEnabled
androidx.biometric.R$id: int line3
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.sensor.ReanimatedSensorContainer reanimatedSensorContainer
androidx.biometric.R$dimen: int abc_switch_padding
com.facebook.react.HeadlessJsTaskService: android.os.PowerManager$WakeLock wakeLock
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl: java.lang.Object id
com.facebook.hermes.intl.LocaleObjectICU: boolean $assertionsDisabled
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.proto.AesSivKeyFormat DEFAULT_INSTANCE
com.facebook.react.views.textinput.ReactEditText: android.text.method.KeyListener keyListener
androidx.biometric.R$styleable: int AlertDialog_android_layout
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.facebook.react.views.image.ReactImageView$TilePostprocessor: com.facebook.react.views.image.ReactImageView this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole WEBVIEW
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener mCustomGlobalLayoutListener
androidx.biometric.R$styleable: int ActionMode_closeItemLayout
androidx.biometric.R$styleable: int View_paddingEnd
com.facebook.react.uimanager.ViewDefaults: int NUMBER_OF_LINES
androidx.fragment.app.DialogFragment: boolean mDialogCreated
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String NAME
com.facebook.react.runtime.BridgelessReactContext$BridgelessJSModuleInvocationHandler: java.lang.Class jsModuleInterface
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String mFontFamily
com.facebook.hermes.intl.Collator: boolean mResolvedNumeric
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_END
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor iterativeBoxBlurPostProcessor
androidx.biometric.R$styleable: int Toolbar_subtitleTextAppearance
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String BIOMETRY_CURRENT_SET
androidx.biometric.R$id: int alertTitle
androidx.fragment.app.DialogFragment: java.lang.String SAVED_CANCELABLE
com.facebook.react.uimanager.drawable.BackgroundDrawable: int backgroundColor
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.ShadowNodeRegistry mShadowNodeRegistry
com.facebook.react.R$drawable: int ripple_effect
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] quaternion
androidx.biometric.R$attr: int spinnerStyle
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget mInspectorTarget
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: androidx.fragment.app.FragmentManager fragmentManager
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.modules.devloading.DevLoadingModule$Companion Companion
androidx.fragment.app.Fragment: boolean mIsCreated
androidx.biometric.R$styleable: int AppCompatTextView_drawableBottomCompat
com.facebook.react.modules.dialog.AlertFragment: java.lang.String ARG_BUTTON_NEUTRAL
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.facebook.react.devsupport.DoubleTapReloadRecognizer: long DOUBLE_TAP_DELAY
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_LEAVE
com.facebook.react.packagerconnection.FileIoHandler$3: com.facebook.react.packagerconnection.FileIoHandler this$0
androidx.biometric.R$attr: int controlBackground
androidx.biometric.R$dimen: int compat_control_corner_material
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String OVER_SCROLL_ALWAYS
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableLayoutAnimationsOnAndroidCache
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: com.facebook.react.devsupport.DefaultDevLoadingViewImplementation$Companion Companion
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType DELETE
com.facebook.react.uimanager.events.PointerEventHelper: com.facebook.react.uimanager.events.PointerEventHelper INSTANCE
androidx.biometric.R$styleable: int MenuGroup_android_menuCategory
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mLayoutParent
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int line
androidx.biometric.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean fabricEnabled
androidx.biometric.R$styleable: int AppCompatTheme_popupWindowStyle
com.swmansion.reanimated.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: int VIEW_TYPE_STACKFRAME
androidx.biometric.R$styleable: int MenuGroup_android_checkableBehavior
androidx.biometric.R$color: int switch_thumb_disabled_material_light
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF innerClipTempRectForBorderRadius
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.widget.TextView textView
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_WIDTH
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: int VERSION_FIELD_NUMBER
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_DISABLED
com.facebook.react.views.scroll.ReactScrollView: android.graphics.drawable.Drawable mEndBackground
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean bridgelessEnabled
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay NARROWSYMBOL
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform$Companion Companion
com.facebook.react.views.scroll.ReactScrollView$1: int mStableFrames
com.facebook.react.uimanager.Spacing: int BLOCK_END
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT UP
androidx.biometric.R$styleable: int SwitchCompat_thumbTintMode
androidx.biometric.R$styleable: int StateListDrawableItem_android_drawable
com.facebook.react.animated.NativeAnimatedModule$createAnimatedNode$1: com.facebook.react.bridge.ReadableMap $config
com.facebook.react.uimanager.style.ColorEdges: int right
com.facebook.react.uimanager.ViewProps: java.lang.String BOX_SHADOW
com.facebook.react.uimanager.MatrixMathHelper: double EPSILON
com.facebook.react.shell.MainPackageConfig: com.facebook.imagepipeline.core.ImagePipelineConfig frescoConfig
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$id: int customPanel
com.facebook.react.devsupport.DevSupportManagerBase: java.util.Map customPackagerCommandHandlers
com.facebook.react.views.image.ReactImageView: boolean progressiveRenderingEnabled
com.facebook.react.views.textinput.ReactTextInputShadowNode: com.facebook.react.views.textinput.ReactTextInputLocalData localData
androidx.biometric.R$attr: int buttonStyleSmall
androidx.biometric.R$dimen: int abc_text_size_display_4_material
androidx.biometric.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.biometric.R$attr: int textAppearanceSmallPopupMenu
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TERM
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LETTER_SPACING
androidx.biometric.R$drawable: int notification_template_icon_low_bg
androidx.biometric.R$string: int abc_toolbar_collapse_description
com.facebook.react.devsupport.PerftestDevSupportManager: com.facebook.react.devsupport.DevServerHelper devServerHelper
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$Notation
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageView$TilePostprocessor tilePostprocessor
com.facebook.react.views.text.ReactTextView: int mNumberOfLines
com.facebook.react.R$string: int tablist_description
androidx.biometric.R$string: int abc_menu_enter_shortcut_label
com.facebook.drawee.view.DraweeView: boolean mLegacyVisibilityHandlingEnabled
androidx.biometric.BiometricViewModel: androidx.biometric.CancellationSignalProvider mCancellationSignalProvider
com.facebook.react.modules.network.NetworkingModule: java.util.Set requestIds
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.uimanager.BaseViewManagerDelegate: com.facebook.react.uimanager.BaseViewManager mViewManager
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase mDb
com.facebook.react.modules.clipboard.ClipboardModule: com.facebook.react.modules.clipboard.ClipboardModule$Companion Companion
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsScheduled
com.facebook.react.animated.SpringAnimation: double endValue
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$id: int search_bar
com.facebook.react.uimanager.events.PointerEvent: short mCoalescingKey
androidx.biometric.R$layout: int fingerprint_dialog_layout
com.facebook.react.views.text.PreparedLayoutTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsMountingEnabled
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.internal.span.ShadowStyleSpan: float dy
com.facebook.react.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.biometric.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper mEmojiTextViewHelper
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second NUMERIC
com.facebook.react.views.image.MultiPostprocessor: com.facebook.react.views.image.MultiPostprocessor$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: android.view.ViewGroup val$parentView
androidx.lifecycle.ViewModel: boolean mCleared
androidx.biometric.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.facebook.react.views.view.MeasureUtil: com.facebook.react.views.view.MeasureUtil INSTANCE
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: int tintColor
com.oblador.keychain.cipherStorage.CipherStorageBase$Defaults: com.oblador.keychain.cipherStorage.CipherStorageBase$DecryptBytesHandler decrypt
com.facebook.react.ReactRootView: boolean mShouldLogContentAppeared
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign mResolvedCurrencySign
com.facebook.react.views.image.ImageLoadEvent: java.lang.String sourceUri
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri uri
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxKeyFormat DEFAULT_INSTANCE
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BLOCK
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int HKDF_HASH_TYPE_FIELD_NUMBER
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle UNDEFINED
androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG
androidx.biometric.R$styleable: int AppCompatImageView_android_src
com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils: com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils INSTANCE
com.facebook.react.uimanager.ViewProps: java.lang.String SCALE_Y
com.facebook.react.defaults.DefaultReactHostDelegate: java.lang.String jsMainModulePath
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour mHour
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int ALL_BITS_SET
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType NATIVE
androidx.biometric.R$integer: int abc_config_activityDefaultDur
com.reactnativecommunity.asyncstorage.SerialExecutor: java.util.concurrent.Executor executor
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: com.facebook.react.views.textinput.ReactTextInputEndEditingEvent$Companion Companion
androidx.biometric.R$color: int secondary_text_default_material_dark
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_RUN
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
androidx.biometric.R$dimen: int abc_alert_dialog_button_dimen
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft
com.google.crypto.tink.proto.AesSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
androidx.biometric.R$styleable: int SearchView_goIcon
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
androidx.biometric.R$styleable: int GradientColor_android_startY
com.facebook.react.uimanager.ViewProps: java.lang.String ALLOW_FONT_SCALING
com.facebook.react.uimanager.NativeViewHierarchyManager$1: int val$tag
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType SELF
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mParent
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacParams params_
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics windowDisplayMetrics
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_WEIGHT
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_TOP_RIGHT_RADIUS
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$layoutTime
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableBridgelessArchitectureCache
androidx.biometric.R$attr: int searchHintIcon
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.biometric.R$style: int TextAppearance_Compat_Notification_Time
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.facebook.react.views.scroll.VelocityHelper: float xVelocity
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1: com.facebook.react.modules.image.ImageLoaderModule this$0
com.facebook.react.uimanager.FloatUtil: com.facebook.react.uimanager.FloatUtil INSTANCE
com.oblador.keychain.KeychainModule$KnownCiphers: java.lang.String RSA
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl$1: com.facebook.react.ReactInstanceManager val$reactInstanceManager
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: java.lang.ref.WeakReference mOuter
androidx.biometric.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_DEVICE_CREDENTIAL
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month SHORT
com.facebook.react.ReactAndroidHWInputDeviceHelper: com.facebook.react.ReactAndroidHWInputDeviceHelper$Companion Companion
com.facebook.react.devsupport.ReleaseDevSupportManager: int lastErrorCookie
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.atomic.AtomicReference mActivity
com.google.crypto.tink.proto.KeyTypeEntry: int CATALOGUE_NAME_FIELD_NUMBER
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXT_STORAGE_DIRECTORY
com.facebook.react.views.textinput.ReactEditText$editTextAccessibilityDelegate$1: com.facebook.react.views.textinput.ReactEditText this$0
androidx.biometric.R$id: int expand_activities_button
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Month
androidx.biometric.R$layout: int abc_dialog_title_material
com.facebook.react.ReactActivityDelegate$1: com.facebook.react.ReactActivityDelegate this$0
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: com.facebook.react.uimanager.ViewAtIndex[] mViewsToAdd
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform UNSET
androidx.biometric.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentScrollConsumed
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay UNDEFINED
com.facebook.react.views.text.internal.span.ReactClickableSpan: int focusBgColor
com.facebook.react.uimanager.JSPointerDispatcher: float ONMOVE_EPSILON
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] rotation
com.facebook.react.ReactDelegate: android.os.Bundle mLaunchOptions
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsBackgroundColorSet
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.Object[] objBuffer
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: com.facebook.react.uimanager.events.EventDispatcher $eventDispatcher
com.facebook.react.modules.i18nmanager.I18nUtil: java.lang.String KEY_FOR_PREFS_FORCERTL
com.facebook.react.uimanager.UIManagerHelper: int PADDING_TOP_INDEX
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOnTransformed
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.facebook.react.common.assets.ReactFontManager: java.lang.String[] FILE_EXTENSIONS
com.facebook.react.CoreModulesPackage: com.facebook.react.ReactInstanceManager mReactInstanceManager
androidx.biometric.R$id: int image
androidx.biometric.R$styleable: int AppCompatTheme_actionDropDownStyle
androidx.biometric.R$styleable: int DrawerArrowToggle_barLength
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object mNonBatchedOperationsLock
com.facebook.react.runtime.BindingsInstaller: com.facebook.jni.HybridData mHybridData
androidx.biometric.R$attr: int actionOverflowMenuStyle
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.google.crypto.tink.proto.HmacParams: int hash_
com.facebook.react.uimanager.events.TouchEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
androidx.biometric.R$style: int Theme_AppCompat_Dialog
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BLOCK_END_COLOR
com.facebook.react.devsupport.PackagerStatusCheck$run$1: com.facebook.react.devsupport.interfaces.PackagerStatusCallback $callback
androidx.biometric.R$styleable: int[] MenuView
androidx.biometric.R$dimen: int abc_progress_bar_height_material
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mSnapToAlignment
androidx.biometric.R$styleable: int ActionBar_contentInsetEndWithActions
com.google.crypto.tink.proto.AesCtrKey: int PARAMS_FIELD_NUMBER
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: android.util.SparseBooleanArray mTagsWithLayoutVisited
com.facebook.hermes.intl.DateTimeFormat: java.lang.String mNumberingSystem
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] $VALUES
androidx.biometric.R$styleable: int SearchView_queryBackground
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
androidx.biometric.R$styleable: int AlertDialog_listLayout
com.facebook.react.uimanager.annotations.ReactPropGroup: com.facebook.react.uimanager.annotations.ReactPropGroup$Companion Companion
androidx.biometric.R$styleable: int Toolbar_collapseContentDescription
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter setter
com.facebook.react.views.text.internal.span.ReactOpacitySpan: float opacity
androidx.biometric.R$styleable: int FontFamily_fontProviderFallbackQuery
com.facebook.react.common.SystemClock: com.facebook.react.common.SystemClock INSTANCE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SPINBUTTON
androidx.biometric.R$styleable: int FontFamilyFont_ttcIndex
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxNativeAnimated
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String NAME
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TAB
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float MAX_PROGRESS_ANGLE
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
androidx.biometric.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.facebook.react.module.model.ReactModuleInfo: boolean isCxxModule
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: com.facebook.react.uimanager.ReactShadowNode node
com.facebook.react.runtime.ReactHostImpl$3: com.facebook.react.runtime.ReactHostImpl this$0
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BLOCK_COLOR
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableViewRecyclingCache
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mNestedScrollingV2ConsumedCompat
com.facebook.react.views.view.ReactDrawableHelper: android.util.TypedValue resolveOutValue
com.facebook.react.R$style: int Theme_ReactNative_AppCompat_Light
androidx.biometric.R$color: int notification_action_color_filter
com.facebook.react.jstasks.LinearCountingRetryPolicy: int delayBetweenAttemptsInMs
com.facebook.react.animated.FrameBasedAnimationDriver: int iterations
androidx.appcompat.widget.SwitchCompat: boolean mShowText
androidx.biometric.R$style: int Platform_AppCompat
kotlinx.coroutines.CompletedExceptionally: int _handled
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: com.facebook.react.devsupport.BundleDownloader$BundleInfo $bundleInfo
com.facebook.react.runtime.ReactSurfaceImpl: java.util.concurrent.atomic.AtomicReference surfaceViewRef
androidx.biometric.R$string: int fingerprint_error_hw_not_available
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableFabricLogsCache
androidx.biometric.R$string: int abc_action_bar_home_description
androidx.biometric.R$styleable: int SearchView_closeIcon
com.facebook.react.modules.intent.IntentModule$waitForActivityAndGetInitialURL$1: com.facebook.react.modules.intent.IntentModule this$0
com.facebook.react.uimanager.ViewManager: java.lang.String TAG
com.facebook.react.devsupport.RedBoxContentView: android.widget.ListView stackView
com.rnbiometrics.ReactNativeBiometrics$1: com.rnbiometrics.ReactNativeBiometrics this$0
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.proto.XChaCha20Poly1305Key DEFAULT_INSTANCE
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType INT
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_EXTENSION_KEY_LONG
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: com.facebook.react.devsupport.ReactInstanceDevHelper reactInstanceDevHelper
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory callerContextFactory
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float topRight
androidx.biometric.R$id: int title_template
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionButton
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: java.lang.String LOG_TAG
androidx.security.crypto.MasterKey: int DEFAULT_AUTHENTICATION_VALIDITY_DURATION_SECONDS
androidx.drawerlayout.widget.DrawerLayout: androidx.core.view.accessibility.AccessibilityViewCommand mActionDismiss
androidx.biometric.BiometricFragment: java.lang.String FINGERPRINT_DIALOG_FRAGMENT_TAG
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean turboModulesEnabled
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.GuardedAsyncTask$Companion Companion
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: boolean isCancelled
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: boolean mAnimated
androidx.biometric.R$color: int biometric_error_color
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: int previousContentWidth
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: int version_
com.facebook.react.bridge.ReactNativeJniCommonSoLoader: com.facebook.react.bridge.ReactNativeJniCommonSoLoader INSTANCE
com.facebook.react.views.text.TextAttributeProps: int mBackgroundColor
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_Y
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending
androidx.biometric.R$drawable: int abc_switch_track_mtrl_alpha
androidx.biometric.R$attr: int colorPrimaryDark
androidx.biometric.R$styleable: int Toolbar_titleTextColor
androidx.biometric.BiometricFragment: int CANCELED_FROM_USER
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: java.lang.Object callerContext
androidx.biometric.R$dimen: int abc_text_size_small_material
androidx.biometric.R$style: int Widget_AppCompat_SearchView_ActionBar
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: java.lang.String KEYCHAIN_DATA
androidx.biometric.R$styleable: int AppCompatTextView_drawableStartCompat
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_DECORATION_COLOR
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay SHORT
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: com.google.crypto.tink.proto.AesCtrHmacStreamingParams params_
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
androidx.biometric.R$styleable: int[] ActivityChooserView
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle SHORT
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useNativeViewConfigsInBridgelessModeCache
androidx.biometric.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.biometric.R$styleable: int AppCompatTextHelper_android_drawableTop
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: com.facebook.react.modules.core.JavaTimerManager this$0
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableNativeCSSParsingCache
com.facebook.react.util.RNLog: int ADVICE
com.facebook.imagepipeline.request.ImageRequest: java.lang.String mDiskCacheId
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1: int $requestId$inlined
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.NativeViewHierarchyOptimizer mNativeViewHierarchyOptimizer
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mParentTag
com.facebook.react.devsupport.DevSupportManagerBase: java.io.File jsSplitBundlesDir
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: com.facebook.react.defaults.DefaultNewArchitectureEntryPoint INSTANCE
androidx.biometric.R$attr: int fontVariationSettings
androidx.biometric.R$dimen: int abc_text_size_body_1_material
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SEARCHBOX
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform CAPITALIZE
com.facebook.react.views.scroll.VelocityHelper: android.view.VelocityTracker velocityTracker
androidx.biometric.R$styleable: int AlertDialog_buttonPanelSideLayout
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostManager$Companion Companion
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: int selectionStart
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodes$1: int $parentNodeTag
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mLastButtonState
androidx.biometric.R$styleable: int Toolbar_navigationIcon
androidx.biometric.R$styleable: int SearchView_android_maxWidth
com.google.crypto.tink.proto.AesSivKey: int version_
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableCustomFocusSearchOnClippedElementsAndroidCache
com.facebook.react.uimanager.Spacing: int END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: int mDefaultValue
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKeyFormat params_
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.react.uimanager.ViewProps: java.lang.String TEST_ID
com.facebook.react.R$id: int transform_origin
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: java.lang.Integer autoScrollToTopThreshold
androidx.biometric.R$styleable: int ActionBar_hideOnContentScroll
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: com.facebook.react.bridge.ReadableArray mArgs
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String NAME
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod SCALE
com.facebook.react.views.drawer.ReactDrawerLayout: int drawerPosition
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] $VALUES
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.R$string: int catalyst_hot_reloading
com.facebook.react.views.text.TextAttributeProps: int mNumberOfLines
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.events.NativeGestureUtil: com.facebook.react.uimanager.events.NativeGestureUtil INSTANCE
com.facebook.react.fabric.FabricUIManager$4: int val$surfaceId
androidx.biometric.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.rnbiometrics.ReactNativeBiometrics$2: com.rnbiometrics.ReactNativeBiometrics this$0
androidx.biometric.R$attr: int windowActionModeOverlay
androidx.biometric.R$color: int error_color_material_dark
okhttp3.ResponseBody: java.io.Reader reader
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneWiredConnectionReceiver
com.facebook.react.bridge.ReadableNativeMap: kotlin.Lazy localMap$delegate
androidx.biometric.R$attr: int lineHeight
androidx.biometric.R$id: int contentPanel
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean updateRuntimeShadowNodeReferencesOnCommitCache
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: int VERSION_FIELD_NUMBER
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_OFFSET_WIDTH
com.google.crypto.tink.proto.KeysetInfo: int KEY_INFO_FIELD_NUMBER
androidx.biometric.R$layout: int notification_template_part_time
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String COMMAND_OPEN_DRAWER
com.facebook.react.devsupport.MultipartStreamReader: long lastProgressEvent
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext context
com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil instance
androidx.biometric.R$id: int expanded_menu
androidx.security.crypto.EncryptedFile: java.lang.String mMasterKeyAlias
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.swmansion.rnscreens.ScreensModule: com.swmansion.rnscreens.NativeProxy proxy
com.facebook.react.animated.ColorAnimatedNode: com.facebook.react.bridge.ReadableMap nativeColor
com.facebook.react.views.scroll.ReactScrollViewHelper: int SMOOTH_SCROLL_DURATION
androidx.biometric.R$styleable: int SearchView_android_textAppearance
androidx.biometric.R$string: int status_bar_notification_info_overflow
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mWeakAnimationsManager
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat_Light
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String NAME
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_VERTICAL
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean traceTurboModulePromiseRejectionsOnAndroidCache
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SWITCH
com.facebook.react.ReactInstanceManager: java.util.List mPackages
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mPagedArrowScrolling
androidx.biometric.R$id: int accessibility_custom_action_8
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
androidx.biometric.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style CURRENCY
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1: int $opBufferSize
com.google.crypto.tink.proto.AesCmacKey: int PARAMS_FIELD_NUMBER
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_FILTER
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] $VALUES
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int startHeight
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxModule$Companion Companion
com.facebook.react.util.AndroidVersion: int VERSION_CODE_BAKLAVA
com.google.crypto.tink.proto.KeyTypeEntry: int NEW_KEY_ALLOWED_FIELD_NUMBER
com.facebook.imagepipeline.request.ImageRequest: java.io.File mSourceFile
com.facebook.react.views.modal.ReactModalHostView: androidx.activity.ComponentDialog dialog
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int offsetToMapBuffer
com.facebook.react.views.view.ReactViewGroup$1: com.facebook.react.views.view.ReactViewGroup this$0
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayList val$viewCommandOperations
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.lang.ref.WeakReference reactContext
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: android.os.Handler mHandler
androidx.biometric.R$color: int highlighted_text_material_light
androidx.biometric.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.biometric.R$string: int fingerprint_error_user_canceled
com.facebook.react.R$style: int Theme_Catalyst
com.facebook.react.bridge.NativeArgumentsParseException: com.facebook.react.bridge.NativeArgumentsParseException$Companion Companion
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String BIOMETRY_ANY
com.facebook.react.R$string: int toolbar_description
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
androidx.biometric.R$id: int fingerprint_icon
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithAnimation
com.facebook.react.views.text.TextLayoutManager: boolean DEFAULT_ADJUST_FONT_SIZE_TO_FIT
com.facebook.jni.DestructorThread: java.lang.Thread sThread
androidx.biometric.R$string: int generic_error_no_device_credential
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType OPACITY
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.lang.String TAG
androidx.biometric.R$dimen: int abc_dialog_min_width_major
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxParams params_
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] $VALUES
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: kotlin.enums.EnumEntries $ENTRIES
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: int SLEEP_TIME_MS
com.facebook.react.uimanager.ViewProps: java.lang.String HEIGHT
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.reactnativecommunity.asyncstorage.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.facebook.react.R$id: int transform
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String BIOMETRY_ANY_OR_DEVICE_PASSCODE
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.FileReaderModule$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: int mDeviceRotation
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalFrames
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.oblador.keychain.KeychainModule: java.lang.String IRIS_SUPPORTED_NAME
androidx.biometric.R$style: int Base_Theme_AppCompat
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JSBundleLoader mBundleLoader
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_X
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.RNInstallReferrerClient installReferrerClient
com.facebook.react.uimanager.UIManagerModule$1: com.facebook.react.uimanager.UIManagerModule this$0
androidx.biometric.R$attr: int dialogTheme
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableNewBackgroundAndBorderDrawablesCache
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] $VALUES
androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef
androidx.appcompat.widget.SwitchCompat: android.util.Property THUMB_POS
com.google.crypto.tink.proto.KeyTypeEntry: int TYPE_URL_FIELD_NUMBER
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_BREAK_STRATEGY
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_VALUE
androidx.biometric.R$id: int up
androidx.biometric.R$attr: int hideOnContentScroll
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: float width
androidx.biometric.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.facebook.react.views.image.ImageLoadEvent: int loaded
androidx.biometric.R$drawable: int abc_list_focused_holo
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer mHeightMeasureSpec
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
androidx.biometric.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map authDomains
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path innerClipPathForBorderRadius
androidx.biometric.R$styleable: int[] AppCompatTextView
com.facebook.react.runtime.ReactHostImpl: java.util.List mReactInstanceEventListeners
androidx.biometric.R$string: int abc_searchview_description_voice
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
androidx.biometric.R$style: int Base_Animation_AppCompat_Dialog
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.facebook.react.devsupport.DevServerHelper: java.lang.String packageName
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
androidx.biometric.R$style: int Widget_AppCompat_ActionButton_Overflow
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate$Companion Companion
com.facebook.react.modules.websocket.WebSocketModule$connect$2: int $id
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_STYLE
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int mAlpha
androidx.biometric.R$dimen: int hint_alpha_material_dark
com.facebook.react.animated.ColorAnimatedNode: boolean nativeColorApplied
com.google.crypto.tink.proto.KeyTemplate: int VALUE_FIELD_NUMBER
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.views.drawer.ReactDrawerLayout: int DEFAULT_DRAWER_WIDTH
androidx.biometric.R$attr: int editTextStyle
androidx.biometric.R$dimen: int abc_edit_text_inset_top_material
com.facebook.react.animated.NativeAnimatedModule: long currentBatchNumber
androidx.biometric.R$layout: int abc_popup_menu_header_item_layout
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableSynchronousStateUpdatesCache
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextManager$Companion Companion
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point lastStateUpdateScroll
androidx.biometric.BiometricPrompt: int ERROR_VENDOR
androidx.biometric.BiometricPrompt$CryptoObject: java.security.Signature mSignature
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending
com.facebook.react.ReactFragment$Builder: java.lang.Boolean mFabricEnabled
com.swmansion.reanimated.NodesManager: java.util.Queue mOperationsInBatch
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
androidx.biometric.AuthenticationCallbackProvider: androidx.biometric.AuthenticationCallbackProvider$Listener mListener
androidx.biometric.R$style: int Widget_AppCompat_RatingBar_Indicator
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float spread
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_USE_ANGLE
androidx.biometric.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor mEditor
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$attr: int panelBackground
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.util.Map componentNames
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType SPRING
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.KeyStore cachedKeyStore
com.facebook.react.views.text.ReactTextView: float mLetterSpacing
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: com.facebook.react.views.image.ReactImageView this$0
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String text
com.facebook.react.modules.statusbar.StatusBarModule$setTranslucent$1: boolean $translucent
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int ciphertextSegmentSize_
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
androidx.biometric.R$drawable: int abc_list_selector_background_transition_holo_light
androidx.biometric.R$attr: int isLightTheme
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: java.util.Map resourceDrawableIdMap
com.facebook.react.views.view.ColorUtil: com.facebook.react.views.view.ColorUtil INSTANCE
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException$Companion Companion
com.facebook.react.views.image.ImageLoadEvent: int ON_PROGRESS
com.facebook.react.views.text.TextAttributeProps: float mHeightOfTallestInlineImage
androidx.biometric.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_WIDTH
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.facebook.react.animated.ValueAnimatedNode: com.facebook.react.animated.AnimatedNodeValueListener valueListener
androidx.biometric.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mAddedSharedViews
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
com.facebook.react.uimanager.ViewProps: java.lang.String BOX_NONE
androidx.biometric.R$styleable: int ActionBar_progressBarPadding
com.facebook.react.uimanager.ReactShadowNodeImpl: java.util.ArrayList mNativeChildren
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean slowAnimationsEnabled
androidx.security.crypto.MasterKey$Builder: java.lang.String mKeyAlias
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel ERROR
com.facebook.react.animated.DiffClampAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
androidx.biometric.R$color: int bright_foreground_inverse_material_light
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_END_RADIUS
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap toBeRemoved
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType scaleType
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String NAME
androidx.biometric.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
kotlin.properties.ObservableProperty: java.lang.Object value
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion Companion
androidx.biometric.R$color: int dim_foreground_disabled_material_dark
androidx.biometric.R$dimen: int abc_search_view_preferred_height
com.facebook.react.uimanager.drawable.BorderDrawableKt: int ALL_BITS_SET
androidx.biometric.R$array: int hide_fingerprint_instantly_prefixes
androidx.biometric.R$attr: int checkboxStyle
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: java.lang.String EVENT_NAME
com.facebook.react.views.text.TextAttributes: float mMaxFontSizeMultiplier
com.facebook.react.modules.fresco.SystraceRequestListener: java.util.Map producerId
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl[] $VALUES
com.rnbiometrics.CreateSignatureCallback: com.facebook.react.bridge.Promise promise
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int reactTag
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: android.view.ViewGroup $scrollView
androidx.biometric.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.biometric.R$anim: int abc_popup_enter
androidx.biometric.R$styleable: int MenuItem_android_title
androidx.biometric.R$styleable: int AppCompatTheme_colorError
androidx.biometric.R$id: int accessibility_custom_action_18
com.facebook.react.uimanager.JSPointerDispatcher: int[] sRootScreenCoords
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: float startOpacity
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: int ciphertextSegmentSize_
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_OFFSET
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$attr: int listPreferredItemHeightSmall
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.facebook.react.uimanager.ReactClippingViewGroupHelper: java.lang.String PROP_REMOVE_CLIPPED_SUBVIEWS
com.facebook.react.runtime.BridgelessAtomicRef$State: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$layout: int abc_activity_chooser_view_list_item
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel[] $VALUES
com.facebook.react.uimanager.ViewProps: java.lang.String MAX_HEIGHT
com.swmansion.reanimated.layoutReanimation.Snapshot: int originXByParent
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableMainQueueModulesOnIOSCache
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String NAME
com.facebook.react.uimanager.ViewProps: java.lang.String COLUMN_GAP
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DEFINITION
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mIsLayoutOnly
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.react.views.text.PreparedLayoutTextView: com.facebook.react.views.text.PreparedLayoutTextView$Companion Companion
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String NEWLINE_RAW_VALUE
androidx.biometric.BiometricFragment$5: androidx.biometric.BiometricFragment this$0
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType CREATE
androidx.biometric.R$layout: int abc_screen_toolbar
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: com.facebook.react.bridge.ReadableArray val$keys
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
okhttp3.ResponseBody: okhttp3.ResponseBody$Companion Companion
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ASSET_TYPE_PHOTOS
androidx.biometric.R$styleable: int[] DrawerArrowToggle
com.google.crypto.tink.proto.AesEaxKey: int version_
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.WritableMapBuffer this$0
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableIOSViewClipToPaddingBoxCache
com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText internalEditText
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.uimanager.ShadowNodeRegistry$SingleThreadAsserter threadAsserter
com.facebook.react.ReactAndroidHWInputDeviceHelper: int lastFocusedViewId
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: com.facebook.react.common.ReleaseLevel releaseLevel
com.facebook.react.views.scroll.ReactScrollView: int pendingContentOffsetX
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_RIGHT_WIDTH
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.biometric.R$styleable: int GradientColor_android_startColor
androidx.security.crypto.EncryptedSharedPreferences$1: int[] $SwitchMap$androidx$security$crypto$EncryptedSharedPreferences$EncryptedType
com.facebook.react.util.JSStackTrace: java.lang.String METHOD_NAME_KEY
androidx.biometric.R$layout: int notification_template_part_chronometer
androidx.biometric.R$styleable: int[] Fragment
androidx.biometric.R$styleable: int ActionBar_popupTheme
com.facebook.react.animated.TrackingAnimatedNode: int valueNode
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.proto.KeyTemplate DEFAULT_INSTANCE
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.annotations.ReactProp$Companion: java.lang.String USE_DEFAULT_TYPE
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_CONTAIN
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_FILENAME
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Body1
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec eventAnimationDriverMatchSpecCached
com.facebook.react.devsupport.MultipartStreamReader: java.lang.String boundary
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage top
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1: java.lang.String $responseType$inlined
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.text.TextAttributes textAttributes
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
androidx.biometric.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.facebook.react.fabric.FabricUIManagerBinding: com.facebook.react.fabric.FabricUIManagerBinding$Companion Companion
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: java.util.List reactPackages
androidx.biometric.R$drawable: int btn_radio_off_mtrl
com.facebook.react.views.text.TextAttributes: float mHeightOfTallestInlineViewOrImage
androidx.biometric.R$styleable: int SearchView_android_hint
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
androidx.biometric.R$attr: int arrowShaftLength
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.facebook.react.views.text.ReactTextView: int mLinkifyMaskType
com.facebook.react.common.ShakeDetector: long lastShakeTimestamp
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.facebook.react.internal.interop.InteropEvent: java.lang.String interopEventName
com.facebook.react.ReactInstanceManagerBuilder: boolean mLazyViewManagersEnabled
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableNewBackgroundAndBorderDrawablesCache
com.facebook.react.uimanager.style.BoxShadow: float offsetY
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mX
com.facebook.react.R$style: int DialogAnimationSlide
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback
com.facebook.react.packagerconnection.FileIoHandler: com.facebook.react.packagerconnection.FileIoHandler$Companion Companion
androidx.biometric.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.biometric.R$style: int Widget_AppCompat_RatingBar_Small
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
androidx.biometric.R$id: int accessibility_custom_action_0
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: android.content.Context mContext
androidx.biometric.R$style: int Theme_AppCompat_DayNight
androidx.biometric.R$layout: int notification_template_custom_big
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerTopRightCorner
androidx.biometric.R$dimen: int notification_large_icon_height
com.facebook.react.R$id: int original_important_for_ax
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.biometric.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String NAME
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.proto.AesGcmSivKey DEFAULT_INSTANCE
androidx.biometric.R$style: int Widget_Compat_NotificationActionContainer
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: int version_
com.facebook.hermes.intl.JSObjects: java.lang.Object s_undefined
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.Path pathForOutline
com.facebook.react.views.image.ImageLoadEvent: int ON_LOAD_START
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: int mInitialTag
androidx.biometric.R$id: int decor_content_parent
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_MOVE
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.nozbe.watermelondb.WMDatabaseDriver: java.util.logging.Logger log
com.facebook.react.views.drawer.events.DrawerClosedEvent: java.lang.String EVENT_NAME
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: kotlin.jvm.functions.Function0 accessorProvider
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_FPS_DEBUG_KEY
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Paint borderPaint
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerBottomLeftCorner
androidx.biometric.R$attr: int toolbarStyle
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay ALWAYS
com.facebook.react.uimanager.OnLayoutEvent: int x
androidx.biometric.R$color: int material_deep_teal_200
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour DIGIT2
com.facebook.react.ReactRootView: boolean mIsAttachedToInstance
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: boolean mIsRoot
com.swmansion.reanimated.layoutReanimation.Snapshot: int originYByParent
com.facebook.react.views.switchview.ReactSwitchEvent: boolean isChecked
androidx.biometric.R$styleable: int Toolbar_titleMarginEnd
com.facebook.hermes.intl.PlatformNumberFormatterICU: java.text.Format mFinalFormat
androidx.biometric.R$drawable: int btn_checkbox_checked_mtrl
com.facebook.hermes.intl.NumberFormat: int mResolvedMinimumFractionDigits
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$Companion Companion
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList keyInfo_
androidx.biometric.R$id: int accessibility_custom_action_4
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.ILocaleObject mResolvedLocaleObjectForResolvedOptions
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: java.util.Map$Entry nextEntry
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State Failure
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostInspectorTarget mReactHostInspectorTarget
com.facebook.react.R$string: int state_mixed_description
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
com.facebook.react.R$style: int CalendarDatePickerDialog
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String moduleName
com.swmansion.reanimated.keyboard.WindowsInsetsManager: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.packagerconnection.ReconnectingWebSocket: com.facebook.react.packagerconnection.ReconnectingWebSocket$Companion Companion
com.facebook.react.animated.SpringAnimation: double springStiffness
com.facebook.react.fabric.SynchronousEvent: int viewTag
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_VARIANT
androidx.biometric.R$styleable: int GradientColor_android_centerY
com.facebook.react.uimanager.ReactAxOrderHelper: com.facebook.react.uimanager.ReactAxOrderHelper INSTANCE
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int counter
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_DIRECTION
androidx.biometric.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.ConcurrentHashMap mSurfaceIdToManager
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_COLORS
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent val$viewEvent
com.facebook.react.uimanager.events.ContentSizeChangeEvent: int height
com.facebook.react.modules.blob.BlobModule: java.util.HashMap blobs
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1: com.facebook.react.bridge.ReadableMap $animationConfig
com.facebook.react.HeadlessJsTaskService: com.facebook.react.HeadlessJsTaskService$Companion Companion
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String CALENDAR_CANON
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.biometric.R$id: int chronometer
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.Map mPackageModuleInfos
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
com.facebook.react.uimanager.YogaNodePool: kotlin.Lazy pool$delegate
com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String appName
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String NAME
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.facebook.react.views.text.TextAttributeProps: float mTextShadowOffsetDx
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener mDevBundleDownloadListener
androidx.biometric.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.facebook.react.uimanager.events.TouchesHelper$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$styleable: int Toolbar_popupTheme
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_WIDTH
androidx.biometric.BiometricManager: int BIOMETRIC_ERROR_UNSUPPORTED
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int moduleId
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] languageAliasKeys2
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mY
androidx.biometric.BiometricFragment: int SHOW_PROMPT_DELAY_MS
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String NAME
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay SYMBOL
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType LONG
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_UNKNOWN
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: com.facebook.react.devsupport.interfaces.StackFrame[] stack
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_RADIUS
com.facebook.react.uimanager.events.EventEmitterImpl: com.facebook.react.uimanager.events.RCTModernEventEmitter fabricEventEmitter
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii topRight
androidx.biometric.R$styleable: int AppCompatSeekBar_android_thumb
androidx.biometric.R$attr: int color
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float bottomRight
androidx.biometric.R$styleable: int Toolbar_contentInsetEnd
androidx.biometric.BiometricManager: int BIOMETRIC_SUCCESS
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasReplacementsRegion3
com.facebook.react.uimanager.ViewProps: java.lang.String FOREGROUND_COLOR
androidx.biometric.R$styleable: int SearchView_iconifiedByDefault
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String HOURCYCLE_CANON
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType LONG
com.facebook.react.common.ReleaseLevel: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$color: int button_material_light
androidx.biometric.R$dimen: int abc_control_inset_material
androidx.biometric.R$styleable: int MenuItem_iconTint
com.facebook.react.views.scroll.ReactScrollView: java.lang.Runnable mPostTouchRunnable
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] $VALUES
com.facebook.react.views.scroll.ScrollEvent: int contentWidth
com.facebook.react.runtime.ReactInstance: com.facebook.react.modules.core.JavaTimerManager javaTimerManager
androidx.biometric.BiometricFragment: int DISMISS_INSTANTLY_DELAY_MS
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.HashMap initialNotificationMap
com.facebook.react.views.text.TextAttributeProps: float mLetterSpacingInput
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager pausedInDebuggerOverlayManager
com.facebook.react.uimanager.ReactShadowNodeImpl: int mTotalNativeChildren
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_Y
androidx.biometric.R$string: int abc_menu_alt_shortcut_label
com.facebook.react.uimanager.ViewProps: java.lang.String END
androidx.biometric.R$styleable: int ActionBar_contentInsetLeft
com.facebook.react.animated.NativeAnimatedNodesManager: android.util.SparseArray updatedNodes
com.swmansion.reanimated.layoutReanimation.Snapshot: int originX
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$FrameViewHolder: android.widget.TextView fileView
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint
com.facebook.react.R$string: int spinbutton_description
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEmojiEditTextHelper mAppCompatEmojiEditTextHelper
androidx.biometric.R$layout: int abc_action_mode_bar
com.facebook.react.packagerconnection.ReconnectingWebSocket: com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback connectionCallback
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Set mHoveringPointerIds
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View mContentView
androidx.biometric.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LISTITEM
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
androidx.biometric.R$attr: int textAllCaps
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Medium
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion Companion
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.style.Overflow mOverflow
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_TRANSFORM_MATRIX
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.ReactActivity$1: com.facebook.react.ReactActivity this$0
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: int value
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: int val$index
androidx.biometric.R$style: int Base_Widget_AppCompat_ListView_Menu
com.facebook.react.views.textinput.ReactEditText: boolean containsImages
com.facebook.react.devsupport.FpsView: android.widget.TextView textView
androidx.biometric.R$string: int abc_searchview_description_submit
com.facebook.react.uimanager.UIViewOperationQueue: int DEFAULT_MIN_TIME_LEFT_IN_FRAME_FOR_NONBATCHED_OPERATION_MS
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.runtime.BindingsInstaller bindingsInstaller
com.facebook.react.views.textinput.ReactEditText: java.lang.String placeholder
androidx.biometric.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.facebook.react.modules.core.ReactChoreographer: android.view.Choreographer$FrameCallback frameCallback
com.facebook.react.uimanager.ViewProps: java.lang.String RESIZE_MODE
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.atomic.AtomicReference mLastUsedActivity
androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.oblador.keychain.KeychainModuleBuilder: boolean useWarmUp
com.facebook.react.bridge.DynamicFromMap: java.lang.String name
com.oblador.keychain.KeychainModule$Errors: java.lang.String E_EMPTY_PARAMETERS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.nozbe.watermelondb.WMDatabaseBridge: java.util.Map connections
androidx.biometric.R$attr: int contentInsetEnd
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer mWidthMeasureSpec
androidx.biometric.R$styleable: int AppCompatTheme_actionBarTabStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.R$string: int catalyst_sample_profiler_toggle
com.oblador.vectoricons.VectorIconsModule$Errors: java.lang.String E_NOT_IMPLEMENTED
androidx.biometric.R$anim: int abc_slide_out_bottom
androidx.biometric.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BLOCK_START_COLOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mViewsToDeleteAfterTouchFinishes
com.facebook.react.animated.DiffClampAnimatedNode: int inputNodeTag
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger: com.facebook.react.common.annotations.internal.LegacyArchitectureLogger INSTANCE
androidx.biometric.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.biometric.R$string: int confirm_device_credential_password
androidx.fragment.app.DialogFragment: int mStyle
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: com.facebook.react.modules.dialog.AlertFragment fragmentToShow
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole mAccessibilityRole
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_OVERFLOW_INSET
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerProvider: java.lang.String[] ONE_PLUS_MODELS_WITHOUT_BIOMETRIC_BUG
androidx.biometric.R$attr: int paddingEnd
com.facebook.react.uimanager.LayoutDirectionUtil$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.BiometricPrompt$ResetCallbackObserver: java.lang.ref.WeakReference mViewModelRef
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_OPTION_USAGE
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ALIGNMENT
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: int index
com.facebook.react.ReactActivityDelegate: com.facebook.react.modules.core.PermissionListener mPermissionListener
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.devsupport.PackagerStatusCheck: java.lang.String PACKAGER_OK_STATUS
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedBundleFromNetworkLoader$1: java.lang.String $sourceURL
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] regionAliasReplacements2
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode
com.facebook.react.views.text.PreparedLayout: android.text.Layout layout
com.facebook.react.uimanager.ViewProps: java.lang.String MIN_HEIGHT
androidx.biometric.R$string: int default_error_msg
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: double mDefaultValue
androidx.biometric.R$attr: int popupTheme
com.facebook.react.devsupport.DevSupportManagerBase: boolean isReceiverRegistered
com.facebook.react.uimanager.JSTouchDispatcher: android.view.ViewGroup mViewGroup
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String assertionErrorMessage
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderStyle mBorderStyle
com.facebook.react.uimanager.events.EventDispatcherImpl: boolean mHasDispatchScheduled
androidx.biometric.R$attr: int imageButtonStyle
com.facebook.react.views.text.TextAttributeProps: boolean mIsLineThroughTextDecorationSet
com.facebook.react.views.scroll.ReactHorizontalScrollView: int pendingContentOffsetX
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_BORDER_RADII
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_COLLECTION
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: com.oblador.keychain.cipherStorage.CipherStorageBase$EncryptStringHandler encrypt
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useTurboModuleInteropCache
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: int PARAMS_FIELD_NUMBER
com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils: java.util.List highlightPaints
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_ALIGN
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month NUMERIC
androidx.biometric.R$id: int accessibility_custom_action_31
androidx.biometric.R$styleable: int[] ActionBar
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay LONG
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableLayoutAnimationsOnAndroidCache
com.facebook.react.modules.statusbar.StatusBarModule$setTranslucent$1: android.app.Activity $activity
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.PackagerStatusCheck packagerStatusCheck
com.facebook.imagepipeline.request.ImageRequest: boolean mProgressiveRenderingEnabled
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$color: int primary_material_dark
androidx.biometric.R$attr: int backgroundSplit
com.facebook.react.views.modal.RequestCloseEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mOuterClipPathForBorderRadius
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.text.DecimalFormat mDecimalFormat
androidx.biometric.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.uimanager.JSTouchDispatcher jsTouchDispatcher
androidx.biometric.R$attr: int iconTint
androidx.biometric.R$style: int TextAppearance_AppCompat_Subhead
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean fixMappingOfEventPrioritiesBetweenFabricAndReactCache
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: java.util.ArrayList transitionToIdleEvents
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mScrollXAfterMeasure
androidx.biometric.R$attr: int alpha
androidx.biometric.R$drawable: int abc_list_selector_disabled_holo_dark
com.facebook.react.uimanager.ShadowNodeRegistry: android.util.SparseArray tagsToCSSNodes
com.facebook.react.ReactInstanceManager: java.lang.Boolean mHasStartedDestroying
com.facebook.react.common.ShakeDetector: float accelerationX
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] $VALUES
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp[] $VALUES
com.facebook.react.jstasks.HeadlessJsTaskContext: android.util.SparseArray taskTimeouts
androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile$FileEncryptionScheme mFileEncryptionScheme
androidx.fragment.app.FragmentActivity: boolean mStopped
com.facebook.react.bridge.ReadableType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenX
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion Companion
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.biometric.R$color: int abc_tint_switch_track
com.facebook.react.bridge.ReadableMapBuilder: com.facebook.react.bridge.WritableMap map
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_TOP_LEFT_RADIUS
com.facebook.react.uimanager.ViewProps: java.lang.String BACKGROUND_IMAGE
com.facebook.hermes.intl.IPlatformCollator$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformCollator$CaseFirst
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path centerDrawPath
androidx.biometric.R$attr: int commitIcon
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_END_POINT
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String HOURCYCLE
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.MemoryPressureRouter mMemoryPressureRouter
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
androidx.fragment.app.Fragment: java.lang.String mPreviousWho
androidx.biometric.R$color: int material_grey_50
androidx.biometric.R$attr: int thumbTint
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1: com.facebook.react.views.textinput.ReactEditText this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LIST
androidx.biometric.R$style: int Base_Widget_AppCompat_ImageButton
com.facebook.react.R$string: int state_expanded_description
com.reactnativecommunity.asyncstorage.SerialExecutor$1: java.lang.Runnable val$r
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean mDecodePrefetches
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era SHORT
com.facebook.imagepipeline.request.BasePostprocessor: android.graphics.Bitmap$Config FALLBACK_BITMAP_CONFIGURATION
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics: float top
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float _springDamping
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.net.Uri _uri
com.google.crypto.tink.proto.Keyset: int PRIMARY_KEY_ID_FIELD_NUMBER
androidx.biometric.R$drawable: int abc_spinner_mtrl_am_alpha
com.facebook.react.animated.DecayAnimation: int iterations
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
androidx.biometric.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableResourceTimingAPICache
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.facebook.react.uimanager.ViewProps: java.lang.String POSITION
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType INT
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ANIMATE_TO_START_DURATION
com.facebook.react.uimanager.drawable.OutlineDrawable: android.content.Context context
androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetPrefName
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String OVER_SCROLL_NEVER
androidx.biometric.R$id: int list_item
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] edgeColors
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
com.facebook.react.animated.NativeAnimatedModule$flattenAnimatedNodeOffset$1: int $tag
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.Sensor sensor
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_CONNECT_ANIMATED_NODES
com.oblador.keychain.cipherStorage.CipherStorageBase: int BUFFER_SIZE
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1: com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener $commandListener
com.facebook.react.views.text.TextAttributeProps: int mTextShadowColor
androidx.biometric.R$color: int secondary_text_default_material_light
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
androidx.biometric.R$layout: int select_dialog_multichoice_material
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JSBundleLoader mJsBundleLoader
com.facebook.react.views.view.CanvasUtil: com.facebook.react.views.view.CanvasUtil INSTANCE
com.facebook.react.animated.SpringAnimation: double springDamping
androidx.security.crypto.MasterKeys: android.security.keystore.KeyGenParameterSpec AES256_GCM_SPEC
com.facebook.react.uimanager.ReactStage$Companion: int MODULE_DID_LOAD
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_LEFT_RADIUS
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.facebook.react.views.text.internal.span.CustomStyleSpan: int privateStyle
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_RIGHT_COLOR
androidx.biometric.R$style: int TextAppearance_AppCompat_Subhead_Inverse
androidx.biometric.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask: okhttp3.MediaType JSON
androidx.biometric.R$attr: int alertDialogCenterButtons
androidx.biometric.R$attr: int actionMenuTextColor
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1: int $color
androidx.biometric.R$dimen: int notification_big_circle_margin
com.facebook.react.common.assets.ReactFontManager: java.util.Map fontCache
com.facebook.react.NativeModuleRegistryBuilder: java.util.HashMap modules
com.facebook.hermes.intl.NumberFormat: boolean mGroupingUsed
androidx.biometric.R$drawable: int abc_btn_borderless_material
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType TO_BOTTOM_LEFT
com.facebook.react.animated.PropsAnimatedNode: java.util.Map propNodeMapping
androidx.biometric.R$attr: int subMenuArrow
androidx.biometric.R$string: int abc_activity_chooser_view_see_all
androidx.biometric.R$drawable: int abc_ic_menu_overflow_material
androidx.biometric.R$styleable: int PopupWindow_android_popupBackground
androidx.biometric.R$styleable: int MenuView_android_itemTextAppearance
com.nozbe.watermelondb.utils.MigrationSet: int from
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: int DERIVED_KEY_SIZE_FIELD_NUMBER
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
androidx.fragment.app.Fragment: int CREATED
com.facebook.react.ReactDelegate: boolean mFabricEnabled
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OUT_CAPTURE
com.facebook.react.views.text.ReactTextShadowNode$1: com.facebook.react.views.text.ReactTextShadowNode this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role IMG
androidx.biometric.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.facebook.react.animated.AdditionAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
androidx.biometric.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.RectF computedBorderInsets
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_RADIUS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_ANIMATIONS_DEBUG_KEY
com.oblador.vectoricons.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_START
com.facebook.hermes.intl.Constants: java.lang.String CASEFIRST_LOWER
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.facebook.react.uimanager.ViewProps: java.lang.String BACKGROUND_COLOR
com.facebook.react.modules.devtoolsruntimesettings.Settings: boolean shouldReloadAndProfile
androidx.biometric.R$id: int search_edit_frame
com.facebook.react.views.modal.ReactModalHostView: java.lang.String animationType
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String TAG
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String NAME
androidx.biometric.R$styleable: int MenuItem_actionProviderClass
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: int shadowColor
com.facebook.react.modules.network.ProgressiveStringDecoder: com.facebook.react.modules.network.ProgressiveStringDecoder$Companion Companion
com.facebook.react.bridge.CallbackImpl: boolean invoked
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec jsQueueSpec
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider currentProvider
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: androidx.core.graphics.Insets $insets
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String lastErrorTitle
com.facebook.react.uimanager.UIManagerHelper: int PADDING_BOTTOM_INDEX
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role RADIOGROUP
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod RESIZE
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight
androidx.biometric.BiometricFragment: android.os.Handler mHandler
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SUMMARY
com.facebook.react.packagerconnection.ReconnectingWebSocket: com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback messageCallback
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: int reactTag
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role OPTION
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodes$1: int $childNodeTag
androidx.biometric.R$attr: int windowFixedWidthMinor
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: boolean shouldStop
com.facebook.react.uimanager.ViewProps: java.lang.String ALIGN_ITEMS
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_BACKGROUND_COLOR
androidx.biometric.R$attr: int queryBackground
androidx.biometric.BiometricFragment$StopDelayingPromptRunnable: java.lang.ref.WeakReference mViewModelRef
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JavaScriptExecutorFactory mJsExecutorFactory
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchRunStartTime
androidx.biometric.R$styleable: int AppCompatTheme_spinnerStyle
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodeFromView$1: int $viewTag
com.facebook.react.uimanager.style.OutlineStyle: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind NONE
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIncludeFontPadding
com.facebook.react.views.textinput.ReactEditText: java.util.concurrent.CopyOnWriteArrayList listeners
androidx.biometric.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.biometric.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.biometric.BiometricFragment: int CANCELED_FROM_CLIENT
androidx.biometric.R$styleable: int Spinner_android_popupBackground
androidx.biometric.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.proto.KeysetInfo DEFAULT_INSTANCE
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int intBufferLen
androidx.biometric.R$styleable: int AppCompatTheme_alertDialogTheme
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: com.facebook.react.common.mapbuffer.ReadableMapBuffer this$0
com.facebook.react.R$string: int catalyst_perf_monitor
androidx.security.crypto.MasterKey: java.lang.String DEFAULT_MASTER_KEY_ALIAS
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion Companion
androidx.biometric.R$styleable: int FragmentContainerView_android_tag
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Keyword: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType keyword
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.PointerEvent$PointerEventState mEventState
com.facebook.react.views.text.TextAttributeProps: java.lang.String mFontFeatureSettings
org.pgsqlite.SQLitePlugin: java.lang.String TAG
androidx.biometric.BiometricViewModel$1: androidx.biometric.BiometricViewModel this$0
com.facebook.react.BaseReactPackage$ModuleHolderProvider: com.facebook.react.BaseReactPackage this$0
androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.biometric.R$dimen: int abc_dialog_padding_material
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_TEMP_DIRECTORY
com.facebook.react.uimanager.ViewProps: java.lang.String JUSTIFY_CONTENT
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion Companion
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper stateWrapper
com.swmansion.rnscreens.ScreenContentWrapperManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.modules.appstate.AppStateModule$Companion Companion
com.facebook.react.views.scroll.ReactScrollViewHelper: com.facebook.react.views.scroll.ReactScrollViewHelper INSTANCE
com.facebook.react.views.text.ReactTextView: float mFontSize
androidx.biometric.R$styleable: int[] MenuItem
com.facebook.react.views.text.TextAttributeProps: boolean mContainsImages
com.facebook.react.uimanager.ViewProps: java.lang.String RENDER_TO_HARDWARE_TEXTURE
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean refreshing
androidx.biometric.R$styleable: int TextAppearance_android_shadowRadius
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_IDLE
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat hmacKeyFormat_
com.facebook.react.views.scroll.ReactScrollView: java.lang.String mScrollPerfTag
androidx.biometric.R$attr: int actionModeCopyDrawable
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_RUN
androidx.biometric.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.biometric.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.biometric.R$style: int Animation_AppCompat_DropDownUp
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.common.SurfaceDelegateFactory mSurfaceDelegateFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
androidx.biometric.R$id: int accessibility_action_clickable_span
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
androidx.biometric.R$id: int notification_background
com.swmansion.reanimated.NodesManager: com.swmansion.worklets.WorkletsModule mWorkletsModule
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: int weight
com.facebook.react.views.image.ImageResizeMethod: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.text.ReactBaseTextShadowNode: int mColor
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSFORM_ORIGIN
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_DISCONNECT_ANIMATED_NODE_FROM_VIEW
androidx.biometric.R$style: int Base_V28_Theme_AppCompat
androidx.biometric.R$styleable: int MenuItem_showAsAction
com.facebook.react.common.assets.ReactFontManager: java.lang.String[] EXTENSIONS
androidx.biometric.R$attr: int autoCompleteTextViewStyle
androidx.appcompat.widget.SwitchCompat: int mSwitchWidth
androidx.biometric.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.biometric.R$style: int Widget_AppCompat_ActionBar_Solid
com.facebook.react.util.JSStackTrace: com.facebook.react.util.JSStackTrace INSTANCE
androidx.biometric.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.style.RadialGradient$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float prevTouchX
androidx.security.crypto.MasterKeys: int KEY_SIZE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
androidx.biometric.R$styleable: int SearchView_autoShowKeyboard
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_RADIUS
com.facebook.react.modules.network.NetworkingModule: boolean shuttingDown
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.lang.reflect.Method getScreen
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Large
com.facebook.react.views.scroll.ReactScrollView: boolean mSnapToEnd
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: int mId
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_STATE
androidx.fragment.app.Fragment: int mContentLayoutId
com.facebook.react.views.text.TextAttributes: float DEFAULT_MAX_FONT_SIZE_MULTIPLIER
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration reactQueueConfiguration
com.facebook.react.R$string: int image_description
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: int PARAMS_FIELD_NUMBER
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String TAG
androidx.biometric.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
androidx.biometric.R$styleable: int PopupWindow_android_popupAnimationStyle
com.facebook.react.uimanager.UIViewOperationQueue: long mUpdatePropertiesOperationCount
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint
com.facebook.hermes.intl.UnicodeExtensionKeys: java.util.Map s_collationAliasMappings
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions
androidx.biometric.R$attr: int actionBarTabStyle
com.facebook.react.uimanager.UIManagerModuleConstants: com.facebook.react.uimanager.UIManagerModuleConstants INSTANCE
com.facebook.react.modules.blob.BlobProvider: com.facebook.react.modules.blob.BlobProvider$Companion Companion
com.facebook.react.views.text.internal.span.CustomStyleSpan: int privateWeight
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.ColorPropConverter: com.facebook.react.bridge.ColorPropConverter INSTANCE
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: double angle
com.facebook.react.uimanager.UIManagerHelper: int PADDING_END_INDEX
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_STRETCH
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle H23
androidx.biometric.R$styleable: int MenuItem_android_id
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$styleable: int AppCompatTheme_buttonBarButtonStyle
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.core.JavaTimerManager$Timer: int timerId
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] $VALUES
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable completionRunnable
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String CALENDAR
com.facebook.react.CoreModulesPackage: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mHardwareBackBtnHandler
androidx.biometric.R$id: int accessibility_custom_action_11
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.MapBuffer$DataType type
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: android.graphics.Paint highlightedElementsPaint
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_OFFSET_DX
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float full
com.facebook.react.views.text.internal.span.SetSpanOperation: int SPAN_MAX_PRIORITY
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.Long firstUptime
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] $VALUES
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState val$viewState
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: long last
com.swmansion.rnscreens.NativeScreensModuleSpec: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1: com.facebook.react.bridge.ReactApplicationContext $reactApplicationContext$inlined
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String TAG
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String methodName
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computedBorderRadius
androidx.biometric.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_COLOR
androidx.biometric.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKey DEFAULT_INSTANCE
com.facebook.react.runtime.internal.bolts.Task: java.lang.Exception error
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape$Companion Companion
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType POINT
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ImageResizeMethod resizeMethod
com.facebook.react.uimanager.ViewManagerRegistry$1: java.util.List val$viewManagers
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat params_
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ShadowNodeRegistry mShadowNodeRegistry
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList entry_
com.facebook.react.R$string: int catalyst_dismiss_button
androidx.biometric.BiometricManager: int BIOMETRIC_STATUS_UNKNOWN
androidx.biometric.R$style: int Widget_AppCompat_EditText
com.facebook.react.uimanager.UIManagerModule$3: int val$rootViewTag
com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult: java.util.HashMap extensions
androidx.biometric.FingerprintDialogFragment: int STATE_FINGERPRINT_AUTHENTICATED
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.imagepipeline.request.ImageRequest: boolean mIsMemoryCacheEnabled
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ANIMATE_TO_TRIGGER_DURATION
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme AES256_GCM
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.ReactActivityDelegate: java.lang.String mMainComponentName
androidx.biometric.R$attr: int autoSizeMaxTextSize
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String HEIGHT
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl this$0
com.google.crypto.tink.proto.AesCtrKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableViewRecyclingForViewCache
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.uimanager.UIImplementation: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.views.text.PreparedLayoutTextView: android.text.Layout layout
com.facebook.react.uimanager.NoSuchNativeViewException: com.facebook.react.uimanager.NoSuchNativeViewException$Companion Companion
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.hermes.reactexecutor.HermesExecutor$Companion Companion
androidx.biometric.BiometricFragment$6: androidx.biometric.BiometricFragment this$0
com.facebook.react.runtime.ReactHostImpl: int mId
androidx.biometric.R$attr: int progressBarPadding
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int DEFAULT_BORDER_RGB
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.List transformMatrix
androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetAlias
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder mTMMDelegateBuilder
com.facebook.react.views.text.ReactTextView: boolean mShouldAdjustSpannableFontSize
androidx.biometric.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener fpsListener
com.facebook.react.uimanager.ViewProps: java.lang.String WIDTH
com.facebook.react.uimanager.UIManagerModule$3: com.facebook.react.uimanager.UIManagerModule this$0
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.facebook.hermes.intl.ParsedLocaleIdentifier: java.util.TreeMap otherExtensionsMap
com.facebook.react.ReactRootView: int mLastOffsetY
com.facebook.react.views.text.TextAttributeProps: float mFontSizeInput
com.nozbe.watermelondb.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.R$string: int catalyst_change_bundle_location
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean invertColorsEnabled
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: int CONTENT_TYPE_MASK
com.facebook.react.modules.permissions.PermissionsModule$requestPermission$1: java.lang.String $permission
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$Companion Companion
com.facebook.react.R$string: int catalyst_dev_menu_header
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode$Companion Companion
com.facebook.react.views.textinput.ReactTextInputTextWatcher: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_CANCEL
com.facebook.react.R$id: int accessibility_order_parent
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper mMaintainVisibleContentPositionHelper
androidx.biometric.R$style: int TextAppearance_AppCompat_Medium
com.facebook.react.views.scroll.ReactScrollView$2: int[] $SwitchMap$com$facebook$react$uimanager$style$Overflow
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_HEIGHT
com.google.crypto.tink.proto.HmacParams: int tagSize_
androidx.biometric.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.swmansion.rnscreens.ScreenFooterManager: java.lang.String REACT_CLASS
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: boolean isRTL
com.facebook.react.packagerconnection.JSPackagerClient: java.lang.String TAG
com.facebook.react.uimanager.ViewProps: java.lang.String DISPLAY
androidx.biometric.R$style: int Base_Widget_AppCompat_ProgressBar
com.facebook.react.modules.core.JavaTimerManager: java.util.PriorityQueue timers
androidx.biometric.R$drawable: int notify_panel_notification_icon_bg
androidx.biometric.R$style: int Base_Theme_AppCompat_Dialog
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.Object objectValue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
androidx.biometric.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
androidx.biometric.R$dimen: int abc_list_item_padding_horizontal_material
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_TOP_LEFT_RADIUS
com.facebook.react.animated.NativeAnimatedModule: int numNonFabricAnimations
com.facebook.react.uimanager.events.FabricEventDispatcher: android.os.Handler uiThreadHandler
com.facebook.react.fabric.StateWrapperImpl: java.lang.String TAG
com.facebook.react.views.textinput.ReactEditText: java.lang.String returnKeyType
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_X
androidx.biometric.R$styleable: int AppCompatTextView_fontFamily
com.facebook.react.devsupport.StackTraceHelper: java.lang.String STACK_KEY
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computedBorderRadius
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ALERT
androidx.biometric.R$layout: int abc_screen_simple_overlay_action_mode
com.oblador.keychain.cipherStorage.CipherStorageBase: javax.crypto.Cipher cachedCipher
com.facebook.react.animated.FrameBasedAnimationDriver: double fromValue
com.facebook.react.modules.debug.DevMenuModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl ONLY_IF_CACHED
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role METER
androidx.biometric.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.facebook.react.runtime.CoreReactPackage: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay NARROW
com.facebook.react.views.scroll.ReactScrollView: boolean sTriedToGetScrollerField
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.content.Context mContext
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String placeholder
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerTopLeftCorner
androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets
androidx.biometric.R$attr: int seekBarStyle
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableResourceTimingAPICache
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: com.facebook.react.modules.core.JavaTimerManager this$0
androidx.biometric.R$attr: int switchMinWidth
androidx.appcompat.widget.AppCompatEditText: androidx.core.widget.TextViewOnReceiveContentListener mDefaultOnReceiveContentListener
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
androidx.biometric.CryptoObjectUtils: java.lang.String FAKE_KEY_NAME
com.facebook.react.devsupport.PackagerStatusCheck: com.facebook.react.devsupport.PackagerStatusCheck$Companion Companion
com.facebook.react.devsupport.InspectorFlags: com.facebook.react.devsupport.InspectorFlags INSTANCE
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map VIEW_MANAGER_SETTER_MAP
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.ReactInstanceManager: android.app.Activity mCurrentActivity
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.uimanager.NativeViewHierarchyManager$1: android.view.ViewGroup val$viewToManage
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap cleanerCallback
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeValue$1: int $tag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
androidx.biometric.R$attr: int actionBarItemBackground
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle mTimeStyle
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_MAXIMUM_FONT_SIZE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DIRECTORY
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: java.lang.String value
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
androidx.biometric.R$color: int material_grey_300
com.facebook.react.uimanager.drawable.BorderDrawable: kotlin.reflect.KProperty[] $$delegatedProperties
androidx.biometric.R$styleable: int AppCompatTextView_textLocale
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$commitStartTime
com.facebook.react.animated.TransformAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
androidx.fragment.app.DialogFragment: int mTheme
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsLineThroughTextDecorationSet
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.react.bridge.CxxModuleWrapperBase$Companion Companion
androidx.biometric.R$id: int tag_accessibility_pane_title
com.facebook.react.modules.debug.DevMenuModule: java.lang.String NAME
androidx.biometric.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.facebook.imagepipeline.request.BasePostprocessor: java.lang.reflect.Method sCopyBitmap
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller mScroller
androidx.biometric.R$layout: int abc_alert_dialog_material
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics: boolean wasFound
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT DOWN_CAPTURE
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String SCROLL_AWAY_PADDING_TOP
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.OutlineStyle outlineStyle
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int[] drawingOrderIndices
androidx.biometric.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
androidx.fragment.app.Fragment: boolean mFromLayout
androidx.biometric.R$id: int accessibility_custom_action_6
com.facebook.react.ReactInstanceManager: android.content.Context mApplicationContext
androidx.biometric.BiometricErrorData: int mErrorCode
androidx.biometric.R$attr: int actionBarTheme
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String NAME
com.swmansion.rnscreens.ModalScreenViewManager: com.swmansion.rnscreens.ModalScreenViewManager$Companion Companion
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory callerContextFactory
androidx.security.crypto.MasterKey$Builder: android.security.keystore.KeyGenParameterSpec mKeyGenParameterSpec
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: com.facebook.react.bridge.Callback val$callback
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: int VIEW_TYPE_COUNT
androidx.biometric.R$drawable: int abc_btn_radio_material
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1: com.facebook.react.modules.image.ImageLoaderModule this$0
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_IN_EASE_OUT
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.String TAG
com.facebook.react.R$id: int accessibility_value
androidx.biometric.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.proto.HmacParams DEFAULT_INSTANCE
com.facebook.react.animated.ObjectAnimatedNode: java.lang.String VALUE_KEY
com.facebook.react.runtime.ReactInstance: java.lang.String TAG
com.facebook.react.uimanager.annotations.ReactPropGroup$Companion: java.lang.String USE_DEFAULT_TYPE
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: boolean mClearResponder
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: int ENCRYPTION_KEY_SIZE_WHEN_TESTING
com.facebook.react.views.scroll.ScrollEvent: long timestamp
androidx.biometric.R$styleable: int TextAppearance_android_shadowColor
com.facebook.react.R$string: int react_native_dev_server_ip
androidx.biometric.R$id: int accessibility_custom_action_27
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: android.widget.TextView devLoadingView
androidx.biometric.R$styleable: int[] ButtonBarLayout
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: int BOLD
com.facebook.react.animated.NativeAnimatedModule: int uiManagerType
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_START_LISTENING_TO_ANIMATED_NODE_VALUE
com.facebook.react.uimanager.UIManagerModule$2: int val$tag
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
com.facebook.react.devsupport.DevServerHelper$BundleType: java.lang.String typeID
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasKeys2
androidx.biometric.R$attr: int fontProviderAuthority
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
androidx.biometric.R$attr: int colorAccent
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mViewsWithActiveTouches
androidx.biometric.R$styleable: int TextAppearance_android_shadowDx
com.facebook.react.devsupport.DevSupportManagerBase: boolean isShakeDetectorStarted
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.devsupport.FpsView: com.facebook.react.devsupport.FpsView$FPSMonitorRunnable fpsMonitorRunnable
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int eventType
androidx.biometric.R$style: int Theme_AppCompat
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy retryPolicy
androidx.biometric.R$attr: int elevation
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray enqueuedRequests
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.internal.interop.InteropUIBlockListener mInteropUIBlockListener
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: long last
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String RVG_ON_VIEW_REMOVED
androidx.biometric.R$attr: int titleMarginBottom
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
androidx.biometric.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.facebook.react.ReactDelegate: com.facebook.react.interfaces.fabric.ReactSurface mReactSurface
com.facebook.react.views.textinput.ReactEditText: int defaultGravityVertical
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TOOLBAR
androidx.biometric.R$dimen: int abc_dialog_fixed_height_major
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String name
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role NOTE
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_CENTER
com.nozbe.watermelondb.utils.Schema: java.lang.String sql
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer column
androidx.biometric.R$attr: int actionModeSplitBackground
com.facebook.react.uimanager.ViewProps: java.lang.String Z_INDEX
androidx.biometric.R$attr: int listLayout
androidx.biometric.BiometricFragment: int REQUEST_CONFIRM_CREDENTIAL
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_SHRINK
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mDispatchUIRunnables
androidx.biometric.R$styleable: int SwitchCompat_android_thumb
androidx.biometric.R$styleable: int ActionBar_icon
com.google.crypto.tink.proto.KeyTypeEntry: int PRIMITIVE_NAME_FIELD_NUMBER
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] $VALUES
androidx.biometric.R$drawable: int abc_tab_indicator_mtrl_alpha
com.facebook.react.fabric.mounting.MountItemDispatcher: long mLastFrameTimeNanos
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useRawPropsJsiValueCache
androidx.drawerlayout.widget.DrawerLayout: int MIN_DRAWER_MARGIN
androidx.biometric.R$attr: int textAppearancePopupMenuHeader
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: android.graphics.Paint shadowPaint
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.google.crypto.tink.proto.Keyset: int primaryKeyId_
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign STANDARD
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.drawable.Drawable mEndBackground
com.facebook.react.common.ReactConstants: com.facebook.react.common.ReactConstants INSTANCE
com.facebook.react.uimanager.ViewProps: java.lang.String NUMBER_OF_LINES
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: com.facebook.react.views.safeareaview.ReactSafeAreaView this$0
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mRemoveClippedSubviews
com.reactnativecommunity.asyncstorage.BuildConfig: boolean AsyncStorage_useNextStorage
com.facebook.react.animated.InterpolationAnimatedNode: com.facebook.react.animated.InterpolationAnimatedNode$OutputType outputType
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.uimanager.layoutanimation.InterpolatorType: kotlin.enums.EnumEntries $ENTRIES
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int EXITING
androidx.biometric.R$integer: int abc_config_activityShortDur
com.facebook.hermes.intl.ParsedLocaleIdentifier: java.util.TreeMap transformedExtensionFields
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$2: com.facebook.react.HeadlessJsTaskService this$0
androidx.biometric.R$styleable: int ActionMode_backgroundSplit
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MAIN_BUNDLE
com.facebook.react.modules.core.JavaTimerManager$Timer: long targetTime
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String NAME
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: java.lang.String typeUrl_
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity ACCENT
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era LONG
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int id
com.reactnativecommunity.asyncstorage.BuildConfig: boolean DEBUG
androidx.biometric.R$drawable: int tooltip_frame_dark
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_HANDLE_FIELDS
androidx.biometric.R$style: int Base_AlertDialog_AppCompat_Light
androidx.biometric.R$attr: int popupMenuStyle
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign ACCOUNTING
androidx.biometric.R$styleable: int[] AppCompatTextHelper
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_MOVE
com.facebook.react.views.text.ReactTextShadowNode: android.text.TextPaint sTextPaintInstance
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: double jsFps
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int commandId
com.google.crypto.tink.proto.AesEaxKey: int KEY_VALUE_FIELD_NUMBER
com.oblador.keychain.KeychainModule$Maps: java.lang.String SECURITY_LEVEL
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean disableMountItemReorderingAndroidCache
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedSplitBundleFromNetworkLoader$1: java.lang.String $sourceURL
com.swmansion.reanimated.sensor.ReanimatedSensor: int interval
com.facebook.react.packagerconnection.FileIoHandler$2: com.facebook.react.packagerconnection.FileIoHandler this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener
androidx.biometric.BiometricPrompt: int ERROR_HW_UNAVAILABLE
com.facebook.react.animated.NativeAnimatedNodesManager: boolean eventListenerInitializedForNonFabric
androidx.biometric.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableNetworkEventReportingCache
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enablePropsUpdateReconciliationAndroidCache
androidx.biometric.R$styleable: int ActionBar_backgroundStacked
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_DECORATION_LINE
com.facebook.react.R$layout: int redbox_item_frame
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: java.lang.String NAME
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object mDispatchRunnablesLock
androidx.biometric.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.facebook.react.devsupport.DevServerHelper$BundleType: kotlin.enums.EnumEntries $ENTRIES
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat DEFAULT_INSTANCE
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.Event[] mEventsToDispatch
androidx.biometric.R$attr: int thumbTextPadding
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role FIGURE
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SUMMARY
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_END
androidx.biometric.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.fragment.app.Fragment: int mContainerId
androidx.biometric.R$array: int crypto_fingerprint_fallback_vendors
com.facebook.react.touch.JSResponderHandler: com.facebook.react.touch.JSResponderHandler$Companion Companion
androidx.biometric.AuthenticationCallbackProvider$1: androidx.biometric.AuthenticationCallbackProvider this$0
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorType sensorType
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: int mKeyboardHeight
androidx.biometric.R$drawable: int fingerprint_dialog_fp_icon
com.facebook.react.R$style: int Theme
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasReplacementsRegion2
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType CHILD
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.AmazonFireDeviceConnectivityPoller mAmazonConnectivityChecker
com.facebook.react.animated.NativeAnimatedModule$addAnimatedEventToView$1: int $viewTag
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String NAME
com.facebook.hermes.intl.LocaleObjectICU: android.icu.util.ULocale m_icuLocale
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: java.lang.String EVENT_NAME
androidx.biometric.R$layout: int abc_cascading_menu_item_layout
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState
com.facebook.react.fabric.SynchronousEvent: java.lang.String eventName
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.proto.RegistryConfig DEFAULT_INSTANCE
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.proto.AesGcmKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.KeyData: int TYPE_URL_FIELD_NUMBER
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.packagerconnection.PackagerConnectionSettings: android.content.SharedPreferences preferences
com.facebook.react.views.text.ReactTextView: com.facebook.react.uimanager.style.Overflow mOverflow
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era mEra
com.facebook.react.modules.systeminfo.AndroidInfoModule: com.facebook.react.modules.systeminfo.AndroidInfoModule$Companion Companion
com.facebook.react.uimanager.events.EventCategoryDef: int UNSPECIFIED
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.swmansion.reanimated.NodesManager$3: java.util.Queue val$copiedOperationsQueue
androidx.biometric.R$style: int Widget_AppCompat_DrawerArrowToggle
com.facebook.react.bridge.JavaScriptContextHolder: long context
com.facebook.react.CoreModulesPackage: boolean mLazyViewManagersEnabled
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape[] $VALUES
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: int end
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String fileName
androidx.biometric.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole HORIZONTALSCROLLVIEW
androidx.biometric.R$styleable: int MenuItem_tooltipText
com.facebook.react.animated.NativeAnimatedModule$createAnimatedNode$1: int $tag
com.facebook.react.views.scroll.ScrollEventType: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_COLOR
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.uimanager.ReactAccessibilityDelegate: int sCounter
androidx.biometric.R$attr: int buttonTintMode
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.util.List mSnapOffsets
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalDragDistance
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mActivePointerId
androidx.biometric.R$drawable: int abc_tab_indicator_material
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean accessibilityServiceEnabled
com.facebook.react.uimanager.events.Event: long timestampMs
com.swmansion.reanimated.NodesManager: double lastFrameTimeMs
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp[] $VALUES
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_LEAVE
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.lang.String TAG
androidx.biometric.R$styleable: int ActionMode_subtitleTextStyle
androidx.biometric.R$dimen: int abc_text_size_caption_material
androidx.biometric.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle LONG
androidx.biometric.R$styleable: int SwitchCompat_switchTextAppearance
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: androidx.biometric.BiometricPrompt presentedPrompt
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$attr: int defaultQueryHint
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_WIDTH
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ImageCacheControl cacheControl
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
androidx.biometric.R$styleable: int AppCompatTheme_actionBarStyle
androidx.biometric.R$styleable: int TextAppearance_android_fontFamily
androidx.biometric.BiometricManager$Authenticators: int DEVICE_CREDENTIAL
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map EMPTY_PROPS_MAP
androidx.biometric.R$id: int accessibility_custom_action_9
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean[] mPaddingIsPercent
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller mScroller
com.oblador.keychain.KeychainModule$AuthPromptOptions: java.lang.String DESCRIPTION
androidx.biometric.R$attr: int alertDialogStyle
com.swmansion.reanimated.keyboard.Keyboard: int CONTENT_TYPE_MASK
com.facebook.react.devsupport.DoubleTapReloadRecognizer: com.facebook.react.devsupport.DoubleTapReloadRecognizer$Companion Companion
com.facebook.react.R$style: int NoAnimationDialog
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TABLE
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource bestResult
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long stackSize
androidx.biometric.R$styleable: int View_theme
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableFontScaleChangesUpdatingLayoutCache
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.facebook.react.animated.DecayAnimation: double deceleration
com.facebook.react.R$string: int catalyst_inspector_toggle
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.proto.KeyTypeEntry DEFAULT_INSTANCE
androidx.biometric.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.biometric.R$id: int action_bar_container
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewManager$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.bridge.ReadableMap mCurrentLocalData
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int total4PlusFrameStutters
androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener mViewHierarchyUpdateDebugListener
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: com.facebook.react.views.textinput.ReactTextInputKeyPressEvent$Companion Companion
com.swmansion.reanimated.NativeProxy$1: java.lang.ref.WeakReference val$weakLayoutAnimations
com.facebook.react.ReactNativeHost: android.app.Application mApplication
androidx.biometric.R$attr: int closeItemLayout
androidx.lifecycle.ViewModel: java.util.Set mCloseables
com.facebook.react.views.imagehelper.ImageSource: boolean _isResource
com.facebook.react.animated.SpringAnimation: double initialVelocity
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSnapshotRegistry
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_BOTTOM
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.proto.KmsAeadKeyFormat DEFAULT_INSTANCE
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.JSPackagerClient packagerClient
com.reactnativecommunity.asyncstorage.BuildConfig: boolean AsyncStorage_useDedicatedExecutor
androidx.biometric.R$id: int forever
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.uimanager.ViewManagerRegistry viewManagerRegistry
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.react.animated.AnimatedNode: int tag
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String DEVICE_LOCALHOST
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.react.devsupport.DevServerHelper$openDebugger$1: java.lang.String $errorMessage
androidx.biometric.R$style: int Theme_AppCompat_Light_Dialog
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole GRID
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii bottomLeft
com.facebook.react.uimanager.OnLayoutEvent: int y
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
androidx.biometric.R$styleable: int FontFamilyFont_android_fontWeight
com.facebook.react.uimanager.style.BackgroundImageLayer: com.facebook.react.uimanager.style.BackgroundImageLayer$Companion Companion
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge TOP
androidx.biometric.R$attr: int actionViewClass
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean initOk
androidx.biometric.R$styleable: int Toolbar_subtitle
androidx.biometric.R$attr: int tooltipForegroundColor
androidx.biometric.R$layout: int abc_action_bar_title_item
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.modules.debug.interfaces.DeveloperSettings devSettings
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1: android.app.Activity $activity
com.facebook.react.ReactDelegate: com.facebook.react.ReactNativeHost mReactNativeHost
androidx.biometric.R$id: int visible_removing_fragment_view_tag
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.bridge.JSBundleLoader jsBundleLoader
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ACCESSIBILITY_ROLE
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.oblador.keychain.KeychainPackage: com.oblador.keychain.KeychainModuleBuilder builder
com.facebook.react.views.scroll.ReactScrollViewHelper: java.util.concurrent.CopyOnWriteArrayList layoutChangeListeners
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String mFontFeatureSettings
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialDownY
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: int $requestId
androidx.biometric.R$drawable: int abc_scrubber_control_off_mtrl_alpha
androidx.biometric.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topEnd
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler cookieHandler
androidx.biometric.R$layout: int abc_screen_simple
androidx.biometric.R$drawable: int abc_list_selector_holo_dark
com.facebook.react.views.image.ImageLoadEvent: java.lang.String errorMessage
com.facebook.react.bridge.JSBundleLoader$Companion$createAssetLoader$1: boolean $loadSynchronously
androidx.biometric.R$attr: int itemPadding
androidx.biometric.R$bool: int abc_action_bar_embed_tabs
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSendMomentumEvents
androidx.biometric.R$styleable: int Toolbar_android_minHeight
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String ALGORITHM_AES
androidx.biometric.R$color: int primary_text_disabled_material_dark
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
androidx.biometric.R$attr: int listPreferredItemHeight
com.facebook.hermes.intl.NumberFormat: java.lang.String mResolvedCurrency
com.facebook.react.R$string: int state_on_description
com.facebook.hermes.intl.LocaleObjectICU: boolean mIsDirty
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: android.graphics.Paint traceUpdatePaint
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: boolean mNeedUpdatePathForBorderRadius
com.facebook.react.R$id: int rn_frame_file
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.react.runtime.ReactHostInspectorTarget$Companion Companion
com.facebook.react.uimanager.events.FabricEventDispatcher: java.util.concurrent.CopyOnWriteArrayList listeners
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity BASE
com.facebook.react.ReactRootView: android.os.Bundle mAppProperties
com.facebook.react.views.modal.ReactModalHostView: boolean createNewDialog
androidx.biometric.R$styleable: int MenuItem_android_enabled
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean traceTurboModulePromiseRejectionsOnAndroidCache
androidx.biometric.R$id: int fingerprint_description
androidx.biometric.R$dimen: int abc_text_size_large_material
com.facebook.react.views.image.ReactImageView$WhenMappings: int[] $EnumSwitchMapping$0
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.RedBoxHandler redBoxHandler
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.util.Map _additionalOptionsForPackager
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] $VALUES
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.Paint outlinePaint
com.facebook.react.uimanager.ViewProps: java.lang.String ROTATION
androidx.biometric.R$array: int crypto_fingerprint_fallback_prefixes
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats streamingCommitStats
androidx.biometric.R$styleable: int FontFamily_fontProviderFetchTimeout
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableNativeCSSParsingCache
com.facebook.react.R$layout: int dev_loading_view
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.UIViewOperationQueue: long mNonBatchedExecutionTotalTime
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String TAG
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle SOLID
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.google.crypto.tink.proto.AesEaxKeyFormat: int keySize_
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: kotlin.enums.EnumEntries $ENTRIES
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int DEK_TEMPLATE_FIELD_NUMBER
com.reactnativecommunity.asyncstorage.SerialExecutor$1: com.reactnativecommunity.asyncstorage.SerialExecutor this$0
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path pathForSingleBorder
androidx.biometric.R$style: int Theme_AppCompat_Light_DarkActionBar
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: com.facebook.react.uimanager.UIViewOperationQueue this$0
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String typeUrl_
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.UIManagerProvider mUIManagerProvider
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String NAME
androidx.biometric.R$attr: int titleMarginStart
com.facebook.react.uimanager.FilterHelper: com.facebook.react.uimanager.FilterHelper INSTANCE
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole IMAGEBUTTON
com.facebook.react.common.build.ReactBuildConfig: boolean IS_INTERNAL_BUILD
com.facebook.react.uimanager.events.FabricEventDispatcher: java.util.concurrent.CopyOnWriteArrayList postEventDispatchListeners
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.touch.JSResponderHandler: int JS_RESPONDER_UNSET
androidx.biometric.R$style: int TextAppearance_AppCompat_Headline
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect
androidx.biometric.R$attr: int windowFixedHeightMinor
androidx.biometric.R$layout: int abc_alert_dialog_title_material
androidx.fragment.app.Fragment: int ATTACHED
com.facebook.react.uimanager.style.BorderInsets: java.lang.Float[] edgeInsets
com.facebook.react.views.textinput.ReactTextChangedEvent: int eventCount
com.facebook.react.JSEngineResolutionAlgorithm: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.R$anim: int catalyst_slide_up
com.facebook.react.util.JSStackTrace: java.lang.String LINE_NUMBER_KEY
androidx.biometric.R$drawable: int abc_cab_background_top_mtrl_alpha
com.facebook.react.views.drawer.events.DrawerOpenedEvent: com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion Companion
androidx.biometric.R$id: int textSpacerNoButtons
com.facebook.hermes.intl.LocaleObjectICU: android.icu.util.ULocale$Builder m_icuLocaleBuilder
androidx.biometric.R$color: int foreground_material_dark
androidx.biometric.BiometricPrompt: int ERROR_SECURITY_UPDATE_REQUIRED
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int ALL_BITS_UNSET
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue preOperations
androidx.biometric.R$style: int Widget_AppCompat_Light_SearchView
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean disableMainQueueSyncDispatchIOSCache
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents BOX_ONLY
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ASSET_TYPE_ALL
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver this$0
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.facebook.react.fabric.FabricUIManager$4: boolean val$blockNativeResponder
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.ReactInstanceDevHelper reactInstanceDevHelper
androidx.biometric.R$styleable: int MenuItem_android_checkable
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int DEFAULT_BORDER_COLOR
androidx.biometric.R$drawable: int abc_list_selector_background_transition_holo_dark
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: java.lang.String NAME
androidx.biometric.R$attr: int actionModeFindDrawable
androidx.biometric.R$styleable: int[] FontFamilyFont
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap payload
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.facebook.react.uimanager.drawable.OutlineDrawable$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$id: int fingerprint_error
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_DROP_ANIMATED_NODE
com.facebook.react.uimanager.JSPointerDispatcher: int mPrimaryPointerId
androidx.biometric.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerEventDispatcher eventDispatcher
androidx.biometric.R$dimen: int abc_text_size_subhead_material
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: com.oblador.keychain.cipherStorage.CipherStorageBase storage
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator DEFAULT_FLING_ANIMATOR
androidx.biometric.R$styleable: int FontFamilyFont_fontWeight
androidx.biometric.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$attr: int autoSizeTextType
androidx.biometric.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.swmansion.reanimated.keyboard.KeyboardState: int mValue
com.facebook.react.uimanager.JSPointerDispatcher: long mLastActionDownEventTime
com.facebook.react.uimanager.ViewProps: java.lang.String ADJUSTS_FONT_SIZE_TO_FIT
androidx.biometric.R$layout: int abc_list_menu_item_checkbox
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int mCommand
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TOOLTIP
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_BOTTOM_LEFT_RADIUS
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: com.facebook.hermes.intl.LocaleIdTokenizer this$0
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.facebook.hermes.intl.NumberFormat: int mResolvedMaximumSignificantDigits
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JavaScriptExecutorFactory mJavaScriptExecutorFactory
androidx.fragment.app.Fragment: boolean mHidden
androidx.biometric.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.biometric.R$drawable: int abc_btn_radio_material_anim
androidx.biometric.R$dimen: int abc_action_bar_default_padding_start_material
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType TO_BOTTOM_RIGHT
androidx.biometric.R$style: int Base_V22_Theme_AppCompat_Light
com.facebook.react.views.unimplementedview.ReactUnimplementedView: androidx.appcompat.widget.AppCompatTextView textView
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.react.modules.core.JavaTimerManager: float IDLE_CALLBACK_FRAME_DEADLINE_MS
androidx.biometric.R$styleable: int DrawerArrowToggle_drawableSize
androidx.biometric.R$drawable: int abc_seekbar_track_material
com.facebook.react.uimanager.events.PointerEvent$1: com.facebook.react.uimanager.events.PointerEvent this$0
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.facebook.react.views.scroll.ScrollEvent: float scrollX
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day DIGIT2
com.facebook.react.bridge.SoftAssertions: com.facebook.react.bridge.SoftAssertions INSTANCE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role CONTENTINFO
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedViewChildrenIndices
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: int $index
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.CallbackImpl$Companion Companion
com.facebook.react.uimanager.ReactStage: int BRIDGE_DID_LOAD
androidx.biometric.R$attr: int dividerHorizontal
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: okhttp3.Call$Factory callFactory
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: com.facebook.jni.HybridData mHybridData
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month LONG
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener mBridgeIdleDebugListener
androidx.biometric.R$attr: int listPreferredItemPaddingEnd
androidx.biometric.R$color: int abc_search_url_text
androidx.biometric.R$string: int abc_searchview_description_search
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String method
com.facebook.react.R$xml: int rn_dev_preferences
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.content.Context context
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State Success
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.facebook.react.uimanager.ReactAccessibilityDelegate: int delimiterLength
androidx.appcompat.widget.SwitchCompat: int[] CHECKED_STATE_SET
com.facebook.react.uimanager.util.ReactFindViewUtil: java.util.List onViewFoundListeners
com.facebook.react.fabric.FabricUIManager$2: int val$reactTag
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] $VALUES
com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.bridge.ReactApplicationContext reactApplicationContext
com.facebook.react.views.scroll.ReactScrollView: boolean mActivelyScrolling
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.DebugOverlayController debugOverlayController
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: int minIndexForVisible
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: com.facebook.react.views.textinput.ReactEditText this$0
com.oblador.keychain.KeychainModule$Maps: java.lang.String RULES
androidx.biometric.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.bridge.ReactContext currentReactContext
androidx.biometric.R$drawable: int abc_ratingbar_indicator_material
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: com.facebook.react.bridge.Callback mCallback
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String NAME
com.oblador.keychain.KeychainModule$Maps: java.lang.String ACCESS_CONTROL
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_COVER
com.facebook.react.devsupport.StackTraceHelper: java.lang.String EXTRA_DATA_KEY
androidx.biometric.R$dimen: int abc_text_size_display_1_material
com.swmansion.reanimated.NativeReanimatedModuleSpec: java.lang.String NAME
androidx.biometric.R$styleable: int FontFamilyFont_android_ttcIndex
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState CLOSED
androidx.biometric.BiometricFragment$10: androidx.biometric.BiometricFragment this$0
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$styleable: int PopupWindow_overlapAnchor
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.facebook.react.uimanager.events.ContentSizeChangeEvent: int width
com.facebook.react.devsupport.PackagerStatusCheck: okhttp3.OkHttpClient client
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks accessibilityLinks
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.ConnectivityReceiver mConnectivityReceiver
com.nozbe.watermelondb.WMDatabase: java.util.Map INSTANCES
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate
androidx.biometric.R$id: int accessibility_custom_action_14
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType keyword
androidx.biometric.R$id: int action_bar_activity_content
com.facebook.react.animated.NativeAnimatedModule$stopAnimation$1: int $animationId
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int column
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
com.facebook.react.views.scroll.ReactHorizontalScrollView: int NO_SCROLL_POSITION
com.facebook.hermes.intl.Constants: java.lang.String SEARCH
androidx.biometric.R$id: int search_plate
com.facebook.react.views.image.ImageLoadEvent: int total
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mCallbacks
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.facebook.react.views.textinput.ReactEditText: android.view.inputmethod.InputMethodManager inputMethodManager
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_BOTTOM_RIGHT_RADIUS
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$Companion Companion
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: com.facebook.react.bridge.Callback val$callback
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger mState
androidx.biometric.R$id: int scrollIndicatorDown
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableEagerRootViewAttachmentCache
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$attr: int actionModeBackground
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ALERTDIALOG
androidx.biometric.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.biometric.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker
com.facebook.react.PackageList: com.facebook.react.ReactNativeHost reactNativeHost
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion Companion
androidx.biometric.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.facebook.react.runtime.JSTimerExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.common.build.ReactBuildConfig: com.facebook.react.common.build.ReactBuildConfig INSTANCE
com.facebook.react.devsupport.StackTraceHelper: java.lang.String FILE_KEY
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int HMAC_KEY_FIELD_NUMBER
com.facebook.react.runtime.BridgelessReactStateTracker: boolean shouldTrackStates
com.facebook.react.uimanager.ViewDefaults: com.facebook.react.uimanager.ViewDefaults INSTANCE
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.image.ReactImageView: boolean isDirty
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.bridge.ReactApplicationContext reactApplicationContext
com.facebook.react.animated.AnimationDriver: com.facebook.react.animated.ValueAnimatedNode animatedValue
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable
com.facebook.react.views.scroll.ReactScrollView: int mSnapToAlignment
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String file
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.crypto.tink.proto.AesEaxKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MENUBAR
com.facebook.react.animated.NativeAnimatedModule$removeAnimatedEventFromView$1: int $animatedValueTag
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation$Companion Companion
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.biometric.R$attr: int panelMenuListTheme
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: int ENCRYPTION_KEY_SIZE
com.facebook.react.modules.network.RequestBodyUtil: java.lang.String CONTENT_ENCODING_GZIP
androidx.biometric.R$attr: int switchStyle
com.facebook.react.PackageList: android.app.Application application
com.facebook.react.uimanager.UIManagerModule$2: com.facebook.react.uimanager.UIManagerModule this$0
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge[] $VALUES
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule this$0
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
androidx.biometric.BiometricFragment$2: androidx.biometric.BiometricFragment this$0
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Button
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.facebook.react.util.RNLog: int TRACE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_USER_LEAVE_HINT_START
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow$Companion Companion
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$Shape shape
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacParams params_
androidx.biometric.R$color: int abc_hint_foreground_material_light
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal SHADOW_GROUP_ARGS
com.facebook.react.uimanager.Spacing: int ALL
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayDeque mNonBatchedOperations
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
androidx.biometric.R$string: int abc_menu_delete_shortcut_label
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_HYPHENATION_FREQUENCY
com.facebook.react.views.text.TextAttributeProps: boolean mIsColorSet
com.facebook.react.R$style: int redboxButton
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_END_END_RADIUS
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.BuildConfig: int REACT_NATIVE_MINOR_VERSION
androidx.biometric.R$styleable: int StateListDrawable_android_variablePadding
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableMainQueueModulesOnIOSCache
com.facebook.imagepipeline.request.ImageRequest: int mDelayMs
com.facebook.react.views.text.TextAttributeProps: float mTextShadowOffsetDy
androidx.biometric.R$drawable: int notification_bg_low_pressed
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel[] $VALUES
com.facebook.react.uimanager.util.ReactFindViewUtil: com.facebook.react.uimanager.util.ReactFindViewUtil INSTANCE
androidx.biometric.R$attr: int trackTintMode
androidx.biometric.R$attr: int actionBarDivider
androidx.biometric.R$anim: int abc_slide_out_top
androidx.biometric.R$color: int abc_tint_seek_thumb
com.facebook.react.uimanager.ReactAccessibilityDelegate: int SEND_EVENT
com.facebook.react.common.mapbuffer.MapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$Companion Companion
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String TAG
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: int count
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener
androidx.biometric.R$attr: int alertDialogTheme
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: java.lang.ref.WeakReference mReactInstanceManagerWeak
com.facebook.react.views.scroll.ReactScrollView: boolean mSnapToStart
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.facebook.react.animated.NativeAnimatedModule: int numFabricAnimations
com.facebook.react.devsupport.DevInternalSettings: android.content.SharedPreferences preferences
com.facebook.react.devsupport.StackTraceHelper: java.lang.String COLLAPSE_KEY
com.facebook.react.modules.intent.IntentModule: java.util.List pendingOpenURLPromises
androidx.security.crypto.MasterKey$Builder: int mUserAuthenticationValidityDurationSeconds
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String DRAWER_POSITION_LEFT
com.facebook.react.modules.debug.DevMenuModule: com.facebook.react.modules.debug.DevMenuModule$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_RIGHT
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler exceptionHandler
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PROPS
com.facebook.react.ReactInstanceManagerBuilder: int mMinTimeLeftInFrameForNonBatchedOperationMs
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSnapToStart
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: int COMMAND_SCROLL_TO_END
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MAIN
androidx.biometric.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.biometric.R$layout: int select_dialog_item_material
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean commonTestFlagCache
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$1: okhttp3.WebSocket $webSocket
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: int touchSlop
androidx.biometric.R$attr: int actionProviderClass
androidx.biometric.R$color: int background_material_dark
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxParams params_
androidx.biometric.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int viewWidth
com.facebook.react.uimanager.style.BorderRadiusStyle$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats streamingBatchExecutionStats
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String NAME
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_NONE
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_BASIS
com.facebook.react.fabric.FabricUIManager$3: com.facebook.react.fabric.FabricUIManager this$0
androidx.biometric.R$drawable: int abc_list_pressed_holo_light
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SEPARATOR
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$$inlined$Iterable$1: java.util.List $nativeModules$inlined
com.facebook.react.uimanager.ViewProps: int[] BORDER_SPACING_TYPES
androidx.biometric.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean fuseboxEnabledReleaseCache
androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout
com.google.crypto.tink.proto.AesCtrKey: int VERSION_FIELD_NUMBER
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow VISIBLE
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: boolean isFrameCallbackDispatchScheduled
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableFixForParentTagDuringReparentingCache
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.LengthPercentage position
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List beforeUIBlocks
com.google.crypto.tink.proto.KeyData: int VALUE_FIELD_NUMBER
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.ReactShadowNode mNode
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.ViewAtIndex: java.util.Comparator COMPARATOR
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int version_
com.facebook.react.views.switchview.ReactSwitchShadowNode: int width
com.facebook.react.modules.network.RequestBodyUtil: com.facebook.react.modules.network.RequestBodyUtil INSTANCE
com.facebook.react.runtime.ReactHostImpl: boolean mUseDevSupport
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType MOMENTUM_END
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme AES256_GCM
com.oblador.keychain.KeychainModule$KnownCiphers: java.lang.String AES
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: int mViewTag
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int hkdfHashType_
androidx.biometric.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: com.facebook.react.modules.dialog.DialogModule this$0
androidx.biometric.R$style: int TextAppearance_Compat_Notification
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: boolean mBlockNativeResponder
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.facebook.imagepipeline.request.ImageRequest: int mCachesDisabled
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute mMinute
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String fontFeatureSettings
com.facebook.react.uimanager.drawable.BorderDrawable: int borderAlpha
androidx.biometric.R$attr: int indeterminateProgressStyle
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.websocket.WebSocketModule$Companion Companion
androidx.biometric.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.biometric.R$attr: int logo
com.facebook.react.views.image.ImageResizeMode: com.facebook.react.views.image.ImageResizeMode INSTANCE
androidx.biometric.R$styleable: int StateListDrawable_android_constantSize
com.facebook.react.common.ShakeDetectorKt: float SHAKING_WINDOW_NS
com.facebook.react.bridge.JSBundleLoader$Companion$createFileLoader$1: java.lang.String $fileName
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.util.Set screenTagsWithListener
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.Priority mRequestPriority
com.rnbiometrics.BuildConfig: java.lang.String BUILD_TYPE
androidx.biometric.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.biometric.BiometricPrompt: int ERROR_LOCKOUT_PERMANENT
androidx.biometric.R$attr: int autoSizeStepGranularity
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.biometric.R$styleable: int ActionBar_navigationMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.views.image.ImageLoadEvent: int width
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchLayoutTime
com.google.crypto.tink.proto.AesSivKey: int VERSION_FIELD_NUMBER
androidx.biometric.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.views.scroll.ReactScrollView: java.lang.reflect.Field sScrollerField
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Float position
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger
androidx.biometric.R$attr: int titleMargin
androidx.biometric.R$id: int tag_unhandled_key_event_manager
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double interval
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType threadType
com.facebook.react.devsupport.StackTraceHelper: java.lang.String METHOD_NAME_KEY
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List mPackages
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int TYPE_OFFSET
androidx.biometric.R$style: int ThemeOverlay_AppCompat_DayNight
androidx.biometric.R$style: int Widget_AppCompat_CompoundButton_Switch
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int CONTINUOUS_END
androidx.biometric.R$styleable: int SearchView_useDrawerArrowDrawable
com.facebook.react.R$string: int catalyst_settings
androidx.biometric.R$color: int secondary_text_disabled_material_dark
com.facebook.react.animated.EventAnimationDriver: java.util.List eventPath
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext: java.security.Key key
com.google.crypto.tink.proto.AesCmacKeyFormat: int PARAMS_FIELD_NUMBER
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow HIDDEN
androidx.biometric.R$styleable: int ViewStubCompat_android_id
com.facebook.react.devsupport.DevSupportManagerBase: boolean devLoadingViewVisible
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType PERCENT
androidx.biometric.R$styleable: int MenuItem_actionLayout
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] $VALUES
com.facebook.react.common.network.OkHttpCallUtil: com.facebook.react.common.network.OkHttpCallUtil INSTANCE
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue mOperationsQueue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
androidx.biometric.R$id: int textSpacerNoTitle
com.facebook.react.R$string: int radiogroup_description
androidx.biometric.R$styleable: int AppCompatTheme_radioButtonStyle
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_STRING
androidx.biometric.R$id: int search_button
com.facebook.react.module.model.ReactModuleInfo: boolean needsEagerInit
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.reflect.Field sScrollerField
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: java.util.Map mPropSetters
com.facebook.react.views.text.internal.span.ReactClickableSpan: boolean isKeyboardFocused
androidx.security.crypto.EncryptedSharedPreferences$Editor: java.util.concurrent.atomic.AtomicBoolean mClearRequested
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String LOCATION_X_KEY
com.facebook.react.views.text.TextAttributeProps: int mColor
com.facebook.react.animated.ColorAnimatedNode: com.facebook.react.animated.ColorAnimatedNode$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_GROW
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode valueNode
com.facebook.react.common.assets.ReactFontManager: java.util.Map customTypefaceCache
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] skew
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList cancellables
com.facebook.react.bridge.BridgeSoLoader: boolean initialized
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String ENTER_KEY_VALUE
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_COLOR
com.facebook.react.animated.NativeAnimatedNodesManager: java.util.List runUpdateNodeList
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList key_
androidx.biometric.R$style: int Theme_AppCompat_Empty
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.facebook.react.views.textinput.ReactTextInputLocalData: int inputType
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TOOLBAR
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int KEK_URI_FIELD_NUMBER
com.facebook.react.views.view.CanvasUtil: java.lang.reflect.Method reorderBarrierMethod
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.facebook.react.views.text.internal.span.SetSpanOperation: int start
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener $callback
androidx.security.crypto.MasterKeys: java.lang.String ANDROID_KEYSTORE
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
androidx.biometric.R$attr: int textAppearanceLargePopupMenu
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
androidx.biometric.CancellationSignalProvider: androidx.core.os.CancellationSignal mFingerprintCancellationSignal
com.facebook.react.bridge.JavaOnlyArray: java.util.List backingList
com.facebook.react.views.textinput.ReactEditText: int defaultGravityHorizontal
com.facebook.react.uimanager.ViewProps: java.lang.String ELEVATION
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.runtime.JSRuntimeFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.text.internal.span.ShadowStyleSpan: float dx
com.facebook.react.devsupport.StackTraceHelper: java.lang.String MESSAGE_KEY
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: java.util.List $nativeModules
com.facebook.react.defaults.DefaultReactHostDelegate: kotlin.jvm.functions.Function1 exceptionHandler
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_COLOR
androidx.biometric.R$drawable: int abc_action_bar_item_background_material
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String key
com.facebook.react.uimanager.ReactStage$Companion: int ON_ATTACH_TO_INSTANCE
androidx.biometric.R$attr: int goIcon
com.facebook.react.devsupport.FpsView: com.facebook.react.devsupport.FpsView$Companion Companion
com.facebook.react.modules.permissions.PermissionsModule$requestPermission$1: com.facebook.react.modules.permissions.PermissionsModule this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleViewIndex
com.facebook.react.runtime.ReactHostImpl$3: com.facebook.react.devsupport.DevSupportManagerBase val$asyncDevSupportManager
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: com.google.crypto.tink.proto.AesGcmHkdfStreamingParams params_
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl FORCE_CACHE
com.facebook.react.devsupport.FpsView: int UPDATE_INTERVAL_MS
androidx.biometric.R$styleable: int ActionBar_background
com.facebook.react.uimanager.events.EventCategoryDef: int CONTINUOUS
com.facebook.react.views.progressbar.ProgressBarContainerView: double progress
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean isRunningTasks
androidx.appcompat.widget.SwitchCompat: float mTouchY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.facebook.react.animated.FrameBasedAnimationDriver: double toValue
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT
androidx.biometric.R$attr: int height
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: int lineHeight
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
androidx.biometric.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.biometric.R$attr: int titleMarginTop
com.facebook.react.fabric.mounting.MountingManager: java.lang.String TAG
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion Companion
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_END_RADIUS
com.facebook.react.views.imagehelper.ImageSource: java.lang.String TRANSPARENT_BITMAP_URI
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion Companion
androidx.biometric.R$styleable: int AppCompatTheme_selectableItemBackground
com.facebook.react.views.text.TextAttributes: float mFontSize
androidx.biometric.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int deltaWidth
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String KEY_HOOK_SETTINGS
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: int[] $SwitchMap$com$facebook$react$uimanager$style$Overflow
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role NONE
androidx.biometric.R$styleable: int MenuItem_android_menuCategory
androidx.biometric.R$id: int edit_query
com.facebook.react.uimanager.ViewProps: java.lang.String MINIMUM_FONT_SCALE
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableBridgelessArchitectureCache
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_IN
com.facebook.react.animated.SpringAnimation: com.facebook.react.animated.SpringAnimation$PhysicsState currentState
androidx.biometric.R$layout: int abc_search_view
com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable text
androidx.biometric.R$style: int Base_Widget_AppCompat_Button_Small
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer choreographer
com.facebook.react.devsupport.RedBoxContentView$reportCompletedListener$1: com.facebook.react.devsupport.RedBoxContentView this$0
com.facebook.react.animated.InterpolationAnimatedNode: com.facebook.react.animated.InterpolationAnimatedNode$Companion Companion
com.facebook.react.views.text.TextTransform: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.scroll.ScrollEvent: int scrollViewWidth
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
androidx.biometric.R$attr: int buttonTint
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.DevLoadingViewManager devLoadingViewManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_AFFECTED_NODES
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion Companion
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener fpsListener
com.facebook.react.uimanager.ViewProps: java.lang.String TOP
com.facebook.react.bridge.NativeArray: com.facebook.react.bridge.NativeArray$Companion Companion
androidx.biometric.R$styleable: int AppCompatTheme_colorControlActivated
com.facebook.react.fabric.FabricUIManager: java.util.List mSurfaceIdsWithPendingMountNotification
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.reactnativecommunity.asyncstorage.BuildConfig: java.lang.Long AsyncStorage_db_size
com.facebook.react.views.text.TextAttributeProps: int mLayoutDirection
com.facebook.react.uimanager.ViewProps: java.lang.String SHADOW_COLOR
com.facebook.react.util.RNLog: int MINIMUM_LEVEL_FOR_UI
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform UPPERCASE
androidx.security.crypto.EncryptedFile: java.io.File mFile
com.facebook.react.uimanager.style.ColorStopUtils: com.facebook.react.uimanager.style.ColorStopUtils INSTANCE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_X
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float offsetY
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: int CIPHERTEXT_SEGMENT_SIZE_FIELD_NUMBER
androidx.biometric.BiometricFragment: java.lang.String TAG
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: boolean mShouldStop
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.ThemedReactContext reactContext
com.facebook.react.uimanager.ViewAtIndex: com.facebook.react.uimanager.ViewAtIndex$Companion Companion
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.runtime.ReactSurfaceImpl surface
com.facebook.react.ReactRootView: int mHeightMeasureSpec
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.react.modules.dialog.AlertFragment: java.lang.String ARG_BUTTON_POSITIVE
androidx.biometric.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.facebook.react.modules.permissions.PermissionsModule: int requestCode
com.nozbe.watermelondb.utils.Pair: java.lang.Object first
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
androidx.biometric.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat DEFAULT_INSTANCE
com.nozbe.watermelondb.Queries: java.lang.String select_tables
androidx.biometric.BiometricViewModel: int mCanceledFrom
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String mViewClassName
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion Companion
androidx.biometric.R$integer: int config_tooltipAnimTime
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_ALIGN_VERTICAL
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasReplacementsScript3
com.facebook.react.views.text.TextAttributeProps: int mFontWeight
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.hermes.intl.LocaleIdentifier: boolean $assertionsDisabled
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_SET_ANIMATED_NODE_OFFSET
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String jsAppBundleName
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Map mEventNameToEventId
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FOREGROUND_COLOR
androidx.biometric.R$style: int Theme_AppCompat_NoActionBar
com.facebook.react.R$string: int catalyst_change_bundle_location_input_label
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageManager$Companion Companion
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod NONE
com.google.crypto.tink.proto.KeyTemplate: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError
com.facebook.react.views.textinput.ReactEditText: boolean disableFullscreen
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
androidx.biometric.R$attr: int textAppearanceListItemSmall
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER
androidx.biometric.R$dimen: int compat_button_inset_horizontal_material
com.facebook.react.packagerconnection.FileIoHandler: java.util.Map openFiles
com.facebook.react.uimanager.events.PointerEvent: java.util.List mPointersEventData
com.facebook.react.modules.network.ForwardingCookieHandler: java.lang.String VERSION_ONE_HEADER
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_SIZE
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Body2
com.facebook.react.uimanager.events.PointerEvent: android.view.MotionEvent mMotionEvent
androidx.biometric.R$drawable: int abc_control_background_material
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme[] $VALUES
androidx.security.crypto.MasterKey$1: int[] $SwitchMap$androidx$security$crypto$MasterKey$KeyScheme
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OVER
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSLATE_Y
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.uimanager.MatrixMathHelper: com.facebook.react.uimanager.MatrixMathHelper INSTANCE
com.facebook.react.R$anim: int catalyst_slide_down
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map directEventTypeConstants
androidx.biometric.R$styleable: int[] PopupWindowBackgroundState
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_CREATE_ANIMATED_NODE
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableFixForParentTagDuringReparentingCache
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nManagerModule$Companion Companion
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int surfaceId
androidx.biometric.R$drawable: int abc_seekbar_tick_mark_material
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean mShouldEnableLegacyModuleInterop
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler exceptionHandler
androidx.biometric.R$attr: int thickness
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View targetView
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay CODE
androidx.biometric.R$attr: int numericModifiers
com.swmansion.rnscreens.ModalScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.atomic.AtomicInteger mHasDispatchScheduledCount
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollViewManager$Companion Companion
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role CHECKBOX
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mViewCommandOperations
androidx.biometric.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.biometric.R$styleable: int SearchView_android_text
androidx.biometric.R$styleable: int TextAppearance_android_typeface
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult: com.oblador.keychain.SecurityLevel securityLevel
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.biometric.R$attr: int viewInflaterClass
androidx.biometric.R$color: int abc_btn_colored_borderless_text_material
androidx.biometric.R$styleable: int ActionBar_contentInsetRight
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_VARIANT
com.swmansion.rnscreens.ScreensModule: int topScreenId
androidx.biometric.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.facebook.react.views.text.TextLayoutManager: java.util.concurrent.ConcurrentHashMap sTagToSpannableCache
com.facebook.react.modules.core.JavaTimerManager: boolean sendIdleEvents
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessAtomicRef mCreateReactInstanceTaskRef
androidx.biometric.R$dimen: int abc_action_bar_stacked_max_height
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.biometric.R$string: int abc_prepend_shortcut_label
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.LifecycleEventListener initialURLListener
com.facebook.react.packagerconnection.FileIoHandler: long FILE_TTL
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup dialogRootViewGroup
androidx.biometric.R$attr: int maxButtonHeight
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.swmansion.rnscreens.ScreenContentWrapperManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.NodesManager: boolean mSlowAnimationsEnabled
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.facebook.react.ReactRootView: int mLastOffsetX
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year UNDEFINED
androidx.biometric.R$id: int dialog_button
com.facebook.imagepipeline.request.ImageRequest: boolean mIsDiskCacheEnabled
com.facebook.react.uimanager.ViewProps: java.lang.String ON_CLICK_CAPTURE
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useTurboModuleInteropCache
androidx.biometric.R$style: int Widget_AppCompat_ListView_DropDown
com.facebook.react.uimanager.ViewProps: java.lang.String COLOR
androidx.biometric.R$id: int tag_accessibility_heading
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_LIVE_REGION
androidx.biometric.R$attr: int buttonPanelSideLayout
androidx.biometric.R$drawable: int abc_list_longpressed_holo
androidx.drawerlayout.widget.DrawerLayout: int mDrawerState
com.facebook.react.LazyReactPackage$1: java.util.Map val$reactModuleInfoMap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion $$INSTANCE
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType BUNDLE
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String NAME
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayDeque val$nonBatchedOperations
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.style.Overflow overflow
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.react.views.image.ImageLoadEvent: int eventType
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: com.google.crypto.tink.proto.HmacParams hmacParams_
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
androidx.biometric.R$color: int abc_decor_view_status_guard_light
androidx.biometric.R$color: int material_grey_900
com.facebook.react.R$id: int alert_title
androidx.biometric.R$color: int abc_hint_foreground_material_dark
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: int mNextListenerId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
androidx.fragment.app.DialogFragment: int mBackStackId
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.lang.String FETCH_TIME
androidx.biometric.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.facebook.react.devsupport.DevSupportManagerBase: int lastErrorCookie
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
androidx.biometric.R$styleable: int AppCompatTheme_windowActionBar
com.facebook.hermes.intl.PlatformNumberFormatterICU: android.icu.util.MeasureUnit mMeasureUnit
com.facebook.hermes.intl.DateTimeFormat: boolean useDefaultCalendar
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.String NAME
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mPagingEnabled
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_STOP
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel SECURE_HARDWARE
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_START_RADIUS
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent$Companion Companion
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager mPausedInDebuggerOverlayManager
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.uimanager.TransformHelper$WhenMappings: int[] $EnumSwitchMapping$0
com.oblador.keychain.KeychainModule: java.lang.String LOG_TAG
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] complexLanguageAliasKeys3
androidx.biometric.BiometricPrompt$AuthenticationResult: androidx.biometric.BiometricPrompt$CryptoObject mCryptoObject
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String mPropType
com.google.crypto.tink.proto.AesEaxKey: int VERSION_FIELD_NUMBER
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_RADIUS
com.facebook.react.bridge.BridgeReactContext: java.lang.String TAG
androidx.fragment.app.Fragment: int AWAITING_EXIT_EFFECTS
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENU
com.facebook.react.uimanager.ViewProps: java.lang.String POINTER_EVENTS
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.oblador.keychain.cipherStorage.CipherStorage$CipherResult: java.lang.Object password
com.google.crypto.tink.proto.HmacKey: int KEY_VALUE_FIELD_NUMBER
androidx.biometric.R$id: int spacer
androidx.biometric.R$id: int checked
com.facebook.react.views.text.TextLayoutManager: boolean DEFAULT_INCLUDE_FONT_PADDING
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float spreadDistance
com.facebook.react.uimanager.UIViewOperationQueue$1: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.biometric.R$style: int Base_V23_Theme_AppCompat
androidx.biometric.R$dimen: int abc_dialog_padding_top_material
androidx.biometric.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray$Companion Companion
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.react.uimanager.Spacing: boolean hasAliasesSet
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow$Companion Companion
com.facebook.hermes.intl.Collator: com.facebook.hermes.intl.IPlatformCollator$Usage mResolvedUsage
androidx.biometric.R$styleable: int ActionBar_homeAsUpIndicator
com.google.crypto.tink.proto.HmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation ENGINEERING
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mDefaultHardwareBackBtnHandler
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean isPaused
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole RADIOGROUP
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.BatchEventDispatchedListener mBatchEventDispatchedListener
com.facebook.react.views.image.ReactImageView: float resizeMultiplier
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.ArrayList mEventStaging
com.facebook.react.views.image.ReactImageManager: java.lang.Object callerContext
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.proto.AesCtrParams DEFAULT_INSTANCE
androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION
com.facebook.react.PackageList: com.facebook.react.shell.MainPackageConfig mConfig
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme AES256_GCM_HKDF_4KB
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType[] $VALUES
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION_PROGRESS
com.facebook.react.R$id: int rn_redbox_report_label
com.facebook.react.views.scroll.ReactScrollView: long mLastScrollDispatchTime
androidx.biometric.R$style: int Widget_Compat_NotificationActionText
com.facebook.react.views.text.PreparedLayoutTextViewManager: com.facebook.react.views.text.PreparedLayoutTextViewManager$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: android.view.View mView
androidx.biometric.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.biometric.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.facebook.hermes.intl.Collator: boolean mResolvedIgnorePunctuation
com.facebook.react.ReactInstanceManager$2: com.facebook.react.ReactInstanceManager this$0
com.facebook.react.uimanager.events.FabricEventDispatcher: java.lang.Runnable dispatchEventsRunnable
androidx.biometric.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.swmansion.reanimated.nativeProxy.SensorSetter: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage uniform
androidx.biometric.R$styleable: int SwitchCompat_thumbTint
com.facebook.react.runtime.ReactHostImpl: java.util.Set mAttachedSurfaces
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String ALGORITHM_RSA
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.ViewGroup parent
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT ENTER_CAPTURE
androidx.biometric.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger INSTANCE
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.facebook.react.uimanager.ViewProps: java.lang.String SCROLL
androidx.biometric.R$id: int action_mode_bar_stub
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList targetKeysToTransform
com.facebook.react.modules.network.RequestBodyUtil: java.lang.String TEMP_FILE_SUFFIX
com.facebook.react.animated.NativeAnimatedModule: boolean initializedForNonFabric
com.facebook.react.uimanager.UIManagerModule$2: java.lang.Object val$data
androidx.biometric.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.biometric.R$color: int switch_thumb_material_dark
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String SHARED_PREFERENCES_PREFIX
androidx.biometric.R$style: int Theme_AppCompat_CompactMenu
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.image.ImageLoaderModule$getSizeWithHeaders$dataSubscriber$1: com.facebook.react.bridge.Promise $promise
com.facebook.react.uimanager.JSTouchDispatcher: com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper mTouchEventCoalescingKeyHelper
androidx.biometric.R$styleable: int TextAppearance_android_textFontWeight
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.facebook.react.animated.DiffClampAnimatedNode: double maxValue
androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch
androidx.biometric.R$attr: int thumbTintMode
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation layoutCreateAnimation
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: com.facebook.react.animated.TransformAnimatedNode this$0
androidx.biometric.R$attr: int colorError
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
com.swmansion.worklets.WorkletsModule: java.util.concurrent.atomic.AtomicBoolean mInvalidated
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Small
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$nativeModulesThreadCpuTime
androidx.biometric.R$style: int Widget_AppCompat_Button_Small
androidx.biometric.R$attr: int backgroundTint
com.facebook.react.runtime.ReactInstance: com.facebook.react.internal.turbomodule.core.TurboModuleManager turboModuleManager
com.facebook.react.R$string: int link_description
androidx.biometric.R$attr: int multiChoiceItemLayout
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: int bucketOffset
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_JUSTIFICATION_MODE
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY
androidx.biometric.BiometricPrompt: int BIOMETRIC_SUCCESS
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int STATUS_FIELD_NUMBER
com.facebook.react.runtime.BridgelessReactStateTracker: java.lang.String TAG
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List listeners
com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier: java.lang.String regionSubtag
com.facebook.react.views.textinput.ReactEditText: boolean DEBUG_MODE
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_LEVEL
com.facebook.react.animated.NativeAnimatedNodesManager: boolean eventListenerInitializedForFabric
com.google.crypto.tink.proto.HmacKeyFormat: int keySize_
com.facebook.react.views.image.ImageLoadEvent: int ON_LOAD_END
androidx.biometric.R$attr: int submitBackground
com.oblador.keychain.KeychainModule$Errors: java.lang.String E_CRYPTO_FAILED
com.facebook.hermes.intl.DateTimeFormat: java.lang.Object mTimeZone
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int viewHeight
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper mMaintainVisibleContentPositionHelper
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_OFFSET_DY
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel EXPERIMENTAL
androidx.biometric.R$dimen: int abc_dialog_list_padding_top_no_title
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents NONE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ROWGROUP
androidx.biometric.R$attr: int panelMenuListWidth
androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager
androidx.biometric.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState BEFORE_CREATE
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.facebook.react.devsupport.DefaultDevSupportManagerFactory: java.lang.String DEVSUPPORT_IMPL_CLASS
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
com.facebook.react.uimanager.UIManagerHelper: int PADDING_START_INDEX
androidx.biometric.R$attr: int dialogPreferredPadding
com.facebook.react.packagerconnection.JSPackagerClient: com.facebook.react.packagerconnection.ReconnectingWebSocket webSocket
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean reduceMotionEnabled
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month mMonth
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle FULL
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.worklets.WorkletsModule mWorkletsModule
com.facebook.react.ReactDelegate: java.lang.String mMainComponentName
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mWidth
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.facebook.react.R$style: int Animation_Catalyst_RedBox
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String DATABASE_NAME
com.facebook.react.modules.blob.BlobModule$networkingUriHandler$1: com.facebook.react.modules.blob.BlobModule this$0
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: com.facebook.react.bridge.ReactSoftExceptionLogger$Categories INSTANCE
androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight
androidx.biometric.R$styleable: int StateListDrawable_android_dither
androidx.biometric.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.facebook.react.R$drawable: int ic_resume
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceTypeResolver deviceTypeResolver
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedSplitBundleFromNetworkLoader$1: java.lang.String $cachedFileLocation
androidx.biometric.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] orientation
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.facebook.react.animated.FrameBasedAnimationDriver: int logCount
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.facebook.react.views.view.CanvasUtil: boolean orderMethodsFetched
com.facebook.react.modules.debug.FpsDebugFrameCallback: java.util.TreeMap timeToFps
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_RIGHT_RADIUS
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_STOP_LISTENING_TO_ANIMATED_NODE_VALUE
com.facebook.hermes.intl.Constants: java.lang.String CASEFIRST_FALSE
com.facebook.react.uimanager.UIImplementation: boolean mViewOperationsEnabled
com.facebook.hermes.intl.NumberFormat: java.lang.String[] s_sanctionedSimpleUnitIdentifiers
androidx.biometric.R$layout: int notification_template_icon_group
com.facebook.react.views.text.ReactTextUpdate: boolean containsImages
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
androidx.biometric.R$anim: int abc_popup_exit
com.facebook.react.uimanager.common.UIManagerType: com.facebook.react.uimanager.common.UIManagerType$Companion Companion
com.facebook.react.ReactDelegate: android.app.Activity mActivity
androidx.biometric.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
androidx.biometric.R$attr: int track
androidx.fragment.app.DialogFragment: java.lang.String SAVED_STYLE
com.facebook.react.animated.NativeAnimatedNodesManager: android.util.SparseArray activeAnimations
androidx.biometric.R$style: int TextAppearance_AppCompat_Menu
androidx.biometric.FingerprintDialogFragment: int STATE_FINGERPRINT
androidx.biometric.R$drawable: int notification_bg_low_normal
androidx.biometric.R$style: int Animation_AppCompat_Dialog
com.facebook.react.BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1: java.util.Iterator $entrySetIterator$inlined
androidx.biometric.R$styleable: int ViewStubCompat_android_layout
com.facebook.react.R$id: int accessibility_hint
com.facebook.react.uimanager.Spacing: int BLOCK_START
com.oblador.keychain.KeychainModule: java.util.Map cipherStorageMap
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomLeft
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElements
com.facebook.react.uimanager.events.TouchEvent$WhenMappings: int[] $EnumSwitchMapping$0
com.swmansion.reanimated.keyboard.Keyboard: com.swmansion.reanimated.keyboard.KeyboardState mState
androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation
com.facebook.react.R$string: int header_description
androidx.biometric.R$drawable: int abc_list_selector_holo_light
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: okhttp3.Response $response
androidx.biometric.R$styleable: int[] Spinner
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE
com.facebook.react.bridge.DynamicFromMap: java.lang.String DYNAMIC_VALUE_RECYCLED_FAILURE_MESSAGE
androidx.biometric.R$styleable: int[] PopupWindow
androidx.biometric.R$attr: int singleChoiceItemLayout
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String RELOAD_APP_ACTION_SUFFIX
com.facebook.react.views.text.ReactBaseTextShadowNode: int mHyphenationFrequency
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl$1: com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl this$0
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: int mSubtagStart
com.facebook.react.uimanager.LayoutDirectionUtil: com.facebook.react.uimanager.LayoutDirectionUtil INSTANCE
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.facebook.react.bridge.ReadableNativeArray: kotlin.Lazy localTypeArray$delegate
androidx.biometric.R$styleable: int Toolbar_collapseIcon
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodes$1: int $childNodeTag
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextShadowColor
androidx.biometric.BiometricManager: int BIOMETRIC_ERROR_SECURITY_UPDATE_REQUIRED
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay SHORT
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle UNDEFINED
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String PROP_TEXT
androidx.drawerlayout.widget.DrawerLayout: boolean ALLOW_EDGE_LOCK
com.facebook.react.R$id: int accessibility_order
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute DIGIT2
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.LocaleObjectICU mLocaleObject
com.oblador.keychain.KeychainModule$AuthPromptOptions: java.lang.String SUBTITLE
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BackgroundDrawable background
com.oblador.keychain.PrefsStorage: android.content.SharedPreferences prefs
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactEditText: boolean isSettingTextFromJS
com.google.crypto.tink.proto.HmacKey: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.facebook.react.uimanager.BlendModeHelper: com.facebook.react.uimanager.BlendModeHelper INSTANCE
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion Companion
androidx.fragment.app.Fragment: boolean mCalled
com.facebook.react.views.scroll.ScrollEventType$Companion$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$styleable: int MenuView_subMenuArrow
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.SelectionWatcher selectionWatcher
com.facebook.react.bridge.Inspector$Page: int id
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
androidx.biometric.R$dimen: int notification_right_icon_size
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] translation
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: boolean layerTypeChanged
androidx.biometric.R$dimen: int tooltip_precise_anchor_threshold
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType LINEAR
com.google.crypto.tink.proto.EncryptedKeyset: int KEYSET_INFO_FIELD_NUMBER
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: android.content.Context context
androidx.biometric.R$color: int bright_foreground_inverse_material_dark
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$1: com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener $commandListener
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: com.facebook.react.views.textinput.ReactContentSizeChangedEvent$Companion Companion
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_EXTENSION_KEY_SHORT
com.facebook.react.uimanager.ReactClippingViewGroupHelper: com.facebook.react.uimanager.ReactClippingViewGroupHelper INSTANCE
androidx.biometric.R$drawable: int abc_text_cursor_material
androidx.biometric.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.biometric.R$styleable: int Toolbar_subtitleTextColor
androidx.biometric.R$dimen: int highlight_alpha_material_light
com.facebook.react.ReactInstanceManager: java.util.Set mAttachedReactRoots
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: com.facebook.react.bridge.ReadableArray commandArgs
androidx.biometric.R$attr: int initialActivityCount
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: java.lang.ref.WeakReference viewRef
com.facebook.react.runtime.internal.bolts.Task: java.lang.Object result
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole IMAGE
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: com.facebook.react.modules.systeminfo.AndroidInfoHelpers INSTANCE
com.facebook.react.fabric.LongStreamingStats: double average
com.facebook.react.views.text.ReactTextUpdate: int justificationMode
com.facebook.react.uimanager.ViewProps: java.lang.String MAX_WIDTH
androidx.biometric.BiometricViewModel: boolean mIsFingerprintDialogDismissedInstantly
androidx.biometric.R$id: int tag_unhandled_key_listeners
com.oblador.keychain.cipherStorage.CipherStorageBase: java.util.concurrent.atomic.AtomicBoolean isStrongboxAvailable
androidx.biometric.R$drawable: int abc_ratingbar_material
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedBundleFromNetworkLoader$1: java.lang.String $cachedFileLocation
com.facebook.react.views.textinput.ReactEditText: boolean didAttachToWindow
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int surfaceId
androidx.biometric.R$drawable: int abc_edit_text_material
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.bridge.JSExceptionHandler defaultJSExceptionHandler
com.facebook.react.modules.core.JavaTimerManager: android.util.SparseArray timerIdsToTimers
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: kotlin.jvm.functions.Function0 $handleCloseAction
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int AES_CTR_KEY_FIELD_NUMBER
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType$Companion Companion
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation layoutDeleteAnimation
com.facebook.react.modules.network.ProgressResponseBody: okhttp3.ResponseBody responseBody
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_FRAGMENTS
com.nozbe.watermelondb.utils.MigrationSet: java.lang.String sql
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.devsupport.DevInternalSettings$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENUITEM
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable feedbackUnderlay
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Day
com.facebook.react.module.model.ReactModuleInfo: java.lang.String className
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorListener listener
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
androidx.biometric.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: android.text.TextPaint textPaint
com.facebook.react.runtime.BridgelessReactContext: java.lang.String TAG
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String INVERT_COLOR_EVENT_NAME
okhttp3.RequestBody: okhttp3.RequestBody$Companion Companion
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mNodeUpdated
com.facebook.react.devsupport.DevServerHelper: okhttp3.OkHttpClient client
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String NAME
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.facebook.react.views.scroll.ScrollEvent: float yVelocity
androidx.biometric.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
androidx.biometric.R$styleable: int AppCompatTheme_colorAccent
com.facebook.react.ReactInstanceManager$1: com.facebook.react.ReactInstanceManager this$0
androidx.biometric.R$styleable: int ActionBar_backgroundSplit
com.facebook.react.devsupport.RedBoxContentView: android.widget.ProgressBar loadingIndicator
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.uimanager.ReactAccessibilityDelegate this$0
androidx.biometric.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String NAME
com.facebook.react.R$id: int catalyst_redbox_title
androidx.biometric.R$color: int abc_tint_default
androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS
com.facebook.react.runtime.ReactInstance$1: com.facebook.react.runtime.ReactInstance this$0
com.facebook.react.uimanager.events.Event: int surfaceId
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.google.crypto.tink.proto.AesCtrKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingViews
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle H11
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay NARROW
androidx.biometric.R$attr: int paddingTopNoTitle
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int id
com.facebook.react.modules.debug.FpsDebugFrameCallback: long firstFrameTime
androidx.biometric.R$attr: int titleMarginEnd
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String RVG_IS_VIEW_CLIPPED
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_HYPHENATION_FREQUENCY
com.facebook.react.uimanager.ReactStage: com.facebook.react.uimanager.ReactStage$Companion Companion
androidx.biometric.R$styleable: int AlertDialog_showTitle
com.google.crypto.tink.proto.EncryptedKeyset: int ENCRYPTED_KEYSET_FIELD_NUMBER
androidx.biometric.R$drawable: int abc_ic_search_api_material
com.facebook.react.common.MapBuilder$Builder: boolean mUnderConstruction
androidx.biometric.R$attr: int homeLayout
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
androidx.biometric.R$id: int accessibility_custom_action_25
androidx.biometric.R$attr: int contentDescription
androidx.biometric.R$id: int message
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_END
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
androidx.biometric.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.fragment.app.Fragment: int RESUMED
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomEnd
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.DevServerHelper devServerHelper
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener mItemDispatchListener
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TEXT
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
androidx.biometric.BiometricPrompt: int ERROR_NO_DEVICE_CREDENTIAL
androidx.biometric.R$dimen: int compat_button_padding_horizontal_material
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: com.facebook.react.BaseReactPackage this$0
com.facebook.react.uimanager.style.BorderRadiusProp: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$styleable: int AppCompatTheme_editTextColor
androidx.biometric.R$style: int Theme_AppCompat_Dialog_MinWidth
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CLICK_CAPTURE
com.facebook.react.uimanager.TouchTargetHelper: float[] eventCoords
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState OPENING
com.facebook.react.runtime.ReactHostImpl$CreationResult: com.facebook.react.runtime.ReactInstance mInstance
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_START
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
com.facebook.react.BuildConfig: boolean IS_INTERNAL_BUILD
com.facebook.react.views.scroll.ReactScrollViewHelper: boolean smoothScrollDurationInitialized
com.facebook.react.animated.SpringAnimation: long lastTime
com.facebook.react.uimanager.ViewProps: java.lang.String NONE
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mCurrentDelegate
com.facebook.react.BuildConfig: java.lang.String BUILD_TYPE
androidx.biometric.R$id: int search_go_btn
androidx.biometric.R$dimen: int hint_pressed_alpha_material_light
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler exceptionHandler
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
androidx.biometric.R$styleable: int LinearLayoutCompat_divider
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.biometric.R$attr: int showText
com.facebook.react.runtime.BridgelessAtomicRef: com.facebook.react.runtime.BridgelessAtomicRef$State state
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: android.app.Dialog pausedInDebuggerDialog
androidx.biometric.R$attr: int fontProviderQuery
androidx.biometric.R$style: int Theme_AppCompat_Light_NoActionBar
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.controller.ControllerListener controllerForTesting
androidx.biometric.R$styleable: int GradientColor_android_startX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.R$string: int menuitem_description
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Set headlessJsTaskEventListeners
androidx.biometric.R$styleable: int FontFamily_fontProviderCerts
androidx.biometric.R$id: int none
androidx.biometric.R$dimen: int abc_disabled_alpha_material_dark
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: boolean mKeyboardIsVisible
com.facebook.react.runtime.JSTimerExecutor: com.facebook.react.runtime.JSTimerExecutor$Companion Companion
com.facebook.react.common.ReactConstants: java.lang.String TAG
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.keyboard.KeyboardAnimationManager keyboardAnimationManager
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_MAX_FONT_SIZE_MULTIPLIER
androidx.biometric.R$attr: int titleMargins
com.facebook.react.R$id: int accessibility_order_dirty
com.facebook.react.animated.ObjectAnimatedNode: com.facebook.react.animated.ObjectAnimatedNode$Companion Companion
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneBluetoothConnectionReceiver
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactDelegate mReactDelegate
com.facebook.react.views.text.PreparedLayoutTextView: android.graphics.Paint selectionPaint
androidx.biometric.R$drawable: int notification_action_background
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.uimanager.ReactStage$Companion: int BRIDGE_DID_LOAD
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String DEVICE_PASSCODE
com.facebook.react.modules.network.NetworkingModule: java.lang.String defaultUserAgent
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String PROP_PLACEHOLDER
com.facebook.react.R$string: int catalyst_settings_title
com.facebook.react.views.textinput.ReactEditText: int fontWeight
com.facebook.react.fabric.FabricUIManager$4: int val$reactTag
androidx.biometric.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TOUCHES_KEY
com.facebook.react.uimanager.ViewProps: java.lang.String SCALE_X
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day mDay
com.facebook.react.views.text.internal.span.ReactTagSpan: int reactTag
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap$Companion Companion
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int width
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.bridge.ReadableNativeMap: int jniPassCounter
com.facebook.react.R$id: int rn_redbox_stack
androidx.biometric.R$styleable: int TextAppearance_android_textStyle
androidx.biometric.R$attr: int titleTextAppearance
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
androidx.biometric.R$color: int material_grey_100
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode
androidx.biometric.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.JSEngineResolutionAlgorithm mJSEngineResolutionAlgorithm
com.facebook.react.ReactFragment: com.facebook.react.modules.core.PermissionListener mPermissionListener
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String NULL_VALUE
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.swmansion.reanimated.NativeProxy: java.util.concurrent.atomic.AtomicBoolean mInvalidated
androidx.biometric.R$attr: int colorPrimary
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float deltaY
androidx.biometric.R$attr: int actionModeWebSearchDrawable
androidx.biometric.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.facebook.hermes.intl.Constants: java.lang.String SENSITIVITY_BASE
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: java.lang.Boolean didFailBiometric
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: int viewId
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: java.lang.String title
com.facebook.react.R$string: int catalyst_change_bundle_location_cancel
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT UP_CAPTURE
com.facebook.react.views.textinput.ReactTextInputLocalData: int minLines
com.facebook.react.R$id: int pointer_events
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: okhttp3.OkHttpClient httpClient
androidx.biometric.R$styleable: int AppCompatTheme_dialogTheme
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion Companion
com.facebook.react.packagerconnection.JSPackagerClient: com.facebook.react.packagerconnection.JSPackagerClient$Companion Companion
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: android.graphics.Rect prevFirstVisibleFrame
com.facebook.react.devsupport.DevSupportManagerBase: boolean isDevSupportEnabled
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodeFromView$1: int $animatedNodeTag
com.facebook.react.views.progressbar.ProgressBarContainerView: int MAX_PROGRESS
androidx.biometric.BiometricFragment$StopIgnoringCancelRunnable: java.lang.ref.WeakReference mViewModelRef
com.facebook.react.devsupport.StackTraceHelper: java.lang.String COLUMN_KEY
androidx.biometric.CryptoObjectUtils: java.lang.String KEYSTORE_INSTANCE
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: java.util.HashMap traceUpdateIdToCleanupRunnableMap
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useOptimizedEventBatchingOnAndroidCache
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year mYear
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT DOWN
com.facebook.react.animated.NativeAnimatedModule$getValue$1: com.facebook.react.bridge.Callback $callback
com.facebook.react.modules.debug.FpsDebugFrameCallback: int numFrameCallbacksWithBatchDispatches
androidx.biometric.R$id: int buttonPanel
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: float contentHeight
androidx.biometric.R$styleable: int FontFamily_fontProviderQuery
androidx.biometric.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_UNKNOWN
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircleImageView mCircleView
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.interfaces.DevLoadingViewManager mDevLoadingViewManager
com.facebook.react.fabric.FabricSoLoader: boolean didInit
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.ReactInstanceManager: java.lang.Object mReactContextLock
com.oblador.keychain.KeychainModule: java.lang.String FINGERPRINT_SUPPORTED_NAME
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Field mBorderRadiusField
com.facebook.react.uimanager.ViewProps: java.lang.String FILTER
androidx.biometric.R$style: int Base_Widget_AppCompat_Button
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList descs
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: int current
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.CopyOnWriteArrayList mStoppedSurfaceIds
androidx.biometric.R$id: int accessibility_custom_action_16
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: int ENCRYPTION_KEY_SIZE
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.StackFrame[] lastErrorStack
com.facebook.react.modules.core.JavaTimerManager$Timer: int interval
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.facebook.react.uimanager.drawable.BackgroundDrawable: float pathAdjustment
com.facebook.react.devsupport.StackTraceHelper: java.lang.String LINE_NUMBER_KEY
androidx.biometric.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.biometric.R$color: int switch_thumb_material_light
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind LEAF
androidx.biometric.R$style: int TextAppearance_AppCompat_Caption
com.oblador.keychain.KeychainModule$Maps: java.lang.String ACCESSIBLE
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.facebook.react.fabric.SynchronousEvent: int surfaceId
androidx.biometric.R$attr: int suggestionRowLayout
com.facebook.react.uimanager.style.CornerRadii: float horizontal
androidx.biometric.R$attr: int titleTextStyle
com.facebook.react.uimanager.common.UIManagerType: int DEFAULT
androidx.biometric.R$styleable: int Toolbar_titleTextAppearance
androidx.biometric.R$style: int Base_Widget_AppCompat_ListPopupWindow
androidx.biometric.R$styleable: int MenuItem_alphabeticModifiers
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_FLATTEN_ANIMATED_NODE_OFFSET
com.facebook.react.shell.MainReactPackage: java.util.Map viewManagersMap
androidx.appcompat.widget.SwitchCompat: int mMinFlingVelocity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_REMOVE_LISTENERS
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mPathForBorder
androidx.biometric.R$attr: int contentInsetStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNotify
com.facebook.react.animated.NativeAnimatedModule$updateAnimatedNodeConfig$1: com.facebook.react.bridge.ReadableMap $config
androidx.biometric.R$style: int TextAppearance_AppCompat_Button
com.facebook.react.devsupport.DevSupportManagerBase: int JSEXCEPTION_ERROR_COOKIE
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.biometric.R$styleable: int[] ActionMenuView
androidx.biometric.R$color: int background_floating_material_light
androidx.biometric.R$attr: int windowMinWidthMinor
com.facebook.react.animated.AnimatedNode: java.util.List children
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$Companion Companion
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManagerResolver mViewManagerResolver
com.facebook.react.uimanager.ReactShadowNodeImpl: int mReactTag
androidx.biometric.R$styleable: int SwitchCompat_android_textOff
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
androidx.biometric.BiometricFragment$9: androidx.biometric.BiometricPrompt$AuthenticationResult val$result
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_OUT
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.KeysetInfo keysetInfo_
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionBar
com.facebook.react.uimanager.ReactYogaConfigProvider: kotlin.Lazy yogaConfig$delegate
androidx.biometric.R$style: int Widget_AppCompat_SearchView
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.bridge.ReadableMap props
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
androidx.biometric.R$attr: int windowNoTitle
androidx.biometric.R$attr: int actionBarSplitStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd
com.oblador.keychain.KeychainModule$Maps: java.lang.String SERVICE
androidx.appcompat.widget.SwitchCompat: int mTouchSlop
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String COLLATION_CANON
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: int total4PlusFrameStutters
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$animationScaleObserver$1: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialMotionY
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence mTitle
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] $VALUES
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_HANDLE_RESOURCES
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.proto.AesGcmSivKeyFormat DEFAULT_INSTANCE
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer reactChoreographer
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.facebook.react.uimanager.Spacing: int VERTICAL
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int outputPrefixType_
androidx.biometric.R$attr: int subtitleTextStyle
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: int numRetries
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int BUCKET_SIZE
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.modules.sound.SoundManagerModule: com.facebook.react.modules.sound.SoundManagerModule$Companion Companion
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int derivedKeySize_
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String SURFACE_MOUNTING_MANAGER_MISSING_VIEWSTATE
androidx.biometric.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.facebook.react.uimanager.Spacing: int[] flagsMap
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
com.oblador.keychain.KeychainModule$Maps: java.lang.String ACCESS_GROUP
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_RADIUS
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_START_RADIUS
androidx.biometric.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mShouldSchedule
com.oblador.keychain.BuildConfig: boolean DEBUG
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MENUITEM
com.facebook.react.internal.AndroidChoreographerProvider: com.facebook.react.internal.AndroidChoreographerProvider INSTANCE
com.facebook.react.uimanager.UIManagerModuleConstants: java.lang.String ACTION_ITEM_SELECTED
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionMode
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: com.facebook.react.devsupport.interfaces.BundleLoadCallback $callback
androidx.biometric.R$dimen: int tooltip_vertical_padding
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOffTransformed
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$Companion Companion
com.facebook.react.modules.fresco.FrescoModule: com.facebook.react.modules.fresco.FrescoModule$Companion Companion
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle DOTTED
androidx.fragment.app.Fragment: int VIEW_CREATED
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: android.content.SharedPreferences sharedPreferences
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: com.google.crypto.tink.KeyTemplate mStreamingAeadKeyTemplate
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.String resizeMode
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String DRAWER_POSITION
androidx.biometric.R$attr: int editTextBackground
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String COLLATION_NUMERIC
androidx.biometric.R$drawable: int abc_seekbar_thumb_material
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.Spacing mDefaultPadding
androidx.biometric.R$style: int Widget_AppCompat_ButtonBar
com.facebook.drawee.drawable.ForwardingDrawable: com.facebook.drawee.drawable.TransformCallback mTransformCallback
androidx.biometric.R$id: int screen
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: java.lang.String TAG
com.facebook.react.ReactInstanceManagerBuilder: boolean mUseDeveloperSupport
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
androidx.biometric.R$style: int Theme_AppCompat_DayNight_NoActionBar
androidx.fragment.app.DialogFragment: boolean mShowsDialog
com.facebook.react.animated.StyleAnimatedNode: java.util.Map propMapping
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Map mLastEventCoordinatesByPointerId
com.facebook.react.ReactInstanceManagerBuilder: boolean mKeepActivity
com.facebook.react.defaults.DefaultSoLoader: com.facebook.react.defaults.DefaultSoLoader INSTANCE
androidx.biometric.BiometricViewModel: boolean mIsAwaitingResult
androidx.biometric.R$styleable: int SearchView_backHandlingEnabled
androidx.biometric.R$attr: int textColorAlertDialogListItem
com.oblador.keychain.KeychainModuleBuilder: boolean DEFAULT_USE_WARM_UP
com.facebook.react.animated.TransformAnimatedNode: java.util.List transformConfigs
com.google.crypto.tink.proto.AesEaxKey: int PARAMS_FIELD_NUMBER
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeOffset$1: int $tag
com.facebook.react.R$id: int button
com.facebook.react.uimanager.OnLayoutEvent: int height
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CANCEL
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mMostRecentSurfaceMountingManager
androidx.biometric.R$styleable: int Toolbar_menu
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: com.facebook.react.bridge.Callback val$callback
com.swmansion.worklets.WorkletsModule: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.UiThreadUtil: kotlin.Lazy mainHandler$delegate
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: boolean mCanCoalesceEvent
com.swmansion.rnscreens.ScreenContentWrapperManager: com.swmansion.rnscreens.ScreenContentWrapperManager$Companion Companion
androidx.security.crypto.MasterKey$Builder: boolean mAuthenticationRequired
androidx.biometric.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.biometric.BiometricPrompt: java.lang.String TAG
androidx.biometric.R$drawable: int tooltip_frame_light
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] $VALUES
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_RESTORE_DEFAULT_VALUES
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: boolean horizontal
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: com.facebook.react.bridge.ReactApplicationContext $reactContext
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter$Style mStyle
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: java.lang.Object mExtraData
androidx.biometric.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean DEBUG_MODE
androidx.biometric.R$style: int Base_Theme_AppCompat_Light_Dialog
com.facebook.react.modules.websocket.WebSocketModule$connect$2: com.facebook.react.modules.websocket.WebSocketModule this$0
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$Companion Companion
com.facebook.react.uimanager.events.EventDispatcherImpl: android.util.LongSparseArray mEventCookieToLastEventIdx
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: android.graphics.Path path
com.facebook.react.shell.MainReactPackage: com.facebook.react.shell.MainPackageConfig config
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity CASE
com.facebook.react.modules.debug.FpsDebugFrameCallback: android.view.Choreographer choreographer
androidx.biometric.R$dimen: int abc_dialog_min_width_minor
com.facebook.react.modules.toast.ToastModule: com.facebook.react.modules.toast.ToastModule$Companion Companion
androidx.biometric.R$id: int action_image
androidx.biometric.R$dimen: int notification_main_column_padding_top
androidx.biometric.R$id: int accessibility_custom_action_7
com.facebook.react.ReactRootView: com.facebook.react.uimanager.JSTouchDispatcher mJSTouchDispatcher
com.facebook.react.devsupport.StackTraceHelper: java.lang.String ORIGINAL_MESSAGE_KEY
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $VALUES
androidx.biometric.R$attr: int actionBarTabTextStyle
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager javaTimerManager
com.facebook.react.runtime.ReactSurfaceView: int widthMeasureSpec
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mTempRectForCenterDrawPath
androidx.biometric.R$styleable: int ActivityChooserView_initialActivityCount
com.facebook.hermes.intl.UnicodeExtensionKeys: java.util.HashMap s_canonicalkey_icukey_map
com.facebook.hermes.instrumentation.HermesSamplingProfiler: com.facebook.hermes.instrumentation.HermesSamplingProfiler INSTANCE
com.facebook.hermes.intl.Collator: com.facebook.hermes.intl.IPlatformCollator$Sensitivity mResolvedSensitivity
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_OFFSET_HEIGHT
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.security.crypto.EncryptedFile: android.content.Context mContext
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: boolean isLayoutable
com.facebook.react.packagerconnection.PackagerConnectionSettings: com.facebook.react.packagerconnection.PackagerConnectionSettings$Companion Companion
androidx.biometric.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.biometric.R$styleable: int Spinner_android_prompt
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.facebook.react.animated.StyleAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.hermes.intl.Constants: java.lang.String SENSITIVITY_CASE
com.swmansion.reanimated.NodesManager: boolean $assertionsDisabled
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius mComputedBorderRadius
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$Companion Companion
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second UNDEFINED
com.swmansion.reanimated.Utils$1: java.lang.Runnable[] val$runnables
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIAL_LAYOUT
com.facebook.react.fabric.FabricUIManager: boolean mMountNotificationScheduled
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: int VIEW_TYPE_TITLE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList currentKeysToTransform
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl: com.facebook.react.packagerconnection.JSPackagerClient this$0
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextAlign
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int nextSensorId
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.IInspectorPackagerConnection inspectorPackagerConnection
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mHeight
com.facebook.react.uimanager.events.Event: int uniqueIdCounter
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String NAME
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String GENYMOTION_LOCALHOST
androidx.biometric.R$dimen: int tooltip_corner_radius
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener accessibilityServiceChangeListener
androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint
androidx.biometric.R$attr: int textAppearanceListItemSecondary
androidx.biometric.R$attr: int splitTrack
com.facebook.react.ReactInstanceManager: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mDefaultBackButtonImpl
com.facebook.react.devsupport.inspector.InspectorNetworkHelper: com.facebook.react.devsupport.inspector.InspectorNetworkHelper INSTANCE
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.KeyData keyData_
com.facebook.react.views.text.FontMetricsUtil: com.facebook.react.views.text.FontMetricsUtil INSTANCE
com.facebook.react.uimanager.events.EventCategoryDef: int CONTINUOUS_END
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
androidx.biometric.BiometricPrompt: int ERROR_TIMEOUT
com.facebook.react.ReactInstanceManager: boolean mHasStartedCreatingInitialContext
androidx.biometric.R$layout: int abc_activity_chooser_view
androidx.biometric.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.biometric.R$style: int Base_Widget_AppCompat_TextView
androidx.biometric.R$styleable: int[] ActionMode
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.facebook.react.animated.InterpolationAnimatedNode: com.facebook.react.animated.ValueAnimatedNode parent
com.facebook.react.modules.i18nmanager.I18nUtil: java.lang.String SHARED_PREFS_NAME
com.facebook.react.views.text.ReactTextUpdate: com.facebook.react.views.text.ReactTextUpdate$Companion Companion
androidx.biometric.R$color: int abc_secondary_text_material_light
com.facebook.react.devsupport.RedBoxContentView: android.widget.TextView reportTextView
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean cxxNativeAnimatedEnabledCache
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener devBundleDownloadListener
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computedBorderRadius
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_ORDER
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop INSTANCE
androidx.biometric.R$attr: int dialogCornerRadius
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: android.view.View firstScreen
androidx.biometric.R$style: int Base_Widget_AppCompat_Button_Borderless
com.facebook.react.bridge.JSBundleLoader$Companion$createFileLoader$1: java.lang.String $assetUrl
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int end
com.facebook.imagepipeline.request.ImageRequest: android.net.Uri mSourceUri
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: int currentScrollAnimationDuration
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.facebook.react.uimanager.Spacing: int BLOCK
androidx.biometric.R$styleable: int AppCompatTextView_android_textAppearance
androidx.biometric.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaScriptTimerExecutor javaScriptTimerExecutor
androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.Object _syncStrongbox
androidx.biometric.R$attr: int listDividerAlertDialog
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.runtime.ReactHostImpl reactHost
com.facebook.react.R$style: int Theme_FullScreenDialogAnimatedSlide
com.facebook.react.animated.AnimationDriver: com.facebook.react.bridge.Callback endCallback
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule this$0
androidx.biometric.R$styleable: int ActionBar_subtitleTextStyle
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodeToView$1: int $animatedNodeTag
androidx.biometric.R$styleable: int MenuItem_android_titleCondensed
androidx.biometric.R$styleable: int SearchView_commitIcon
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task mStartTask
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day UNDEFINED
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableFabricRendererCache
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector didJSUpdateUiDuringFrameDetector
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT MOVE_CAPTURE
androidx.biometric.R$attr: int layout
com.facebook.react.devsupport.StackTraceHelper: java.lang.String COMPONENT_STACK_KEY
com.swmansion.rnscreens.ScreensModule: java.lang.String NAME
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.EventEmitterImpl eventEmitter
com.facebook.react.common.ShakeDetector: long lastTimestamp
com.google.crypto.tink.proto.AesGcmSivKey: int KEY_VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.HmacKey hmacKey_
com.facebook.react.bridge.ReadableNativeMap: kotlin.Lazy keys$delegate
androidx.biometric.R$color: int switch_thumb_disabled_material_dark
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation STANDARD
androidx.security.crypto.MasterKey$Builder: boolean mRequestStrongBoxBacked
com.facebook.react.devsupport.DevServerHelper: int HTTP_CONNECT_TIMEOUT_MS
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_VERTICAL
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.jni.HybridData mHybridData
com.facebook.hermes.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.oblador.keychain.KeychainModule$AccessControl: java.lang.String APPLICATION_PASSWORD
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: java.lang.String mClassName
androidx.biometric.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.biometric.R$dimen: int abc_text_size_button_material
com.facebook.react.animated.EventAnimationDriver: java.lang.String eventName
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mOperations
com.facebook.react.uimanager.BaseViewManager$1: android.view.View val$view
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrHmacAeadKey DEFAULT_INSTANCE
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Exception exception
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_INSPECTOR_DEBUG_KEY
androidx.fragment.app.Fragment: boolean mHasMenu
com.facebook.react.animated.NativeAnimatedNodesManager: java.lang.String TAG
com.facebook.react.views.text.TextTransformKt$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.facebook.react.views.scroll.ScrollEvent: java.lang.String TAG
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int HMAC_KEY_FORMAT_FIELD_NUMBER
androidx.biometric.R$id: int accessibility_custom_action_29
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] $VALUES
androidx.biometric.R$styleable: int SearchView_layout
androidx.biometric.R$color: int foreground_material_light
androidx.biometric.R$styleable: int AppCompatTheme_panelMenuListTheme
com.facebook.hermes.intl.LocaleObjectAndroid: com.facebook.hermes.intl.ParsedLocaleIdentifier mParsedLocaleIdentifier
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator textWatcherDelegator
androidx.biometric.R$styleable: int TextAppearance_textAllCaps
com.facebook.react.ReactNativeHost$1: com.facebook.react.ReactNativeHost this$0
com.nozbe.watermelondb.Queries: java.lang.String select_local_storage
com.google.crypto.tink.proto.KmsAeadKey: int VERSION_FIELD_NUMBER
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.OutlineDrawable outline
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: com.facebook.react.views.view.ReactViewGroup mParent
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole DRAWERLAYOUT
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float spread
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: com.google.crypto.tink.proto.AesGcmHkdfStreamingParams params_
com.swmansion.reanimated.NodesManager$1: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.facebook.react.uimanager.UIImplementation: int[] mMeasureBuffer
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation
com.facebook.react.views.scroll.OnScrollDispatchHelper: long lastScrollEventTimeMs
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType STRING
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String NAME
androidx.biometric.R$styleable: int ViewStubCompat_android_inflatedId
com.facebook.react.touch.JSResponderHandler: android.view.ViewParent viewParentBlockingNativeResponder
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float blurRadius
com.facebook.react.views.image.ReactImageDownloadListener: com.facebook.react.views.image.ReactImageDownloadListener$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int STARTING_PROGRESS_ALPHA
androidx.biometric.R$color: int background_floating_material_dark
com.facebook.react.runtime.ReactLifecycleStateManager: com.facebook.react.common.LifecycleState state
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_DECORATION_LINE
androidx.biometric.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.FpsListener mFpsListener
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleDiameter
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean mInitialized
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String NAME
com.facebook.react.uimanager.FloatUtil: float EPSILON
androidx.fragment.app.Fragment: int mState
com.facebook.react.ReactAndroidHWInputDeviceHelper: java.util.Map KEY_EVENTS_ACTIONS
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedElementsLookup
com.facebook.react.views.text.TextAttributeProps: int mFontStyle
com.facebook.react.uimanager.JSTouchDispatcher: boolean mChildIsHandlingNativeGesture
androidx.biometric.R$style: int TextAppearance_AppCompat_Display3
com.facebook.react.R$style: int Theme_FullScreenDialogAnimatedFade
androidx.biometric.R$style: int Base_Widget_AppCompat_Toolbar
com.swmansion.reanimated.BuildConfig: boolean IS_INTERNAL_BUILD
androidx.biometric.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.biometric.R$attr: int gapBetweenBars
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType animatedProperty
androidx.biometric.R$string: int fingerprint_error_no_fingerprints
androidx.biometric.R$color: int accent_material_light
com.facebook.react.views.progressbar.ProgressBarShadowNode: android.util.SparseIntArray width
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_TOP
androidx.biometric.R$dimen: int abc_action_bar_content_inset_with_nav
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: com.facebook.react.devsupport.BundleDownloader$BundleInfo $bundleInfo
com.facebook.react.R$id: int accessibility_links
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String NAME
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_HASH
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData mHybridData
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay mResolvedCurrencyDisplay
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object callerContext
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.facebook.react.devsupport.FpsView: com.facebook.react.modules.debug.FpsDebugFrameCallback frameCallback
com.facebook.react.modules.blob.BlobProvider: int PIPE_CAPACITY
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableDoubleMeasurementFixAndroidCache
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$styleable: int MenuGroup_android_orderInCategory
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: int _surfaceId
androidx.biometric.R$string: int search_menu_title
androidx.fragment.app.Fragment: boolean mPerformedCreateView
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage right
com.facebook.react.bridge.JavaOnlyMap: java.util.Map backingMap
androidx.biometric.R$attr: int actionButtonStyle
androidx.biometric.R$attr: int backgroundTintMode
com.facebook.react.views.modal.ReactModalHostView: boolean hardwareAccelerated
com.facebook.react.views.image.ReactImageView: java.util.List sources
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.ThemedReactContext mThemedContext
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.FpsListener mFpsListener
androidx.biometric.R$id: int accessibility_custom_action_2
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.ReactInstance$Companion Companion
com.facebook.react.R$string: int catalyst_reload_error
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
androidx.biometric.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.Integer uiManagerType
androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE
androidx.biometric.R$id: int right_side
androidx.biometric.R$attr: int dividerVertical
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useNativeViewConfigsInBridgelessModeCache
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.ReactStylesDiffMap mInitialProps
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean animating
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle DOTTED
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role NAVIGATION
androidx.biometric.R$color: int abc_search_url_text_pressed
androidx.biometric.R$id: int time
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType IDLE_EVENT
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1: com.facebook.react.bridge.Promise $promise
androidx.biometric.R$style: int TextAppearance_AppCompat_Title
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal VIEW_MGR_GROUP_ARGS
com.facebook.react.common.ClearableSynchronizedPool: java.lang.Object[] pool
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateTurboModulesEnabled
com.facebook.react.views.progressbar.ProgressBarContainerView: android.widget.ProgressBar progressBar
androidx.biometric.R$styleable: int Toolbar_android_gravity
androidx.biometric.R$attr: int ttcIndex
com.facebook.react.uimanager.events.Event: int viewTag
com.google.crypto.tink.proto.AesEaxParams: int IV_SIZE_FIELD_NUMBER
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.facebook.react.bridge.WritableMap mNativeProps
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String NAME
androidx.biometric.R$styleable: int DrawerArrowToggle_spinBars
com.facebook.hermes.intl.UnicodeExtensionKeys: java.util.Map s_validKeywords
com.facebook.react.uimanager.ViewProps: java.lang.String BOTTOM
androidx.biometric.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion Companion
androidx.biometric.R$style: int Base_Widget_AppCompat_RatingBar
androidx.biometric.BiometricFragment: int HIDE_DIALOG_DELAY_MS
androidx.biometric.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
androidx.biometric.R$styleable: int AppCompatImageView_srcCompat
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType JS
com.facebook.react.ReactInstanceManager: boolean mUseDeveloperSupport
com.facebook.react.ReactRootView: int mLastHeight
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes$Companion Companion
androidx.biometric.R$drawable: int btn_radio_on_mtrl
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: com.facebook.react.common.mapbuffer.WritableMapBuffer this$0
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: int mReactTag
androidx.biometric.R$dimen: int abc_action_button_min_width_overflow_material
com.facebook.react.uimanager.ViewManagersPropertyCache$1: int val$size
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MARQUEE
com.facebook.react.uimanager.events.PointerEvent: int POINTER_EVENTS_POOL_SIZE
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList
com.facebook.react.ReactDelegate: com.facebook.react.ReactHost mReactHost
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType MAP
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String delimiter
androidx.biometric.R$attr: int actionLayout
com.facebook.react.uimanager.TouchTargetHelper: float[] matrixTransformCoords
com.facebook.react.uimanager.UIViewOperationQueue$2: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray layoutHandlers
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TREEGRID
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_SET_ANIMATED_NODE_VALUE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.biometric.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.facebook.react.uimanager.Spacing: float[] spacing
androidx.biometric.R$attr: int actionModeSelectAllDrawable
com.facebook.react.uimanager.OnLayoutEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.facebook.hermes.intl.NumberFormat: int mResolvedMinimumSignificantDigits
com.facebook.react.uimanager.UIViewOperationQueue: long mThreadCpuTime
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: boolean $useIncrementalUpdates
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BLOCK_START
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel ANY
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String NAME
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float progressViewOffset
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.facebook.imagepipeline.request.ImageRequest: boolean sUseCachedHashcodeInEquals
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.facebook.react.views.text.ReactTextUpdate: float paddingRight
com.facebook.react.uimanager.ViewProps: java.lang.String ASPECT_RATIO
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
androidx.biometric.R$attr: int subtitleTextColor
com.facebook.react.uimanager.ViewProps: java.lang.String ELLIPSIZE_MODE
com.facebook.react.uimanager.LengthPercentage$Companion$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$id: int home
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType[] $VALUES
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.runtime.ReactHostImpl reactHost
com.facebook.react.modules.common.ModuleDataCleaner: com.facebook.react.modules.common.ModuleDataCleaner INSTANCE
com.facebook.react.ReactRootView: int mRootViewTag
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mErroneouslyReaddedReactTags
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage
androidx.biometric.BiometricFragment$8: java.lang.CharSequence val$errorString
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int MAX_ALPHA
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableFontScaleChangesUpdatingLayoutCache
com.facebook.react.views.textinput.ReactEditText: boolean onKeyPress
androidx.biometric.R$id: int action_divider
com.swmansion.reanimated.layoutReanimation.Snapshot: int originY
androidx.biometric.R$attr: int listChoiceIndicatorSingleAnimated
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate mDelegate
androidx.biometric.R$styleable: int Toolbar_contentInsetRight
androidx.biometric.R$style: int Widget_AppCompat_ImageButton
com.facebook.react.uimanager.ReactAccessibilityDelegate$3: int[] $SwitchMap$com$facebook$react$uimanager$ReactAccessibilityDelegate$Role
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String EXTRAPOLATE_TYPE_IDENTITY
com.facebook.react.R$id: int filter
com.facebook.react.uimanager.ShadowNodeRegistry$SingleThreadAsserter: com.facebook.react.uimanager.ShadowNodeRegistry this$0
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List eagerInitModuleNames
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.biometric.R$styleable: int Fragment_android_tag
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_RADIUS
androidx.biometric.R$styleable: int AppCompatTheme_actionMenuTextColor
com.swmansion.reanimated.NodesManager: java.util.concurrent.atomic.AtomicBoolean mCallbackPosted
androidx.biometric.R$styleable: int[] ColorStateListItem
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.view.View mAccessibilityLabelledBy
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: java.util.List cxxReactPackageProviders
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager mReactInstanceManager
androidx.biometric.R$layout: int abc_popup_menu_item_layout
com.google.crypto.tink.proto.KeyTemplate: int outputPrefixType_
com.facebook.react.uimanager.drawable.BorderDrawable: android.content.Context context
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ALLOW_FONT_SCALING
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LOG
com.facebook.hermes.intl.NumberFormat: boolean mUseDefaultNumberSystem
com.google.crypto.tink.proto.KeysetInfo: int PRIMARY_KEY_ID_FIELD_NUMBER
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_GET_VALUE
androidx.biometric.R$styleable: int AppCompatTheme_colorControlHighlight
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion Companion
com.facebook.react.common.build.ReactBuildConfig: boolean UNSTABLE_ENABLE_MINIFY_LEGACY_ARCHITECTURE
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge$Companion Companion
com.nozbe.watermelondb.WMDatabaseDriver: java.util.Map cachedRecords
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_DELETE
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.biometric.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean moduleCleanupStarted
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$UnitDisplay
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role GRID
com.facebook.react.uimanager.annotations.ReactProp$Companion: com.facebook.react.uimanager.annotations.ReactProp$Companion $$INSTANCE
androidx.biometric.R$attr: int barLength
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_OPTION_SENSITIVITY
androidx.biometric.CancellationSignalProvider: java.lang.String TAG
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider turboModuleProvider
androidx.biometric.R$string: int abc_menu_sym_shortcut_label
com.facebook.hermes.intl.NumberFormat: java.lang.String mResolvedNumberingSystem
com.google.crypto.tink.proto.AesCmacKey: int KEY_VALUE_FIELD_NUMBER
androidx.biometric.R$styleable: int MenuView_android_itemIconDisabledAlpha
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_CACHE_DIRECTORY
androidx.biometric.R$drawable: int abc_btn_default_mtrl_shape
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mEventCoordinatesByPointerId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
androidx.biometric.R$attr: int subtitleTextAppearance
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.fabric.ComponentFactory componentFactory
com.facebook.react.views.text.internal.span.CustomStyleSpan: com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion Companion
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String extrapolateRight
androidx.biometric.R$attr: int contentInsetEndWithActions
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm HERMES
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int surfaceId
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_MAX_NUMBER_OF_LINES
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int version_
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.facebook.react.uimanager.events.PointerEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.facebook.react.animated.FrameBasedAnimationDriver: double FRAME_TIME_MILLIS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_CIRCLE_TARGET
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_IS_ATTACHMENT
androidx.biometric.R$drawable: int abc_btn_check_to_on_mtrl_015
com.google.crypto.tink.proto.HmacKeyFormat: int version_
androidx.biometric.R$color: int abc_background_cache_hint_selector_material_light
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] rotationDegrees
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.Map fabricCommitMarkers
com.google.crypto.tink.proto.KmsAeadKey: int PARAMS_FIELD_NUMBER
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1: com.facebook.react.bridge.WritableNativeMap $grantedPermissions
androidx.biometric.R$string: int abc_capital_off
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableLayoutAnimationsOnIOSCache
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType TO_TOP_RIGHT
androidx.biometric.R$dimen: int abc_text_size_title_material
androidx.biometric.R$attr: int customNavigationLayout
androidx.biometric.R$style: int Widget_AppCompat_ActionBar_TabText
com.facebook.react.modules.debug.FpsDebugFrameCallback: double targetFps
com.facebook.react.jstasks.NoRetryPolicy: com.facebook.react.jstasks.NoRetryPolicy$Companion Companion
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: com.facebook.react.uimanager.events.BlackHoleEventDispatcher INSTANCE
com.facebook.react.animated.FrameBasedAnimationDriver: double[] frames
com.facebook.react.views.image.ReactImageDownloadListener: int MAX_LEVEL
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationManager
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName LONGOFFSET
com.facebook.react.soloader.OpenSourceMergedSoMapping: com.facebook.react.soloader.OpenSourceMergedSoMapping INSTANCE
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Map mLastHitPathByPointerId
androidx.biometric.BiometricFragment$8: androidx.biometric.BiometricFragment this$0
androidx.biometric.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType CLOSEST_SIDE
androidx.biometric.R$style: int Theme_AppCompat_DialogWhenLarge
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule$Companion Companion
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.fabric.ComponentFactory mComponentFactory
com.facebook.react.uimanager.ViewProps: java.lang.String LINE_HEIGHT
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter mPlatformDateTimeFormatter
com.facebook.react.views.textinput.ReactTextChangedEvent: com.facebook.react.views.textinput.ReactTextChangedEvent$Companion Companion
com.facebook.react.uimanager.IllegalViewOperationException: android.view.View view
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_CACHE_ID
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsUnderlineTextDecorationSet
androidx.biometric.R$id: int unchecked
androidx.biometric.R$string: int abc_searchview_description_query
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
androidx.biometric.R$style: int Widget_AppCompat_Spinner_DropDown
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String metroHostPropValue
com.facebook.react.modules.network.HeaderUtil: com.facebook.react.modules.network.HeaderUtil$Companion Companion
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.lang.String TOTAL_TIME
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCustomSlingshotDistance
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.lang.ref.WeakReference mWeakNativeViewHierarchyManager
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_INCLUDE_FONT_PADDING
com.facebook.react.uimanager.JSPointerDispatcher$1: boolean val$isCapture
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.defaults.DefaultReactHost INSTANCE
com.facebook.react.runtime.ReactLifecycleStateManager: com.facebook.react.runtime.BridgelessReactStateTracker bridgelessReactStateTracker
androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground
androidx.biometric.R$styleable: int MenuItem_contentDescription
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.facebook.react.bridge.DynamicFromObject: java.lang.Object value
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_LEFT
com.swmansion.reanimated.NodesManager: boolean mTryRunBatchUpdatesSynchronously
com.facebook.react.views.scroll.ReactScrollView: int mEndFillColor
androidx.biometric.R$attr: int displayOptions
com.facebook.react.uimanager.ViewProps: java.lang.String ON
com.facebook.react.R$string: int catalyst_debug_error
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.views.image.MultiPostprocessor: java.util.List postprocessors
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomRight
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.UIManagerProvider mUIManagerProvider
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$Companion Companion
com.facebook.react.R$style: int Theme_FullScreenDialog
com.facebook.react.R$style: int SpinnerDatePickerStyle
androidx.biometric.R$styleable: int MenuItem_actionViewClass
com.facebook.react.R$string: int combobox_description
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$DateStyle
com.facebook.react.views.view.ReactViewGroup: int mRecycleCount
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.nozbe.watermelondb.utils.Schema: int version
androidx.biometric.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.biometric.R$attr: int contentInsetStartWithNavigation
androidx.biometric.R$styleable: int CompoundButton_buttonTintMode
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.uimanager.style.BoxShadow$Companion$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$drawable: int abc_btn_check_material_anim
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.BundleDownloader bundleDownloader
com.swmansion.reanimated.NodesManager: java.util.Set uiProps
com.google.crypto.tink.proto.AesCmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: com.facebook.react.devsupport.RedBoxContentView$StackAdapter$Companion Companion
com.google.crypto.tink.proto.Keyset$Key: int outputPrefixType_
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags INSTANCE
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_TOUCH
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation layoutUpdateAnimation
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_LEFT_RADIUS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.View mTarget
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator interpolator
com.facebook.hermes.intl.Constants: java.lang.String CASEFIRST_UPPER
com.google.crypto.tink.proto.RegistryConfig: java.lang.String configName_
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle$Companion Companion
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.internal.interop.InteropEventEmitter$Companion Companion
com.facebook.react.uimanager.annotations.ReactPropGroup$Companion: com.facebook.react.uimanager.annotations.ReactPropGroup$Companion $$INSTANCE
com.swmansion.reanimated.keyboard.Keyboard: int mHeight
com.facebook.react.modules.network.ProgressResponseBody: okio.BufferedSource bufferedSource
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.modules.camera.ImageStoreManager$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.facebook.react.animated.SubtractionAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_HOT_MODULE_REPLACEMENT_KEY
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int tintColor
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.String failureMessage
androidx.biometric.R$id: int action_bar
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role PRESENTATION
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mBackgroundColorRenderPath
androidx.biometric.R$styleable: int Toolbar_contentInsetEndWithActions
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle SHORT
com.facebook.react.modules.debug.FpsDebugFrameCallback: long lastFrameTime
androidx.biometric.R$styleable: int AppCompatTextView_lineHeight
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect
com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String deviceName
com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat: int keySize_
androidx.biometric.R$styleable: int SwitchCompat_trackTintMode
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.Object outputRange
com.facebook.react.animated.PropsAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType TO_TOP_LEFT
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
androidx.biometric.R$style: int Widget_AppCompat_ActivityChooserView
com.facebook.react.uimanager.Spacing: int RIGHT
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enablePreparedTextLayoutCache
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback reactTextViewManagerCallback
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.List devToolsReactPerfLoggerListeners
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MENU
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role GROUP
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop
com.facebook.react.common.build.ReactBuildConfig: boolean DEBUG
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_LOAD_END
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIALIZE
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_START_POINT
com.facebook.react.views.scroll.ReactScrollView: int pendingContentOffsetY
com.facebook.react.common.assets.ReactFontManager: com.facebook.react.common.assets.ReactFontManager _instance
androidx.biometric.R$styleable: int Spinner_android_dropDownWidth
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$Minute
com.facebook.react.animated.SpringAnimation: double restSpeedThreshold
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils INSTANCE
androidx.fragment.app.Fragment: boolean mMenuVisible
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mActivelyScrolling
androidx.biometric.R$styleable: int Toolbar_titleMargin
com.facebook.react.modules.devtoolsruntimesettings.Settings: boolean recordChangeDescriptions
com.facebook.react.modules.core.JavaTimerManager$Timer: boolean repeat
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String NAME
androidx.biometric.R$styleable: int StateListDrawable_android_visible
androidx.biometric.R$dimen: int tooltip_precise_anchor_extra_offset
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_SEARCH
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl nativeModulesQueueThread
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: java.lang.Throwable error
com.facebook.react.common.build.ReactBuildConfig: boolean UNSTABLE_ENABLE_FUSEBOX_RELEASE
com.facebook.react.animated.InterpolationAnimatedNode: java.util.regex.Pattern numericPattern
androidx.biometric.R$style: int Base_Animation_AppCompat_DropDownUp
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.biometric.R$attr: int tooltipText
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.lang.String IMAGE_SIZE
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour UNDEFINED
androidx.biometric.R$array: int delay_showing_prompt_models
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean mInDispatch
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String COLLATION_CASEFIRST
androidx.biometric.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.biometric.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.facebook.react.uimanager.ComponentNameResolverBinding: com.facebook.react.uimanager.ComponentNameResolverBinding INSTANCE
androidx.biometric.AuthenticationCallbackProvider: androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback mFingerprintCallback
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: boolean mIsNavigationBarTranslucent
androidx.biometric.BiometricManager: androidx.biometric.BiometricManager$Injector mInjector
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_OVER
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_STATE
com.facebook.react.views.text.TextAttributeProps: float mLineHeight
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.biometric.R$id: int tag_accessibility_actions
androidx.biometric.AuthenticationCallbackProvider: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback mBiometricCallback
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_START_RADIUS
com.swmansion.reanimated.Utils: boolean isChromeDebugger
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float bottomLeft
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role COMPLEMENTARY
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] $VALUES
androidx.biometric.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mEnteringViewTargetValues
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge ALL
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
androidx.biometric.R$id: int notification_main_column_container
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme AES256_SIV
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String[] PROJECTION
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String TRANSFORMATION_RSA_ECB_PKCS1
com.facebook.react.animated.NativeAnimatedNodesManager: android.util.SparseArray animatedNodes
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] regionAliasKeys3
androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.graphics.drawable.Drawable drawable
com.facebook.hermes.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType Color
androidx.biometric.R$attr: int autoSizeMinTextSize
com.facebook.react.uimanager.internal.LegacyArchitectureShadowNodeLogger: com.facebook.react.uimanager.internal.LegacyArchitectureShadowNodeLogger INSTANCE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_X
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mPrimaryPointerId
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State Creating
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1: java.lang.String $clientId
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState OPEN
com.facebook.react.uimanager.style.LinearGradient: java.util.List colorStops
com.facebook.react.uimanager.style.BoxShadow: java.lang.Boolean inset
com.facebook.react.views.view.ReactViewGroup$1: android.view.View val$child
com.facebook.hermes.intl.IPlatformDateTimeFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$TimeZoneName
com.facebook.react.common.mapbuffer.ReadableMapBuffer$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.scroll.ReactScrollView: int mScrollEventThrottle
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii bottomRight
com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager cookieManager
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: com.facebook.react.modules.devtoolsruntimesettings.Settings settings
com.oblador.keychain.KeychainModule: java.lang.String EMPTY_STRING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType BEGIN_DRAG
com.facebook.react.animated.ObjectAnimatedNode$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$style: int TextAppearance_Compat_Notification_Title
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List innerShadows
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NAME
androidx.biometric.R$styleable: int SearchView_defaultQueryHint
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: com.facebook.react.devsupport.BundleDownloader$BundleInfo $bundleInfo
com.facebook.react.animated.AnimatedNode: int INITIAL_BFS_COLOR
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: java.lang.String value
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType[] $VALUES
com.facebook.react.runtime.BridgelessReactContext$BridgelessJSModuleInvocationHandler: com.facebook.react.runtime.ReactHostImpl reactHost
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
androidx.biometric.R$styleable: int AppCompatTheme_dividerVertical
androidx.biometric.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: boolean isEnabled
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: int DATABASE_VERSION
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType FLOAT
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion Companion
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_RIGHT_RADIUS
com.facebook.react.runtime.ReactHostImpl: java.util.List mBeforeDestroyListeners
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult result
androidx.biometric.CancellationSignalProvider: android.os.CancellationSignal mBiometricCancellationSignal
androidx.biometric.R$dimen: int abc_text_size_display_2_material
com.facebook.react.runtime.internal.bolts.Task: boolean cancelled
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge START
com.facebook.react.animated.SpringAnimation: boolean overshootClampingEnabled
com.swmansion.reanimated.NodesManager$1: com.facebook.react.bridge.ReadableArray val$commandArgs
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: android.content.Context context
androidx.biometric.R$id: int custom
com.facebook.react.uimanager.UIViewOperationQueue: int[] mMeasureBuffer
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean nativeGestureStarted
androidx.biometric.R$styleable: int[] AlertDialog
androidx.biometric.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableFabricLogsCache
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_ADD_ANIMATED_EVENT_TO_VIEW
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: boolean mAnimated
com.facebook.react.views.scroll.ReactHorizontalScrollView: int UNSET_CONTENT_OFFSET
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.text.DateFormat mDateFormat
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesSivKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: androidx.core.util.Supplier contextSupplier
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
androidx.biometric.R$color: int abc_primary_text_disable_only_material_dark
androidx.biometric.R$layout: int abc_action_menu_item_layout
com.facebook.react.packagerconnection.ReconnectingWebSocket: boolean suppressConnectionErrors
com.facebook.react.BuildConfig: int EXOPACKAGE_FLAGS
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1: int $reactTag
com.facebook.react.R$id: int rn_redbox_dismiss_button
androidx.biometric.R$attr: int radioButtonStyle
com.facebook.react.devsupport.DevSupportManagerBase: android.content.BroadcastReceiver reloadAppBroadcastReceiver
androidx.biometric.R$color: int dim_foreground_disabled_material_light
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.facebook.react.runtime.ReactSurfaceImpl: java.util.concurrent.atomic.AtomicReference reactHostRef
com.facebook.react.modules.blob.BlobModule$networkingResponseHandler$1: com.facebook.react.modules.blob.BlobModule this$0
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.GlobalImageLoadListener globalImageLoadListener
androidx.biometric.R$color: int error_color_material_light
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay EXCEPTZERO
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.bridge.JSExceptionHandler jsExceptionHandler
com.nozbe.watermelondb.WMDatabaseDriver: com.nozbe.watermelondb.WMDatabase database
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.ByteString encryptedKeyset_
com.facebook.react.animated.DecayAnimation: int currentLoop
com.facebook.react.modules.permissions.PermissionsModule$requestPermission$1: com.facebook.react.bridge.Promise $promise
com.facebook.drawee.drawable.ForwardingDrawable: com.facebook.drawee.drawable.DrawableProperties mDrawableProperties
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean wasIdleAtEndOfLastFrame
androidx.biometric.R$dimen: int notification_action_icon_size
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String mMasterKeyAlias
com.nozbe.watermelondb.utils.Pair: java.lang.Object second
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OUT
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
com.facebook.react.modules.network.ProgressRequestBody: long contentLength
androidx.biometric.R$styleable: int DrawerArrowToggle_thickness
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme[] $VALUES
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher BASIC
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: java.lang.String LOCAL_RESOURCE_SCHEME
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback idleFrameCallback
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topRight
com.swmansion.reanimated.NodesManager$4: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.biometric.R$id: int blocking
androidx.drawerlayout.widget.DrawerLayout: int mScrimColor
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask: com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion Companion
androidx.biometric.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.biometric.R$color: int abc_tint_edittext
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName mTimeZoneName
com.facebook.drawee.view.DraweeView: com.facebook.drawee.view.AspectRatioMeasure$Spec mMeasureSpec
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation peekedOperation
androidx.biometric.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.biometric.R$style: int Platform_Widget_AppCompat_Spinner
com.swmansion.reanimated.layoutReanimation.Snapshot: com.swmansion.reanimated.ReactNativeUtils$BorderRadii borderRadii
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean incorporateMaxLinesDuringAndroidLayoutCache
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String ENCRYPTION_TRANSFORMATION
com.oblador.keychain.KeychainModule$Maps: java.lang.String STORAGE
androidx.biometric.R$attr: int fontWeight
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: int mDefaultValue
com.facebook.react.uimanager.ViewProps: java.lang.String ROLE
androidx.biometric.R$styleable: int Spinner_android_entries
androidx.fragment.app.Fragment: boolean mAdded
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.swmansion.reanimated.NodesManager$2: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.devsupport.WindowOverlayCompat: com.facebook.react.devsupport.WindowOverlayCompat INSTANCE
androidx.biometric.R$styleable: int[] AppCompatSeekBar
androidx.biometric.R$id: int multiply
com.facebook.react.ReactInstanceManager$4: android.view.View val$decorView
com.facebook.react.ReactPackageHelper: com.facebook.react.ReactPackageHelper INSTANCE
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
com.facebook.react.views.progressbar.ProgressBarShadowNode: android.util.SparseIntArray height
androidx.biometric.R$style: int Platform_AppCompat_Light
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String NAME
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType BOOLEAN
androidx.biometric.R$style: int TextAppearance_AppCompat_Inverse
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long commitNumber
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance mReactInstance
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIAL_RENDERING
com.facebook.react.views.scroll.ReactScrollView: boolean mPagingEnabled
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl uiQueueThread
androidx.biometric.CancellationSignalProvider$1: androidx.biometric.CancellationSignalProvider this$0
androidx.biometric.R$attr: int ratingBarStyleIndicator
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: android.view.ViewGroup $scrollView
com.facebook.react.R$string: int catalyst_dev_menu_sub_header
androidx.biometric.R$id: int accessibility_custom_action_23
com.facebook.react.uimanager.events.EventDispatcherImpl: int mEventsToDispatchSize
com.facebook.react.common.futures.SimpleSettableFuture: java.util.concurrent.CountDownLatch readyLatch
com.zoontek.rnpermissions.RNPermissionsModule: android.util.SparseArray mCallbacks
com.facebook.react.views.textinput.ReactTextInputBlurEvent: com.facebook.react.views.textinput.ReactTextInputBlurEvent$Companion Companion
androidx.biometric.R$style: int Base_Widget_AppCompat_SearchView
androidx.biometric.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
org.pgsqlite.SQLitePlugin: java.lang.String PLUGIN_NAME
com.facebook.react.R$layout: int paused_in_debugger_view
androidx.biometric.R$styleable: int LinearLayoutCompat_android_weightSum
com.facebook.react.uimanager.UIManagerHelper: java.lang.String TAG
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mEnableLegacyRequestDisallowInterceptTouch
com.facebook.react.uimanager.ReactRoot: int STATE_STARTED
com.facebook.hermes.intl.ParsedLocaleIdentifier: java.util.TreeMap unicodeExtensionKeywords
com.facebook.react.uimanager.common.UIManagerType: int LEGACY
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String EMULATOR_LOCALHOST
com.facebook.react.uimanager.events.PointerEvent: short UNSET_COALESCING_KEY
com.facebook.react.modules.network.NetworkingModule: java.util.List responseHandlers
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.facebook.react.views.text.TextAttributeProps: boolean mIsBackgroundColorSet
com.facebook.react.uimanager.ViewProps: java.lang.String COLLAPSABLE
com.facebook.react.views.textinput.ReactTextInputTextWatcher: int surfaceId
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int INVALID_POINTER
androidx.biometric.R$string: int generic_error_no_keyguard
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.atomic.AtomicInteger mCounter
com.facebook.react.ReactRootView: int mWidthMeasureSpec
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List outerShadows
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$OnPreAttachedListener mSavedStateAttachListener
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: android.view.View reactRootView
com.facebook.react.jstasks.HeadlessJsTaskContext: java.lang.ref.WeakReference reactContext
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String AUTO
androidx.biometric.R$attr: int colorControlNormal
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: com.facebook.react.bridge.ReadableArray mArgs
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String fabricComponentName
androidx.fragment.app.Fragment: boolean mDetached
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance jsInstance
androidx.biometric.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1: com.facebook.react.animated.NativeAnimatedModule this$0
com.facebook.react.views.debuggingoverlay.TraceUpdate: int id
androidx.fragment.app.DialogFragment: java.lang.String SAVED_THEME
androidx.biometric.R$style: int Widget_AppCompat_PopupWindow
com.facebook.react.bridge.JSBundleLoader$Companion$createFileLoader$1: boolean $loadSynchronously
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_CENTER
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SLIDINGDRAWER
com.facebook.react.views.text.internal.span.SetSpanOperation: int end
com.google.crypto.tink.proto.AesGcmHkdfStreamingParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow[] $VALUES
com.facebook.react.bridge.ReadableNativeMap$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$layout: int abc_action_mode_close_item_material
com.facebook.react.ReactFragment: java.lang.String ARG_LAUNCH_OPTIONS
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Display2
com.facebook.react.modules.debug.SourceCodeModule: com.facebook.react.modules.debug.SourceCodeModule$Companion Companion
androidx.biometric.R$drawable: int notification_tile_bg
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enableCppPropsIteratorSetterCache
androidx.biometric.R$drawable: int abc_ic_clear_material
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topStart
androidx.biometric.R$dimen: int notification_top_pad
com.facebook.react.views.text.TextAttributeProps: boolean mIncludeFontPadding
com.facebook.react.uimanager.style.ColorEdges: int left
com.google.crypto.tink.proto.AesGcmSivKey: int version_
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType MAGNETIC_FIELD
androidx.biometric.R$style: int Widget_AppCompat_Light_ActionBar
com.facebook.react.uimanager.drawable.BorderDrawable$WhenMappings: int[] $EnumSwitchMapping$0
androidx.biometric.R$attr: int queryHint
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Caption
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
androidx.fragment.app.Fragment: boolean mRestored
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean useAlwaysAvailableJSErrorHandlingCache
com.facebook.react.views.text.ReactBaseTextShadowNode: int mFontWeight
com.facebook.react.views.scroll.OnScrollDispatchHelper: int MIN_EVENT_SEPARATION_MS
androidx.appcompat.widget.SwitchCompat: int mSwitchTop
com.facebook.react.R$id: int use_hardware_layer
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.textinput.ReactTextSelectionWatcher: int previousSelectionStart
com.facebook.react.views.scroll.ReactScrollView$1: boolean mSnappingToPage
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.OnScrollDispatchHelper mOnScrollDispatchHelper
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay mResolvedUnitDisplay
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.facebook.react.views.text.internal.span.SetSpanOperation: java.lang.String TAG
androidx.biometric.R$color: int abc_tint_btn_checkable
androidx.biometric.R$color: int tooltip_background_dark
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_TOP_RIGHT_RADIUS
androidx.biometric.BiometricFragment: int CANCELED_FROM_INTERNAL
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: com.facebook.react.devsupport.FpsView this$0
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] regularGrandfatheredKeys
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task$Companion Companion
androidx.biometric.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage startEnd
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: java.util.Iterator $entrySetIterator
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.proto.AesGcmKeyFormat DEFAULT_INSTANCE
com.swmansion.reanimated.keyboard.WindowsInsetsManager: com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction mNotifyAboutKeyboardChange
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.react.uimanager.TouchTargetHelper: com.facebook.react.uimanager.TouchTargetHelper INSTANCE
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String message
com.facebook.react.util.JSStackTrace: java.lang.String COLUMN_KEY
com.facebook.react.R$id: int invalidate_transform
androidx.biometric.R$styleable: int CompoundButton_buttonCompat
com.facebook.hermes.intl.Constants: java.lang.String LOCALEMATCHER_LOOKUP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_START
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowOffsetDx
com.facebook.react.uimanager.BaseViewManager$1: com.facebook.react.uimanager.BaseViewManager this$0
com.facebook.react.uimanager.style.BoxShadow: java.lang.Integer color
com.facebook.react.views.view.ReactViewGroup: boolean mInSubviewClippingLoop
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics: float height
androidx.fragment.app.Fragment: boolean mBeingSaved
androidx.biometric.R$color: int switch_thumb_normal_material_dark
com.facebook.hermes.intl.Constants: java.lang.String LOCALEMATCHER_BESTFIT
androidx.biometric.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.biometric.R$styleable: int FragmentContainerView_android_name
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_LOAD_PERMISSION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.facebook.react.uimanager.style.ColorEdges: int bottom
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.facebook.react.R$string: int catalyst_open_debugger_error
com.facebook.react.bridge.ReadableNativeArray: kotlin.Lazy localArray$delegate
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style PERCENT
com.facebook.react.animated.NativeAnimatedModule$updateAnimatedNodeConfig$1: int $tag
com.facebook.react.views.text.TextLayoutManager: java.lang.String TAG
com.facebook.hermes.intl.JSObjects: java.lang.Object s_null
com.facebook.react.uimanager.events.Event$eventAnimationDriverMatchSpec$1: com.facebook.react.uimanager.events.Event this$0
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_COLOR
androidx.biometric.R$attr: int colorButtonNormal
androidx.biometric.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.biometric.R$styleable: int AppCompatTheme_searchViewStyle
com.facebook.react.uimanager.ThemedReactContext: int mSurfaceId
com.facebook.react.packagerconnection.ReconnectingWebSocket: okhttp3.OkHttpClient okHttpClient
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream
com.facebook.react.views.textinput.ReactTextInputLocalData: java.lang.CharSequence placeholder
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1: com.facebook.react.bridge.Promise $promise
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal pool
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge VERTICAL
com.facebook.react.ReactInstanceManager$3: com.facebook.react.ReactInstanceManager this$0
com.facebook.react.modules.network.RequestBodyUtil$create$1: okhttp3.MediaType $mediaType
com.facebook.react.views.text.ReactTextView: android.text.TextUtils$TruncateAt mEllipsizeLocation
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean highTextContrastEnabled
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat DEFAULT_INSTANCE
androidx.biometric.R$styleable: int AppCompatTextView_textAllCaps
androidx.biometric.R$styleable: int CompoundButton_android_button
androidx.biometric.R$style: int Widget_AppCompat_ListMenuView
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String text
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.ByteString value_
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.biometric.R$color: int material_grey_850
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.facebook.react.views.modal.ShowEvent: com.facebook.react.views.modal.ShowEvent$Companion Companion
androidx.biometric.R$dimen: int abc_disabled_alpha_material_light
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$1$1: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup $this_run
androidx.biometric.R$id: int on
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType FARTHEST_SIDE
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.lang.reflect.Method getActivityState
com.facebook.react.uimanager.ViewProps: java.lang.String SCREEN_READER_FOCUSABLE
androidx.biometric.R$styleable: int ActionBar_divider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.modules.systeminfo.ReactNativeVersion: com.facebook.react.modules.systeminfo.ReactNativeVersion INSTANCE
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage SORT
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_LOCATIONS
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: android.view.View view
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int surfaceId
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_ADJUST_FONT_SIZE_TO_FIT
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_REMOVE_ANIMATED_EVENT_FROM_VIEW
androidx.biometric.R$styleable: int SearchView_android_focusable
com.facebook.react.animated.ObjectAnimatedNode: com.facebook.react.bridge.JavaOnlyMap configClone
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String BLOCK_MODE_ECB
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int mColor
androidx.biometric.R$style: int Base_V7_Theme_AppCompat
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver viewManagerResolver
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion Companion
androidx.biometric.R$id: int accessibility_custom_action_30
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topLeft
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: float deltaOpacity
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion Companion
com.facebook.react.animated.NativeAnimatedModule$extractAnimatedNodeOffset$1: int $tag
com.facebook.react.R$style: int DialogAnimationFade
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE_CENTER
androidx.biometric.R$color: int abc_decor_view_status_guard
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float offsetY
androidx.biometric.R$anim: int abc_slide_in_top
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchCommitStartTime
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager mReanimatedNativeHierarchyManager
com.facebook.react.animated.SpringAnimation: double timeAccumulator
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ViewGroupManager$Companion Companion
com.facebook.react.common.ShakeDetector: float accelerationZ
com.facebook.react.modules.core.JavaTimerManager: boolean frameIdleCallbackPosted
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mOverflowInset
androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_ALBUMS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$CurrencyDisplay
androidx.biometric.R$attr: int buttonBarButtonStyle
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.FabricEventDispatcher mEventDispatcher
com.facebook.react.views.image.ImageLoadEvent: int ON_ERROR
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String pattern
androidx.biometric.R$style: int Animation_AppCompat_Tooltip
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage$Companion Companion
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long mMarkerTime
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle MEDIUM
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mScrollEnabled
androidx.biometric.BiometricManager$Authenticators: int BIOMETRIC_WEAK
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.ColorEdges computedBorderColors
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: com.facebook.react.uimanager.events.FabricEventDispatcher this$0
androidx.biometric.R$attr: int drawableRightCompat
com.facebook.react.devsupport.DevInternalSettings: boolean isDeviceDebugEnabled
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1: com.facebook.react.modules.network.ProgressRequestBody this$0
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map constants
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.swmansion.reanimated.ReanimatedModule: java.lang.Runnable mUnsubscribe
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableAccessibilityOrderCache
com.rnbiometrics.CreateSignatureCallback: java.lang.String payload
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.facebook.react.views.text.ReactBaseTextShadowNode: int DEFAULT_TEXT_SHADOW_COLOR
com.google.crypto.tink.proto.KeyTemplate: java.lang.String typeUrl_
androidx.biometric.BiometricPrompt: int ERROR_NO_BIOMETRICS
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle SOLID
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.interop.InteropModuleRegistry$Companion Companion
androidx.biometric.R$layout: int abc_search_dropdown_item_icons_2line
com.facebook.react.views.image.ReactImageView: android.graphics.drawable.Drawable loadingImageDrawable
androidx.biometric.R$attr: int drawableLeftCompat
com.facebook.react.uimanager.events.TouchEventType: java.lang.String jsName
com.facebook.react.views.textinput.ReactTextInputLocalData: int maxLines
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion Companion
androidx.biometric.R$attr: int windowFixedWidthMajor
androidx.drawerlayout.widget.DrawerLayout: int MIN_FLING_VELOCITY
com.facebook.react.fabric.FabricUIManager$5: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: int currentIndex
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_LOAD_START
androidx.biometric.R$style: int Base_V22_Theme_AppCompat
com.facebook.react.R$id: int rn_frame_method
androidx.biometric.R$styleable: int SearchView_hideNavigationIcon
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_OFFSET_WIDTH
androidx.biometric.R$dimen: int abc_text_size_headline_material
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.blob.BlobModule$networkingResponseHandler$1 networkingResponseHandler
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jniSignature
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageView$Companion Companion
com.facebook.react.uimanager.JSPointerDispatcher: int UNSET_CHILD_VIEW_ID
com.facebook.react.fabric.mounting.LayoutMetricsConversions: com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion Companion
androidx.biometric.R$styleable: int ActionBar_height
com.google.crypto.tink.proto.AesCtrHmacStreamingKey: com.google.crypto.tink.proto.AesCtrHmacStreamingKey DEFAULT_INSTANCE
com.facebook.react.uimanager.events.TouchEvent: java.lang.String TAG
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage startStart
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: com.facebook.react.animated.TransformAnimatedNode this$0
androidx.biometric.R$styleable: int GradientColorItem_android_offset
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] $VALUES
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path outerClipPathForBorderRadius
androidx.biometric.R$anim: int abc_tooltip_enter
androidx.biometric.R$styleable: int MenuItem_android_alphabeticShortcut
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite unknownFields
androidx.biometric.R$id: int submit_area
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean enablePreparedTextLayoutCache
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.react.devsupport.WindowOverlayCompat: int TYPE_APPLICATION_OVERLAY
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceIdResolver deviceIdResolver
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableSynchronousStateUpdatesCache
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: int mMinTimeLeftInFrameForNonBatchedOperationMs
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] $VALUES
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionButton
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: com.facebook.react.uimanager.ReactAccessibilityDelegate this$0
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager instance
com.facebook.react.fabric.LongStreamingStats: java.util.Queue minHeap
com.facebook.react.ReactFragment: com.facebook.react.ReactDelegate mReactDelegate
com.facebook.react.uimanager.events.EventEmitterImpl: java.lang.String TAG
androidx.biometric.R$style: int TextAppearance_AppCompat_Display2
com.facebook.react.R$string: int scrollbar_description
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] $VALUES
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSLATE_X
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.devsupport.interfaces.RedBoxHandler mRedBoxHandler
com.facebook.react.uimanager.drawable.BackgroundDrawable: boolean needUpdatePath
com.oblador.keychain.cipherStorage.CipherStorageBase$Defaults: com.oblador.keychain.cipherStorage.CipherStorageBase$EncryptStringHandler encrypt
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource bestResultInCache
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager accessibilityManager
com.facebook.react.uimanager.common.UIManagerType$Companion: int LEGACY
androidx.biometric.BiometricPrompt: int ERROR_CANCELED
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.react.fabric.events.EventEmitterWrapper$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.CxxCallbackImpl mEventEmitterCallback
androidx.biometric.R$dimen: int abc_button_padding_vertical_material
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: java.util.HashMap traceUpdatesToDisplayMap
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float FACTOR
com.facebook.hermes.intl.Constants: java.lang.String[] LOCALEMATCHER_POSSIBLE_VALUES
androidx.biometric.BiometricFragment$11: androidx.biometric.BiometricFragment this$0
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
com.facebook.react.fabric.SurfaceHandlerBinding: int NO_SURFACE_ID
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: int last
com.facebook.react.BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1: com.facebook.react.BaseReactPackage this$0
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.RedBoxContentView redBoxContentView
com.facebook.hermes.intl.Collator: com.facebook.hermes.intl.IPlatformCollator$CaseFirst mResolvedCaseFirst
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel SECURE_SOFTWARE
androidx.biometric.R$drawable: int notification_bg_low
androidx.biometric.R$string: int fingerprint_dialog_touch_sensor
androidx.biometric.R$bool: int abc_config_actionMenuItemAllCaps
com.facebook.hermes.intl.UnicodeExtensionKeys: java.util.Map s_calendarAliasMappings
com.facebook.react.views.textinput.ReactTextInputLocalData: int breakStrategy
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.oblador.keychain.KeychainModule$Maps: java.lang.String USERNAME
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION
com.facebook.react.jstasks.HeadlessJsTaskConfig: long timeout
androidx.fragment.app.Fragment: java.lang.String mWho
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_LEAVE_CAPTURE
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean fixMappingOfEventPrioritiesBetweenFabricAndReactCache
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType FRACTION_DIGITS
androidx.biometric.R$attr: int actionBarTabBarStyle
com.facebook.react.views.scroll.ReactScrollView: boolean mDragging
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate $delegate
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.facebook.react.views.textinput.ReactTextScrollWatcher: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
androidx.biometric.R$styleable: int StateListDrawable_android_exitFadeDuration
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Method getCornerRadiiMethod
androidx.biometric.R$styleable: int SwitchCompat_switchMinWidth
androidx.biometric.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mScale
com.facebook.react.packagerconnection.JSPackagerClient: int PROTOCOL_VERSION
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.facebook.react.jstasks.HeadlessJsTaskConfig: boolean isAllowedInForeground
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$CompactDisplay
androidx.biometric.R$attr: int drawableEndCompat
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalTimeMs
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_TOP_RIGHT_RADIUS
androidx.biometric.R$drawable: int abc_textfield_default_mtrl_alpha
com.facebook.react.views.modal.ReactModalHostView: boolean navigationBarTranslucent
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape CIRCLE
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenWidth
com.facebook.hermes.intl.NumberFormat: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation mResolvedNotation
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback mEmojiCompatInitCallback
androidx.biometric.R$style: int Widget_AppCompat_ProgressBar
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
androidx.biometric.R$attr: int fontProviderPackage
androidx.biometric.R$styleable: int MenuView_android_itemBackground
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.facebook.react.views.textinput.ReactTextInputFocusEvent: com.facebook.react.views.textinput.ReactTextInputFocusEvent$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TIMER
com.facebook.react.views.view.ReactViewGroup$2: int[] $SwitchMap$com$facebook$react$uimanager$style$Overflow
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$attr: int firstBaselineToTopHeight
androidx.biometric.R$style: int Base_Widget_AppCompat_EditText
com.facebook.react.uimanager.ViewProps: java.lang.String COLLAPSABLE_CHILDREN
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.StateWrapper stateWrapper
androidx.biometric.R$integer: int cancel_button_image_alpha
androidx.biometric.R$styleable: int FontFamilyFont_fontVariationSettings
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
androidx.biometric.R$styleable: int TextAppearance_android_textColor
androidx.biometric.R$styleable: int[] ViewStubCompat
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LAYOUT_DIRECTION
androidx.biometric.R$styleable: int[] LinearLayoutCompat_Layout
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CLICK
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] $VALUES
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneConnectionReceiver
com.facebook.react.views.text.internal.span.CustomStyleSpan: android.content.res.AssetManager assetManager
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: int COMMAND_FLASH_SCROLL_INDICATORS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsProfilingNextBatch
com.google.crypto.tink.proto.Keyset$Key: int STATUS_FIELD_NUMBER
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer$Companion Companion
androidx.biometric.R$id: int accessibility_custom_action_21
com.facebook.react.BuildConfig: boolean UNSTABLE_ENABLE_MINIFY_LEGACY_ARCHITECTURE
com.facebook.react.modules.core.JavaTimerManager: int TIMER_QUEUE_CAPACITY
androidx.biometric.R$style: int Base_V7_Theme_AppCompat_Light
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
androidx.biometric.R$styleable: int AppCompatTheme_actionModeTheme
com.facebook.react.BuildConfig: boolean ENABLE_PERFETTO
com.facebook.react.util.RNLog: int WARN
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
androidx.biometric.R$attr: int actionBarStyle
androidx.biometric.R$styleable: int SearchView_voiceIcon
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
androidx.biometric.BiometricViewModel: boolean mIsConfirmingDeviceCredential
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.runtime.ReactSurfaceView: int heightMeasureSpec
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_END_START_RADIUS
androidx.biometric.R$id: int search_badge
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_ENTER_CAPTURE
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String text
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useRawPropsJsiValueCache
com.facebook.react.modules.devloading.DevLoadingModule: java.lang.String NAME
androidx.biometric.R$dimen: int abc_button_padding_horizontal_material
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String CLICK
androidx.biometric.R$id: int action_menu_divider
com.facebook.react.modules.network.RequestBodyUtil$create$1: java.io.InputStream $inputStream
androidx.biometric.R$style: int TextAppearance_AppCompat_Display4
androidx.biometric.R$attr: int windowActionBar
com.facebook.react.runtime.ReactLifecycleStateManager$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String text
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String POINTER_IDENTIFIER_KEY
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.facebook.react.views.text.DefaultStyleValuesUtil: com.facebook.react.views.text.DefaultStyleValuesUtil INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
androidx.biometric.R$color: int button_material_dark
androidx.biometric.R$styleable: int ButtonBarLayout_allowStacking
androidx.biometric.R$styleable: int SearchView_animateNavigationIcon
com.facebook.react.views.text.TextAttributeProps: boolean mIsUnderlineTextDecorationSet
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int totalExpectedFrames
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String NUMERINGSYSTEM
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int holderCount
androidx.biometric.R$drawable: int btn_radio_off_to_on_mtrl_animation
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
androidx.biometric.R$attr: int overlapAnchor
androidx.biometric.R$drawable: int abc_ic_go_search_api_material
androidx.biometric.R$id: int accessibility_custom_action_28
androidx.biometric.R$drawable: int abc_item_background_holo_dark
com.swmansion.reanimated.NodesManager: java.util.List mFrameCallbacks
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method handleErrorFunc
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: com.facebook.react.devsupport.DevSupportManagerBase this$0
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay NAME
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: com.facebook.react.uimanager.ReactStylesDiffMap mProps
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingSubviewCountMap
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_ENTER
androidx.biometric.R$styleable: int[] TextAppearance
androidx.biometric.R$styleable: int Toolbar_titleMarginBottom
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.util.Set measured
com.facebook.react.views.text.internal.span.ReactClickableSpan: int reactTag
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget mInspectorTarget
com.facebook.react.uimanager.ReactAccessibilityDelegate: int TIMEOUT_SEND_ACCESSIBILITY_EVENT
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.ReadableMapBuffer this$0
com.facebook.react.R$id: int button_text
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.facebook.hermes.intl.DateTimeFormat: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle mHourCycle
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType SIGNIFICANT_DIGITS
com.facebook.react.views.text.ReactTextView: float mMinimumFontSize
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int CONTINUOUS
com.facebook.react.common.ShakeDetectorKt: long MIN_TIME_BETWEEN_SAMPLES_NS
com.facebook.react.common.ReactConstants: int UNSET
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.os.Handler mHandler
com.facebook.react.devsupport.BundleDownloader: okhttp3.OkHttpClient client
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec jSQueueThreadSpec
androidx.appcompat.widget.SwitchCompat: int mSwitchBottom
androidx.biometric.R$styleable: int ActionBar_contentInsetEnd
androidx.biometric.FingerprintDialogFragment$2: androidx.biometric.FingerprintDialogFragment this$0
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec mEventAnimationDriverMatchSpec
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String NAME
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_HORIZONTAL
com.oblador.keychain.KeychainModule: com.oblador.keychain.PrefsStorage prefsStorage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
androidx.biometric.R$color: int secondary_text_disabled_material_light
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String DEFAULT_SERVICE
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrKey DEFAULT_INSTANCE
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler cookieHandler
androidx.biometric.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: int nodeTag
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
androidx.biometric.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.crypto.tink.proto.AesCtrParams: int ivSize_
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableNativeMap extraData
com.google.crypto.tink.proto.AesGcmHkdfStreamingKey: int version_
com.facebook.react.animated.TrackingAnimatedNode: int animationId
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage SEARCH
com.nozbe.watermelondb.WMDatabaseBridge: com.facebook.react.bridge.ReactApplicationContext reactContext
androidx.biometric.R$drawable: int notification_bg
com.facebook.react.devsupport.WindowOverlayCompat: int TYPE_SYSTEM_OVERLAY
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_HORIZONTAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.facebook.react.R$integer: int react_native_dev_server_port
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$highTextContrastObserver$1: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule this$0
com.facebook.hermes.intl.PlatformCollatorAndroid$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformCollator$Sensitivity
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.swmansion.reanimated.BuildConfig: boolean DEBUG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.uimanager.ViewManagerRegistry$1: com.facebook.react.uimanager.ViewManagerRegistry this$0
androidx.biometric.R$dimen: int notification_action_text_size
androidx.biometric.R$attr: int colorBackgroundFloating
androidx.biometric.R$dimen: int abc_dialog_corner_radius_material
androidx.biometric.R$attr: int ratingBarStyleSmall
com.facebook.hermes.reactexecutor.HermesExecutor: java.lang.String mode
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.facebook.hermes.intl.NumberFormat: java.lang.String mResolvedUnit
com.swmansion.reanimated.keyboard.WindowsInsetsManager: java.lang.String MissingContextErrorMsg
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_EVENT_EMITTER
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole mAccessibilityRole
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.bridge.ReadableMap headers
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
androidx.biometric.R$dimen: int abc_seekbar_track_background_height_material
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$ReactRootViewEventListener mRootViewEventListener
androidx.biometric.R$styleable: int MenuItem_android_checked
androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS
androidx.biometric.R$attr: int listPreferredItemPaddingRight
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String NAME
com.oblador.keychain.KeychainModuleBuilder: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int commitNumber
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.proto.AesSivKey DEFAULT_INSTANCE
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: java.lang.String NAME
com.facebook.react.devsupport.DebugOverlayController: com.facebook.react.bridge.ReactContext reactContext
androidx.biometric.R$styleable: int MenuView_android_headerBackground
androidx.biometric.R$id: int select_dialog_listview
com.facebook.react.animated.DecayAnimation: double velocity
com.facebook.react.uimanager.ViewProps: java.lang.String ALIGN_CONTENT
com.facebook.react.views.modal.RequestCloseEvent: com.facebook.react.views.modal.RequestCloseEvent$Companion Companion
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: int NORMAL
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] perspective
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate delegate
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst LOWER
androidx.biometric.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
androidx.biometric.BiometricPrompt$AuthenticationResult: int mAuthenticationType
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String SOFT_ASSERTIONS
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int KEY_ID_FIELD_NUMBER
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.ReaCompatibility compatibility
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: int mStableFrames
com.facebook.react.ReactInstanceManagerBuilder: java.util.Map mCustomPackagerCommandHandlers
androidx.biometric.R$id: int search_close_btn
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era UNDEFINED
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: java.lang.String PARAM_SPRING_DAMPING
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean isBatchEdit
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
com.facebook.react.ReactAndroidHWInputDeviceHelper: com.facebook.react.ReactRootView reactRootView
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener globalImageLoadListener
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence mDescription
com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils: java.util.List highlightPaths
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler handler
androidx.security.crypto.EncryptedSharedPreferences: com.google.crypto.tink.Aead mValueAead
com.facebook.react.animated.SpringAnimation: int iterations
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: double value
com.facebook.react.R$id: int role
androidx.biometric.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.biometric.R$style: int TextAppearance_AppCompat_Body2
androidx.biometric.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.biometric.R$attr: int listChoiceBackgroundIndicator
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager$Companion Companion
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: com.google.crypto.tink.proto.AesCtrHmacStreamingParams DEFAULT_INSTANCE
androidx.appcompat.widget.SwitchCompat: int MONOSPACE
com.facebook.react.R$string: int progressbar_description
androidx.biometric.R$styleable: int MenuGroup_android_id
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mContainsImages
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean touchExplorationEnabled
androidx.biometric.R$styleable: int AppCompatTheme_buttonBarStyle
androidx.biometric.R$dimen: int abc_dialog_fixed_width_minor
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap$Companion Companion
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: int position
com.swmansion.reanimated.layoutReanimation.Snapshot: int height
com.facebook.react.R$color: int catalyst_redbox_background
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int CONTINUOUS_START
com.oblador.keychain.KeychainModule$Errors: java.lang.String E_UNKNOWN_ERROR
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextSelectionWatcher: int surfaceId
androidx.biometric.R$styleable: int[] View
androidx.biometric.R$dimen: int abc_text_size_menu_header_material
androidx.biometric.R$styleable: int TextAppearance_android_textColorHint
androidx.biometric.R$style: int Base_Widget_AppCompat_Spinner
com.facebook.hermes.intl.DateTimeFormat: java.lang.String mCalendar
com.oblador.vectoricons.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.runtime.ReactSurfaceImpl$Companion Companion
androidx.biometric.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.facebook.react.devsupport.PackagerStatusCheck: int HTTP_CONNECT_TIMEOUT_MS
com.facebook.react.animated.NativeAnimatedNodesManager: int animatedGraphBFSColor
androidx.security.crypto.EncryptedSharedPreferences$Editor: androidx.security.crypto.EncryptedSharedPreferences mEncryptedSharedPreferences
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: int IV_LENGTH
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String NAME
androidx.biometric.R$styleable: int[] AnimatedStateListDrawableItem
com.facebook.react.R$id: int view_tag_native_id
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig config
com.facebook.react.animated.FrameBasedAnimationDriver: com.facebook.react.animated.FrameBasedAnimationDriver$Companion Companion
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$Style
com.facebook.hermes.intl.PlatformCollatorAndroid: boolean $assertionsDisabled
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.blob.BlobModule$webSocketContentHandler$1 webSocketContentHandler
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEventType scrollEventType
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String style
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mAdjustsFontSizeToFit
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State Init
com.facebook.react.animated.AnimationDriver: int id
com.facebook.react.uimanager.NativeKind: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$Companion Companion
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int reactTag
com.swmansion.reanimated.sensor.ReanimatedSensorListener: com.swmansion.reanimated.nativeProxy.SensorSetter setter
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion Companion
com.facebook.react.devsupport.DevServerHelper$closeInspectorConnection$1: com.facebook.react.devsupport.DevServerHelper this$0
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String LOW_POWER_MODE
androidx.biometric.R$styleable: int GradientColor_android_type
androidx.biometric.R$style: int Platform_V21_AppCompat_Light
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingChildHelper mNestedScrollingChildHelper
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_SOURCE_TYPE
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchCommitEndTime
com.facebook.react.modules.intent.IntentModule: com.facebook.react.modules.intent.IntentModule$Companion Companion
com.reactnativecommunity.asyncstorage.SerialExecutor: java.lang.Runnable mActive
androidx.biometric.R$styleable: int SwitchCompat_switchPadding
androidx.biometric.R$styleable: int Toolbar_logo
com.facebook.react.modules.network.OkHttpClientProvider: com.facebook.react.modules.network.OkHttpClientFactory factory
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] $VALUES
androidx.biometric.R$dimen: int tooltip_y_offset_non_touch
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$2: com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener $commandListener
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.google.crypto.tink.proto.AesEaxKeyFormat: int PARAMS_FIELD_NUMBER
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$attr: int spinBars
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point finalAnimatedPositionScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mTouchSlop
androidx.biometric.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.swmansion.reanimated.CopiedEvent: int targetTag
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaConfig sYogaConfig
com.facebook.hermes.intl.Constants: java.lang.String[] CASEFIRST_POSSIBLE_VALUES
androidx.biometric.R$string: int abc_shareactionprovider_share_with_application
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
androidx.biometric.R$color: int bright_foreground_disabled_material_light
androidx.appcompat.widget.SwitchCompat: int SERIF
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.uimanager.ShadowNodeRegistry$Companion Companion
com.facebook.react.uimanager.Spacing: int HORIZONTAL
androidx.biometric.R$attr: int title
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle DASHED
com.facebook.react.R$anim: int catalyst_fade_in
androidx.biometric.R$dimen: int tooltip_y_offset_touch
androidx.biometric.R$string: int fingerprint_not_recognized
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object timerGuard
androidx.biometric.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.facebook.react.R$string: int catalyst_copy_button
com.facebook.react.devsupport.interfaces.ErrorType: java.lang.String displayName
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: boolean shouldStop
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.modules.image.ImageLoaderModule$getSize$dataSubscriber$1: com.facebook.react.bridge.Promise $promise
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver contentResolver
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: float mDefaultValue
androidx.biometric.R$id: int listMode
androidx.biometric.R$styleable: int TextAppearance_textLocale
com.facebook.react.runtime.ReactSurfaceView: java.lang.String TAG
com.facebook.react.R$string: int catalyst_change_bundle_location_instructions
com.google.crypto.tink.proto.AesCtrHmacStreamingParams: int HMAC_PARAMS_FIELD_NUMBER
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
com.facebook.jni.HybridData$Destructor: long mNativePointer
androidx.biometric.BiometricPrompt: int ERROR_USER_CANCELED
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] regularGrandfatheredReplacements
androidx.biometric.R$styleable: int MenuGroup_android_enabled
androidx.biometric.R$styleable: int TextAppearance_android_textColorLink
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType DISPATCH_UI
androidx.biometric.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: int mTag
com.facebook.react.uimanager.style.LinearGradient: com.facebook.react.uimanager.style.LinearGradient$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_WIDTH
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: java.io.File $outputFile
androidx.biometric.R$dimen: int notification_large_icon_width
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$KeyScheme mKeyScheme
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextTransform mTextTransform
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: java.lang.String $responseType
androidx.biometric.R$style: int Widget_AppCompat_ListView_Menu
androidx.biometric.R$styleable: int Toolbar_logoDescription
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawableKt: int MIN_OUTSET_BOX_SHADOW_SDK_VERSION
com.facebook.react.modules.network.NetworkingModule: java.util.List requestBodyHandlers
androidx.biometric.R$styleable: int[] FragmentContainerView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
androidx.biometric.R$attr: int tint
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName LONGGENERIC
com.facebook.react.uimanager.ReactRootViewTagGenerator: int nextRootViewTag
com.facebook.react.views.drawer.ReactDrawerLayout: boolean dragging
androidx.biometric.R$attr: int listPreferredItemPaddingLeft
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map CLASS_PROPS_CACHE
androidx.security.crypto.EncryptedFile: java.lang.String KEYSET_ALIAS
com.facebook.react.R$string: int timer_description
com.facebook.react.devsupport.ChangeBundleLocationDialog: com.facebook.react.devsupport.ChangeBundleLocationDialog INSTANCE
androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect
com.facebook.react.R$string: int catalyst_report_button
com.facebook.react.views.scroll.VelocityHelper: float yVelocity
androidx.biometric.R$color: int bright_foreground_disabled_material_dark
androidx.biometric.R$attr: int trackTint
com.facebook.react.modules.core.ReactChoreographer: boolean hasPostedCallback
androidx.biometric.R$id: int text
androidx.biometric.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.facebook.react.animated.SpringAnimation: com.facebook.react.animated.SpringAnimation$Companion Companion
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task TASK_FALSE
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jsiReturnKind
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_PICS_DIRECTORY
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: com.facebook.react.bridge.Callback callback
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
androidx.appcompat.widget.SwitchCompat: java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ContentSizeWatcher contentSizeWatcher
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.uimanager.util.ReactFindViewUtil: java.util.Map onMultipleViewsFoundListener
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_LABELLED_BY
androidx.biometric.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.biometric.R$styleable: int SearchView_android_inputType
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesCmacKey: int VERSION_FIELD_NUMBER
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String name
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mAncestorsToRemove
com.facebook.react.LazyReactPackage$1: int position
androidx.biometric.R$id: int accessibility_custom_action_15
com.facebook.hermes.intl.IPlatformNumberFormatter$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformNumberFormatter$SignDisplay
com.facebook.react.devsupport.DevSupportManagerBase$devSettings$1: com.facebook.react.devsupport.DevSupportManagerBase this$0
com.facebook.react.ReactInstanceManagerBuilder: int mMinNumShakes
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mDisableIntervalMomentum
androidx.biometric.BiometricPrompt: int ERROR_HW_NOT_PRESENT
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float offsetX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
androidx.biometric.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SEARCH
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm JSC
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enablePropsUpdateReconciliationAndroidCache
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] $VALUES
androidx.biometric.R$styleable: int AlertDialog_listItemLayout
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String GAP
com.facebook.react.uimanager.TouchTargetHelper$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIALIZE
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.views.text.PreparedLayoutTextView: java.util.List clickableSpans
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$1: com.facebook.react.HeadlessJsTaskService this$0
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_OPTION_IGNOREPUNCTUATION
com.facebook.hermes.reactexecutor.HermesExecutorFactory: boolean enableDebugger
com.facebook.react.ReactFragment$Builder: java.lang.String mComponentName
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole PROGRESSBAR
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: boolean mIsPosted
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ADJUSTABLE
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType CANCEL
com.facebook.react.internal.interop.InteropEvent: com.facebook.react.internal.interop.InteropEvent$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: boolean mDefaultValue
androidx.biometric.R$id: int italic
com.facebook.react.runtime.ReactHostImpl: int BRIDGELESS_MARKER_INSTANCE_KEY
androidx.biometric.R$styleable: int AppCompatTextView_drawableLeftCompat
com.facebook.react.uimanager.common.ViewUtil: com.facebook.react.uimanager.common.ViewUtil INSTANCE
com.mkuczera.RNReactNativeHapticFeedbackModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.runtime.ReactHostImpl$3: java.lang.String val$bundleURL
androidx.biometric.R$style: int Widget_AppCompat_Spinner
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$show$2: com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate this$0
com.facebook.react.packagerconnection.FileIoHandler: int nextHandle
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int numRetries
com.facebook.react.views.textinput.ReactTextInputShadowNode: int mostRecentEventCount
androidx.biometric.R$drawable: int abc_popup_background_mtrl_mult
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.bridge.ReadableNativeArray$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference nodesManagerRef
com.facebook.hermes.intl.Constants: java.lang.String COLLATION_OPTION_CASEFIRST
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName UNDEFINED
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DOWN
com.facebook.react.uimanager.style.ColorStop: java.lang.Integer color
androidx.biometric.FingerprintDialogFragment: int mNormalTextColor
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: int val$tag
androidx.biometric.R$color: int primary_text_default_material_dark
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.google.crypto.tink.proto.KeyTypeEntry: boolean newKeyAllowed_
com.facebook.react.views.image.ReactImageView: android.graphics.drawable.Drawable defaultImageDrawable
androidx.biometric.R$id: int action_bar_root
com.swmansion.rnscreens.ScreensModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.modules.core.ExceptionsManagerModule$Companion Companion
androidx.biometric.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.facebook.react.animated.AnimatedNode: int activeIncomingNodes
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: com.facebook.crypto.Crypto crypto
com.facebook.react.uimanager.events.TouchEvent: float viewY
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: int COMMAND_SCROLL_TO
com.facebook.react.views.modal.ReactModalHostView: boolean statusBarTranslucent
com.facebook.react.uimanager.annotations.ReactProp: java.lang.String USE_DEFAULT_TYPE
com.facebook.react.BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1: com.facebook.react.bridge.ReactApplicationContext $reactContext$inlined
com.facebook.react.uimanager.UIImplementation$1: com.facebook.react.uimanager.ReactShadowNode val$rootCSSNode
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DIALOG
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isInvalidated
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int HEADER_SIZE
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout
androidx.biometric.R$attr: int listChoiceIndicatorMultipleAnimated
androidx.biometric.R$style: int Platform_V25_AppCompat
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.uimanager.ViewDefaults: float FONT_SIZE_SP
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: java.lang.ref.WeakReference firstVisibleViewRef
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.config.ReactFeatureFlags: com.facebook.react.config.ReactFeatureFlags INSTANCE
androidx.fragment.app.DialogFragment: androidx.lifecycle.Observer mObserver
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.uimanager.JSTouchDispatcher: int mTargetTag
androidx.biometric.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType$Companion Companion
com.facebook.react.R$id: int accessibility_role
androidx.biometric.R$styleable: int GradientColor_android_endColor
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String HIGH_TEXT_CONTRAST_EVENT_NAME
androidx.biometric.R$styleable: int SwitchCompat_showText
com.facebook.react.packagerconnection.ReconnectingWebSocket: long RECONNECT_DELAY_MS
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int ALIGNMENT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.views.imagehelper.ImageSource$Companion Companion
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
androidx.biometric.R$id: int line1
androidx.biometric.R$id: int text2
com.facebook.react.modules.network.ForwardingCookieHandler: java.lang.String VERSION_ZERO_HEADER
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MATH
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$InternalKeyListener keyListener$1
com.facebook.react.uimanager.JSTouchDispatcher: float[] mTargetCoordinates
androidx.biometric.R$attr: int drawableSize
com.facebook.react.runtime.BindingsInstaller: com.facebook.react.runtime.BindingsInstaller$Companion Companion
com.facebook.react.views.text.TextAttributes: float mLineHeight
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: int mReactTag
androidx.biometric.R$dimen: int abc_seekbar_track_progress_height_material
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isFinished
com.rnbiometrics.SimplePromptCallback: com.facebook.react.bridge.Promise promise
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType STRING
com.facebook.react.runtime.ReactInstance$ReactJsExceptionHandlerImpl: com.facebook.react.runtime.ReactInstance this$0
com.facebook.react.modules.core.ReactChoreographer: java.util.ArrayDeque[] callbackQueues
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaOnlyArray$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.devsupport.DevSupportManagerBase: java.util.LinkedHashMap customDevOptions
com.facebook.react.modules.dialog.AlertFragment$Companion$getAccessibleTitle$1: android.widget.TextView $accessibleTitle
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int VERSION_FIELD_NUMBER
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: com.facebook.react.runtime.internal.bolts.Task task
com.facebook.react.animated.MultiplicationAnimatedNode: com.facebook.react.animated.NativeAnimatedNodesManager nativeAnimatedNodesManager
androidx.biometric.R$color: int accent_material_dark
androidx.biometric.R$attr: int closeIcon
com.facebook.react.ReactInstanceManager: boolean mUseFallbackBundle
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents BOX_NONE
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole LINK
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage endStart
com.facebook.react.uimanager.JSPointerDispatcher: int mLastButtonState
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.facebook.react.fabric.mounting.SurfaceMountingManager: int mSurfaceId
com.facebook.react.views.text.ReactTextShadowNode: boolean mShouldNotifyOnTextLayout
androidx.biometric.R$color: int highlighted_text_material_dark
androidx.biometric.R$string: int fingerprint_error_hw_not_present
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: java.lang.String $responseType
com.facebook.react.views.text.ReactBaseTextShadowNode: float mMinimumFontScale
com.facebook.react.uimanager.drawable.OutlineDrawable: float outlineWidth
com.google.crypto.tink.proto.Keyset$Key: int keyId_
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule module
com.facebook.react.HeadlessJsTaskService: java.util.Set activeTasks
androidx.biometric.R$style: int Base_Widget_AppCompat_ListMenuView
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_TOP_RIGHT_RADIUS
com.facebook.imagepipeline.request.ImageRequest: boolean mLoadThumbnailOnly
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchNonBatchedExecutionTime
com.facebook.react.fabric.FabricUIManager: java.util.Set mSynchronousEvents
androidx.biometric.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.nozbe.watermelondb.Connection$Waiting: java.util.ArrayList queueInWaiting
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path pathForOutline
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerBottomLeftCorner
androidx.biometric.R$style: int Widget_AppCompat_Spinner_Underlined
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessAtomicRef mBridgelessReactContextRef
androidx.biometric.R$attr: int preserveIconSpacing
com.oblador.keychain.cipherStorage.CipherStorageBase: int BUFFER_READ_WRITE_SIZE
androidx.biometric.R$dimen: int abc_action_bar_overflow_padding_end_material
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
androidx.biometric.R$attr: int expandActivityOverflowButtonDrawable
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: java.lang.Throwable error
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.JSPointerDispatcher jSPointerDispatcher
androidx.biometric.R$styleable: int ActionMode_background
androidx.biometric.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIAL_LAYOUT
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: com.facebook.yoga.YogaUnit unit
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.facebook.react.packagerconnection.ReconnectingWebSocket: java.lang.String url
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String STATE_CHECKED
com.facebook.react.views.view.ReactViewGroup: boolean mBackfaceVisible
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: long batchNumber
com.oblador.vectoricons.BuildConfig: boolean DEBUG
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.facebook.hermes.intl.PlatformDateTimeFormatterICU$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$DateStyle
androidx.biometric.R$styleable: int Toolbar_titleMarginStart
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle[] $VALUES
androidx.biometric.R$styleable: int AppCompatTheme_colorPrimary
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: int scrollAwayPaddingTop
com.facebook.react.devsupport.inspector.InspectorNetworkHelper: okhttp3.OkHttpClient client
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowRadius
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.facebook.react.uimanager.drawable.BorderDrawable: float gapBetweenPaths
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_SIZE
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String name
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.uimanager.DisplayMetricsHolder INSTANCE
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: com.facebook.react.bridge.Callback val$callback
com.facebook.hermes.intl.LocaleObjectAndroid: boolean mIsDirty
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.RectF backgroundRect
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost reactHost
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_DISCONNECT_ANIMATED_NODES
com.facebook.react.modules.dialog.AlertFragment: java.lang.String ARG_MESSAGE
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder moduleHolder
androidx.biometric.R$attr: int progressBarStyle
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TABLIST
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.bridge.ReadableMap mConfig
androidx.biometric.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TIMESTAMP_KEY
androidx.biometric.BiometricViewModel: int mFingerprintDialogPreviousState
androidx.biometric.R$style: int TextAppearance_Compat_Notification_Line2
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String SELECTION_BUCKET
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
androidx.biometric.R$styleable: int ColorStateListItem_android_alpha
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mStartingScale
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.biometric.R$attr: int tickMark
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel
androidx.biometric.R$style: int ThemeOverlay_AppCompat_Dialog
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] $VALUES
androidx.biometric.R$id: int title
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.modules.share.ShareModule: com.facebook.react.modules.share.ShareModule$Companion Companion
com.google.crypto.tink.proto.AesSivKeyFormat: int keySize_
com.facebook.react.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes OP_CODE_ADD_LISTENER
androidx.biometric.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
androidx.biometric.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: com.facebook.react.reactperflogger.NativeModulePerfLogger nativeModulePerfLogger
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
androidx.biometric.R$attr: int dropdownListPreferredItemHeight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.R$string: int catalyst_perf_monitor_stop
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.devsupport.StackTraceHelper: java.lang.String ID_KEY
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage bottom
androidx.biometric.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.facebook.react.animated.NativeAnimatedNodesManager: java.util.List eventDrivers
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: com.facebook.react.devsupport.DevSupportManagerBase this$0
androidx.biometric.R$layout: int notification_action
androidx.appcompat.widget.SwitchCompat: int mSwitchPadding
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$Companion Companion
com.facebook.react.animated.SpringAnimation: double springMass
com.nozbe.watermelondb.MigrationNeededError: int databaseVersion
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_HIGH_TEXT_CONTRAST_ENABLED_CONSTANT
com.facebook.react.views.text.TextAttributeProps: int mFontSize
androidx.biometric.BiometricManager: int BIOMETRIC_ERROR_HW_UNAVAILABLE
com.facebook.react.uimanager.UIImplementation: java.lang.Object uiImplementationThreadLock
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED
com.facebook.react.module.model.ReactModuleInfo: com.facebook.react.module.model.ReactModuleInfo$Companion Companion
com.facebook.react.uimanager.PixelUtil: com.facebook.react.uimanager.PixelUtil INSTANCE
com.facebook.react.ReactDelegate: com.facebook.react.devsupport.DoubleTapReloadRecognizer mDoubleTapReloadRecognizer
com.facebook.react.uimanager.ViewProps: java.lang.String ENABLED
androidx.biometric.R$attr: int activityChooserViewStyle
com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier: java.lang.String languageSubtag
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.hermes.intl.PlatformDateTimeFormatterICU$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformDateTimeFormatter$TimeStyle
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation$Companion Companion
io.invertase.firebase.common.ReactNativeFirebaseModule: io.invertase.firebase.common.TaskExecutorService executorService
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.bridge.ReactContext reactContext
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.bridge.ReactContext reactContext
androidx.biometric.R$dimen: int notification_content_margin_start
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents$Companion Companion
com.facebook.react.ReactActivityDelegate: android.app.Activity mActivity
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
com.facebook.react.uimanager.ReactStage: int ON_ATTACH_TO_INSTANCE
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String COLOR_OUTPUT_TYPE
androidx.biometric.R$attr: int showAsAction
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_BEST_WRITING_DIRECTION
androidx.biometric.R$dimen: int notification_small_icon_background_padding
androidx.biometric.R$string: int abc_menu_ctrl_shortcut_label
com.facebook.react.bridge.NativeMap: com.facebook.react.bridge.NativeMap$Companion Companion
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_LAYOUT
com.google.crypto.tink.proto.AesGcmKeyFormat: int KEY_SIZE_FIELD_NUMBER
androidx.biometric.R$attr: int drawableStartCompat
androidx.biometric.R$styleable: int[] AppCompatTheme
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.blob.BlobModule$networkingUriHandler$1 networkingUriHandler
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String VERSION_TABLE_CREATE
com.facebook.react.jstasks.HeadlessJsTaskContext: com.facebook.react.jstasks.HeadlessJsTaskContext$Companion Companion
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion Companion
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder mTMMDelegateBuilder
androidx.biometric.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_VISIBLE
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.UIManager mUIManager
com.facebook.react.R$style: int Animation_Catalyst_LogBox
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.uimanager.YogaNodePool INSTANCE
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] $VALUES
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.react.bridge.ReadableMap headers
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mRefreshing
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour NUMERIC
androidx.appcompat.widget.AppCompatTextView: boolean mIsSetTypefaceProcessing
com.facebook.react.animated.EventAnimationDriver: int viewTag
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: com.facebook.react.bridge.ReadableArray val$keys
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: kotlin.enums.EnumEntries $ENTRIES
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType[] $VALUES
androidx.biometric.R$styleable: int ActionBar_titleTextStyle
androidx.biometric.R$styleable: int MenuView_android_horizontalDivider
com.rnbiometrics.ReactNativeBiometrics$2: com.facebook.react.bridge.Promise val$promise
com.facebook.react.animated.SpringAnimation: double startValue
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.lang.String BUBBLING_EVENTS_KEY
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder$Companion Companion
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String _url
androidx.biometric.R$dimen: int abc_action_bar_overflow_padding_start_material
androidx.biometric.R$attr: int popupWindowStyle
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: java.lang.String KEY_COLUMN
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
androidx.biometric.R$attr: int autoSizePresetSizes
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: boolean callbackConsumed
com.facebook.hermes.intl.LanguageTagsGenerated: java.lang.String[] languageAliasReplacements2
com.facebook.react.R$style: int Theme_Catalyst_RedBox
com.facebook.react.uimanager.events.TouchEvent: float viewX
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap$Companion Companion
com.facebook.react.jstasks.NoRetryPolicy: com.facebook.react.jstasks.NoRetryPolicy INSTANCE
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: com.reactnativecommunity.asyncstorage.AsyncStorageModule this$0
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String COLLATION_CASEFIRST_CANON
androidx.biometric.R$styleable: int MenuGroup_android_visible
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
androidx.biometric.R$styleable: int AppCompatTextView_emojiCompatEnabled
com.rnbiometrics.BuildConfig: boolean DEBUG
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX
com.facebook.react.views.text.ReactTextShadowNode: com.facebook.yoga.YogaBaselineFunction mTextBaselineFunction
com.facebook.react.views.scroll.OnScrollDispatchHelper: com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: int val$parentTag
com.facebook.react.common.assets.ReactFontManager: java.lang.String FONTS_ASSET_PATH
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.jni.HybridData mHybridData
androidx.biometric.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentageType type
com.facebook.react.modules.dialog.AlertFragment: com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener listener
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String NAME
androidx.biometric.R$styleable: int LinearLayoutCompat_showDividers
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle[] $VALUES
androidx.biometric.R$string: int abc_menu_meta_shortcut_label
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean incorporateMaxLinesDuringAndroidLayoutCache
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Queue mOnViewAttachMountItems
com.facebook.react.views.text.ReactBaseTextShadowNode: int mBackgroundColor
com.facebook.react.fabric.LongStreamingStats: long max
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.ReactInstanceManagerBuilder: boolean mRequireActivity
com.facebook.react.uimanager.RootViewUtil: com.facebook.react.uimanager.RootViewUtil INSTANCE
com.facebook.react.views.image.ReactImageView: int overlayColor
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String NUMERINGSYSTEM_CANON
androidx.biometric.R$styleable: int ActionBarLayout_android_layout_gravity
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String NAME
com.facebook.hermes.intl.PlatformCollatorICU: android.icu.text.RuleBasedCollator mCollator
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String NAME
androidx.biometric.R$style: int Base_Animation_AppCompat_Tooltip
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String STATE_SELECTED
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_TEXT_BREAK_STRATEGY
androidx.biometric.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.biometric.R$attr: int navigationIcon
com.facebook.react.common.ShakeDetector: int numShakes
com.google.crypto.tink.proto.KeyTemplate: int TYPE_URL_FIELD_NUMBER
androidx.biometric.R$styleable: int ActionBar_progressBarStyle
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SLIDER
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion Companion
com.facebook.react.ReactRootView: com.facebook.react.uimanager.JSPointerDispatcher mJSPointerDispatcher
androidx.biometric.R$style: int Theme_AppCompat_Light
com.facebook.imagepipeline.request.ImageRequest: int mHashcode
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean animatedShouldSignalBatchCache
com.facebook.react.views.textinput.ReactEditText: int fontStyle
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: int shadowColor
com.google.crypto.tink.proto.AesGcmKey: int VERSION_FIELD_NUMBER
androidx.biometric.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.facebook.react.views.drawer.ReactDrawerLayout: com.facebook.react.views.drawer.ReactDrawerLayout$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_START_RADIUS
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: com.facebook.react.fabric.FabricUIManager this$0
androidx.biometric.R$dimen: int abc_floating_window_z
com.facebook.react.packagerconnection.ReconnectingWebSocket: boolean closed
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mTempRect
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.SensorManager sensorManager
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback animatedFrameCallback
androidx.biometric.R$color: int bright_foreground_material_light
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole PAGER
com.facebook.react.internal.AndroidChoreographerProvider$AndroidChoreographer: android.view.Choreographer instance
com.facebook.react.ReactFragment$Builder: android.os.Bundle mLaunchOptions
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.oblador.keychain.KeychainModule$AuthPromptOptions: java.lang.String TITLE
com.facebook.hermes.intl.DateTimeFormat: java.lang.Object mHour12
androidx.biometric.R$id: int icon
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
androidx.biometric.R$dimen: int abc_control_corner_material
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
androidx.biometric.R$styleable: int SwitchCompat_trackTint
com.facebook.react.R$style: int CalendarDatePickerStyle
com.facebook.react.animated.ColorAnimatedNode: int aNodeId
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy mNativeProxy
com.facebook.react.uimanager.ReactShadowNodeImpl: java.util.ArrayList mChildren
androidx.biometric.R$dimen: int abc_text_size_body_2_material
com.facebook.hermes.intl.LocaleIdTokenizer: int mCurrentSubtagStart
com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat: com.google.crypto.tink.proto.AesCtrHmacStreamingParams params_
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier sReactDatabaseSupplierInstance
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Comparator EVENT_COMPARATOR
androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback
com.facebook.react.R$drawable: int redbox_top_border_background
androidx.biometric.R$color: int material_grey_600
com.facebook.react.views.textinput.ReactTextInputLocalData: android.text.SpannableStringBuilder text
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean enableViewRecyclingForViewCache
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: com.google.crypto.tink.KeyTemplate mAeadKeyTemplate
com.google.crypto.tink.proto.KeyData: java.lang.String typeUrl_
androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId
androidx.biometric.R$dimen: int abc_dropdownitem_text_padding_right
com.facebook.react.fabric.mounting.MountingManager: int MAX_STOPPED_SURFACE_IDS_LENGTH
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType END
com.facebook.react.R$style: int SpinnerDatePickerDialog
com.facebook.react.uimanager.style.CornerRadii: float vertical
com.facebook.react.uimanager.ReactRootViewTagGenerator: int ROOT_VIEW_TAG_INCREMENT
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role mRole
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.facebook.react.bridge.UiThreadUtil: com.facebook.react.bridge.UiThreadUtil INSTANCE
androidx.biometric.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap previousDisplayMetrics
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
com.facebook.react.uimanager.events.Event: int uniqueID
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion Companion
com.facebook.hermes.intl.PlatformCollatorICU$1: int[] $SwitchMap$com$facebook$hermes$intl$IPlatformCollator$CaseFirst
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.OnScrollDispatchHelper mOnScrollDispatchHelper
com.facebook.hermes.intl.Constants: java.lang.String LOCALE
com.facebook.react.views.scroll.ReactScrollView: boolean mScrollEnabled
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.Boolean useOptimizedEventBatchingOnAndroidCache
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.Boolean fuseboxEnabledReleaseCache
androidx.biometric.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.facebook.react.views.scroll.ReactScrollViewHelper: long MOMENTUM_DELAY
androidx.biometric.FingerprintDialogFragment: int mErrorTextColor
com.google.crypto.tink.proto.HmacKey: int PARAMS_FIELD_NUMBER
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mClippingRect
androidx.biometric.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: int totalFramesDropped
androidx.biometric.R$attr: int switchPadding
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.biometric.BiometricFragment$10: int val$errorCode
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal SHADOW_ARGS
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] $VALUES
com.facebook.react.views.textinput.ReactTextInputBlurEvent: java.lang.String EVENT_NAME
com.oblador.vectoricons.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.biometric.R$id: int activity_chooser_view_content
androidx.biometric.R$attr: int windowFixedHeightMajor
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
androidx.biometric.R$id: int action_context_bar
androidx.biometric.R$attr: int textAppearanceListItem
androidx.biometric.R$dimen: int abc_text_size_title_material_toolbar
androidx.biometric.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
androidx.biometric.R$attr: int actionModePopupWindowStyle
com.facebook.react.views.scroll.ScrollEvent: float scrollY
androidx.fragment.app.Fragment: boolean mRetainInstance
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray array
com.swmansion.reanimated.ReanimatedModule: com.swmansion.worklets.WorkletsModule mWorkletsModule
com.facebook.react.views.text.ReactTextShadowNode: android.text.Spannable mPreparedSpannableText
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int reactTag
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerBottomRightCorner
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] $VALUES
androidx.biometric.R$style: int Base_DialogWindowTitle_AppCompat
com.facebook.react.animated.SpringAnimation: double displacementFromRestThreshold
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
androidx.biometric.R$style: int Base_V26_Theme_AppCompat
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay SHORT
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: float decelerationRate
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_END_RADIUS
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.concurrent.Executor cancellationExecutor
com.facebook.react.devsupport.DevSupportManagerBase$reloadAppBroadcastReceiver$1: com.facebook.react.devsupport.DevSupportManagerBase this$0
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: int val$parentTag
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mActivePointerId
com.facebook.react.animated.DiffClampAnimatedNode: double lastValue
androidx.biometric.R$styleable: int MenuItem_android_visible
androidx.biometric.R$id: int accessibility_custom_action_26
androidx.biometric.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object[] $iteratorValues
androidx.biometric.R$styleable: int[] StateListDrawable
androidx.biometric.R$style: int Widget_AppCompat_PopupMenu
com.facebook.react.R$color: int catalyst_logbox_background
com.facebook.react.uimanager.JSPointerDispatcher: int mChildHandlingNativeGesture
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String mLastBatteryState
com.facebook.react.common.mapbuffer.MapBuffer$DataType: kotlin.enums.EnumEntries $ENTRIES
androidx.biometric.R$layout: int abc_action_menu_layout
com.facebook.react.uimanager.events.PointerEvent: java.lang.String mEventName
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller mSuperCaller
com.facebook.react.uimanager.NativeViewHierarchyManager$1: com.facebook.react.uimanager.ViewGroupManager val$viewManager
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.Runnable mPostTouchRunnable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.facebook.react.animated.SpringAnimation: int currentLoop
androidx.biometric.FingerprintDialogFragment: int STATE_FINGERPRINT_ERROR
com.facebook.react.R$string: int summary_description
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater INSTANCE
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_OFFSET_HEIGHT
androidx.biometric.R$dimen: int hint_alpha_material_light
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_IS_HIGHLIGHTED
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.facebook.react.views.view.ViewGroupClickEvent: com.facebook.react.views.view.ViewGroupClickEvent$Companion Companion
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.util.List nextTransition
androidx.biometric.R$style: int TextAppearance_AppCompat_Large_Inverse
androidx.biometric.R$attr: int paddingStart
com.facebook.react.views.image.ReactImageView$WhenMappings: int[] $EnumSwitchMapping$1
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.StackTraceHelper INSTANCE
com.facebook.react.R$string: int menubar_description
androidx.biometric.R$attr: int allowStacking
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircularProgressDrawable mProgress
com.oblador.keychain.KeychainModule: java.lang.String WARMING_UP_ALIAS
com.facebook.hermes.intl.NumberFormat: int mResolvedMaximumFractionDigits
androidx.biometric.R$styleable: int[] SwitchCompat
androidx.biometric.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.biometric.R$layout: int abc_list_menu_item_layout
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.facebook.react.views.text.internal.span.ReactTagSpan: int getReactTag()
com.facebook.react.views.switchview.ReactSwitch: void setChecked(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$incrementPendingJSCalls$4()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.facebook.datasource.BaseDataSubscriber: void onFailure(com.facebook.datasource.DataSource)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setHomeIndicatorHidden(android.view.View,boolean)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient getClient$ReactAndroid_release()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ShadowNodeRegistry$Companion: ShadowNodeRegistry$Companion()
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: NativeCameraRollModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.runtime.ReactInstance: void registerSegment(int,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void initializeHeadphoneConnectionReceivers()
com.swmansion.rnscreens.SearchBarManager: void logNotAvailable(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.swmansion.rnscreens.ScreenFooter: boolean getHasReceivedInitialLayoutFromParent()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$animationScaleObserver$1: void onChange(boolean,android.net.Uri)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.fragment.app.Fragment: boolean isStateSaved()
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: TouchTargetHelper$ViewTarget(int,android.view.View)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.facebook.react.uimanager.MatrixMathHelper: void resetIdentityMatrix(double[])
com.facebook.react.views.scroll.ReactScrollView: void onMeasure(int,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String readStringValue(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
com.facebook.react.devsupport.FpsView: void access$setCurrentFPS(com.facebook.react.devsupport.FpsView,double,double,int,int)
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.TouchEvent: TouchEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
com.facebook.react.devsupport.interfaces.DevSupportManager: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.facebook.react.views.scroll.ReactScrollViewHelper: void removeScrollListener(com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener)
com.facebook.react.modules.debug.DevSettingsModule: void openDebugger()
com.facebook.react.ReactFragment: void onDestroy()
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.biometric.BiometricFragment$Api29Impl: void setDeviceCredentialAllowed(android.hardware.biometrics.BiometricPrompt$Builder,boolean)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void invalidate()
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: boolean isReverse()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
androidx.biometric.BiometricFragment: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactEditText: void addSpansFromStyleAttributes(android.text.SpannableStringBuilder)
com.facebook.react.uimanager.annotations.ReactProp$Companion: ReactProp$Companion()
com.facebook.react.uimanager.style.LogicalEdge$Companion: LogicalEdge$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.lifecycle.ReportFragment: ReportFragment()
com.facebook.react.uimanager.OnLayoutEvent: void onDispose()
com.swmansion.reanimated.NodesManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: void setChildInsets(java.lang.Object,boolean)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.runtime.BridgelessReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.FabricUIManagerBinding)
com.facebook.react.runtime.ReactHostImpl$2: ReactHostImpl$2(com.facebook.react.runtime.ReactHostImpl,kotlin.jvm.functions.Function1)
com.swmansion.rnscreens.SearchBarManager: void focus(android.view.View)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setSignificantDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.fabric.mounting.mountitems.MountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.biometric.KeyguardUtils$Api23Impl: KeyguardUtils$Api23Impl()
com.facebook.react.uimanager.ReactYogaConfigProvider: ReactYogaConfigProvider()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.react.views.textinput.ReactEditText: boolean canUpdateWithEventCount(int)
com.swmansion.reanimated.NodesManager: void scrollTo(int,double,double,boolean)
com.facebook.react.modules.intent.IntentModule: void access$setInitialURLListener$p(com.facebook.react.modules.intent.IntentModule,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.hermes.reactexecutor.HermesExecutor: java.lang.String getName()
com.facebook.react.devsupport.DevSupportManagerBase$devSettings$1: DevSupportManagerBase$devSettings$1(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.JavaTimerManager: void onInstanceDestroy()
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void openDrawer(android.view.View)
com.facebook.hermes.intl.LocaleIdentifier: void parsePrivateUseExtensions(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task access$getTASK_FALSE$cp()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setObscureBackground(android.view.View,boolean)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
androidx.biometric.BiometricFragment: void sendFailureToClient()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean traceTurboModulePromiseRejectionsOnAndroid()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,java.lang.String,int,int)
com.BV.LinearGradient.LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ReactStylesDiffMap: boolean hasKey(java.lang.String)
com.facebook.react.ReactInstanceManager: void onWindowFocusChange(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutScreenWillDisappear()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
com.facebook.react.uimanager.events.EventDispatcherImpl: long getEventCookie(int,java.lang.String,short)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: boolean isOpen()
com.facebook.react.shell.MainPackageConfig: com.facebook.imagepipeline.core.ImagePipelineConfig getFrescoConfig()
com.facebook.hermes.intl.LocaleMatcher: java.lang.String[] bestFitSupportedLocales(java.lang.String[])
com.facebook.react.runtime.ReactHostImpl: void log(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest: boolean getLocalThumbnailPreviewsEnabled()
androidx.biometric.BiometricFragment: void sendErrorToClient(int,java.lang.CharSequence)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.defaults.DefaultReactActivityDelegate: DefaultReactActivityDelegate(com.facebook.react.ReactActivity,java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeOffset$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion: com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJavaScriptExecutorFactory(com.facebook.react.bridge.JavaScriptExecutorFactory)
com.facebook.react.uimanager.ReactRoot: java.lang.String getJSModuleName()
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useFabricInterop()
com.facebook.react.runtime.internal.bolts.Task$Companion: Task$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void addFocusables(java.util.ArrayList,int,int)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.defaults.DefaultReactHost: kotlin.Unit getDefaultReactHost$lambda$3(java.lang.Exception)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: ReadableNativeMap$entryIterator$1$1$next$1(java.lang.String[],int,java.lang.Object[])
com.facebook.hermes.intl.PlatformNumberFormatterICU: java.lang.String format(double)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface prerenderSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: void showPausedInDebuggerOverlay$lambda$3(com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager,java.lang.String,com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
androidx.appcompat.widget.AppCompatEditText: void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper)
com.facebook.react.packagerconnection.JSPackagerClient: JSPackagerClient(java.lang.String,com.facebook.react.packagerconnection.PackagerConnectionSettings,java.util.Map)
com.BV.LinearGradient.LinearGradientManager: void setColors(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderTopRightRadius(float)
com.facebook.react.uimanager.UIImplementation: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] constructor-impl(java.lang.Integer[])
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
androidx.fragment.app.Fragment: void onLowMemory()
com.facebook.react.runtime.ReactInstance: void access$loadJSBundleFromFile(com.facebook.react.runtime.ReactInstance,java.lang.String,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void shakeDetector$lambda$2(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.views.textinput.ReactEditText: void applyTextAttributes()
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType[] values()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void draw(android.graphics.Canvas)
com.facebook.react.devsupport.PerftestDevSupportManager: PerftestDevSupportManager(android.content.Context)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: void migrate(android.content.Context)
com.facebook.react.devsupport.DevSupportManagerBase: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.ReactMarker: void notifyNativeMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.Long)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.TextAttributeProps: boolean isColorSet()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion: LayoutUpdateAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactInstanceManager: void moveToResumedLifecycleState(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.style.LinearGradient$Companion: LinearGradient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void addView(android.view.View,android.view.View,int)
com.swmansion.rnscreens.ScreensModule: java.lang.String getName()
com.facebook.react.uimanager.JSPointerDispatcher: void dispatchCancelEventForTarget(android.view.View,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.uimanager.drawable.BorderDrawable: void updatePath()
com.swmansion.rnscreens.SearchBarManager: void toggleCancelButton(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitNumber()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap localTypeMap_delegate$lambda$3(com.facebook.react.bridge.ReadableNativeMap)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: ReactDatabaseSupplier(android.content.Context)
com.facebook.react.reactperflogger.NativeModulePerfLogger: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator()
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.modules.fresco.FrescoModule: boolean access$getHasBeenInitialized$cp()
com.facebook.react.devsupport.ChangeBundleLocationDialog: void show(android.content.Context,com.facebook.react.modules.debug.interfaces.DeveloperSettings,com.facebook.react.devsupport.ChangeBundleLocationDialog$ChangeBundleLocationDialogListener)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSepiaEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode resolveShadowNode(int)
com.facebook.react.common.assets.ReactFontManager: java.lang.String[] access$getEXTENSIONS$cp()
com.facebook.react.views.textinput.ReactEditText: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onTransitionToBridgeBusy()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.progressbar.ProgressBarShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.react.views.text.TextLayoutManager: void setCachedSpannableForTag(int,android.text.Spannable)
com.facebook.react.runtime.ReactHostImpl$1: ReactHostImpl$1(com.facebook.react.runtime.ReactHostImpl)
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.facebook.react.bridge.CallbackImpl$Companion: CallbackImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int getRetries()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
com.facebook.react.uimanager.style.LogicalEdge$ALL: int toSpacingType()
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: void getPhotoByInternalID(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.oblador.keychain.KeychainModule: void throwIfInsufficientLevel(com.oblador.keychain.cipherStorage.CipherStorage,com.oblador.keychain.SecurityLevel)
com.oblador.keychain.KeychainModule: androidx.biometric.BiometricPrompt$PromptInfo getPromptInfo(com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isStopped()
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: ReactMarker$ReactMarkerRecord(java.lang.String,long)
com.facebook.react.runtime.ReactSurfaceImpl$Companion: float getFontScale(android.content.Context)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addViewAt(int,int,int)
com.facebook.react.modules.core.JavaTimerManager: void clearChoreographerIdleCallback()
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer readMapBufferValue(int)
com.facebook.react.uimanager.UIManagerReanimatedHelper: UIManagerReanimatedHelper()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightMaxContentJNI(long)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.NativeArgumentsParseException$Companion: NativeArgumentsParseException$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BackgroundStyleApplicator: BackgroundStyleApplicator()
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.uimanager.style.ColorStopUtils: ColorStopUtils()
com.facebook.react.internal.ChoreographerProvider$Choreographer: void removeFrameCallback(android.view.Choreographer$FrameCallback)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.View,int)
com.rnbiometrics.ReactNativeBiometricsPackage: ReactNativeBiometricsPackage()
com.facebook.react.fabric.DevToolsReactPerfLogger$Companion: DevToolsReactPerfLogger$Companion()
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: LayoutMetricsConversions$Companion()
com.facebook.react.views.modal.ReactModalHostManager: void setTestId(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: double getUsedMemorySync()
com.facebook.react.views.text.ReactTextView: void setHyphenationFrequency(int)
com.facebook.react.modules.debug.FpsDebugFrameCallback$Companion: FpsDebugFrameCallback$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContext(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.oblador.keychain.KeychainPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.hermes.reactexecutor.HermesExecutorFactory: void startSamplingProfiler()
com.facebook.react.uimanager.events.FabricEventDispatcher: void invalidate$lambda$1(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool access$getPool$cp()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState setLastStateUpdateScroll(int,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1: ImageLoaderModule$queryCache$1(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: void loadNetworkResource(java.lang.String,com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertClassToJniType(java.lang.Class)
com.facebook.react.devsupport.DevInternalSettings: boolean isFpsDebugEnabled()
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$onPackagerConnectedCallback$1: void onDisconnected()
androidx.appcompat.widget.SwitchCompat: void onDraw(android.graphics.Canvas)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.view.ReactViewGroup: boolean isChildRemovedWhileTransitioning(android.view.View)
com.facebook.react.devsupport.PackagerStatusCheck: void run(java.lang.String,com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.facebook.react.modules.network.NetworkingModule$Companion: boolean shouldDispatch(long,long)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl()
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: PausedInDebuggerOverlayDialogManager(androidx.core.util.Supplier)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: ReactScrollViewCommandHelper$Companion()
com.learnium.RNDeviceInfo.RNDeviceModule: void getUserAgent(com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key tryGenerateStrongBoxSecurityKey(java.lang.String)
com.facebook.react.uimanager.Spacing: Spacing(float)
androidx.appcompat.widget.AppCompatEditText: void access$101(androidx.appcompat.widget.AppCompatEditText,android.view.textclassifier.TextClassifier)
com.facebook.react.bridge.ReactMarkerConstants: kotlin.enums.EnumEntries getEntries()
androidx.fragment.app.Fragment: void setPopDirection(boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromViewManagerClassDefinition(java.lang.Class,java.util.Map)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void incrementRetries()
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme$lambda$0(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetErrataJNI(long,int)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: boolean canCoalesce()
com.facebook.react.views.scroll.ReactScrollViewManager: void setHorizontal(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.drawer.ReactDrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.rnbiometrics.ReactNativeBiometricsPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.devsupport.DevInternalSettings: boolean isHotModuleReplacementEnabled()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void drawRoundedBackgroundWithBorders(android.graphics.Canvas)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.util.List getMapBufferList(int)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
org.pgsqlite.SQLitePlugin: void bindRow(com.facebook.react.bridge.WritableMap,java.lang.String,android.database.Cursor,int)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)
com.facebook.react.packagerconnection.FileIoHandler: FileIoHandler()
com.facebook.react.ReactNativeHost: boolean getUseDeveloperSupport()
androidx.biometric.DeviceUtils: boolean shouldHideFingerprintDialog(android.content.Context,java.lang.String)
com.facebook.react.fabric.ComponentFactory: void getMHybridData$annotations()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.runtime.BridgelessCatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setNavigationBarTranslucent(android.view.View,boolean)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderBottomLeftRadius(float)
com.facebook.react.runtime.internal.bolts.Task$Companion: void completeAfterTask$lambda$5(com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.TaskCompletionSource)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
com.facebook.hermes.intl.Intl: Intl()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useShadowNodeStateOnClone()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.text.ReactTypefaceUtils: android.graphics.Typeface applyStyles(android.graphics.Typeface,int,int,java.lang.String,android.content.res.AssetManager)
com.nozbe.watermelondb.WatermelonDBPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.JavaTimerManager: void access$setCurrentIdleCallbackRunnable$p(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable)
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: void lambda$onReload$0()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useFabricInterop()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: void remove()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.facebook.react.views.view.ColorUtil: ColorUtil()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.viewmanagers.DebuggingOverlayManagerInterface: void highlightElements(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
androidx.biometric.BiometricViewModel: androidx.biometric.CancellationSignalProvider getCancellationSignalProvider()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.facebook.react.packagerconnection.JSPackagerClient: void init()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.PackageList: PackageList(android.app.Application)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUIOperation(com.facebook.react.uimanager.UIViewOperationQueue$UIOperation)
androidx.appcompat.widget.AppCompatTextView: void access$1201(androidx.appcompat.widget.AppCompatTextView,int,float)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.react.views.modal.ReactModalHostView: void onHostDestroy()
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeScriptSubtag(java.lang.CharSequence,int,int)
com.facebook.react.fabric.FabricUIManager: void markActiveTouchForTag(int,int)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightStretchJNI(long)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
com.facebook.react.views.textinput.ReactTextInputFocusEvent$Companion: ReactTextInputFocusEvent$Companion()
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: void apply(android.text.TextPaint)
androidx.biometric.FingerprintDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.hermes.intl.PlatformCollatorICU: com.facebook.hermes.intl.IPlatformCollator configure(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: ReactFontManager$TypefaceStyle(int,boolean)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: java.lang.String getEventName()
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: void createContentView(java.lang.String)
com.facebook.react.bridge.JSBundleLoader$Companion: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage getBottom()
com.facebook.react.runtime.BridgelessCatalystInstance: void registerSegment(int,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.facebook.react.uimanager.events.PointerEvent: short getCoalescingKey()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Object[])
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.facebook.react.uimanager.ReactShadowNode: void setStyleHeight(float)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: DecryptionResultHandlerInteractiveBiometricManualRetry(com.facebook.react.bridge.ReactApplicationContext,com.oblador.keychain.cipherStorage.CipherStorage,androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.react.views.scroll.ReactHorizontalScrollView: ReactHorizontalScrollView(android.content.Context)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedNodesManager: void setAnimatedNodeValue(int,double)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createBundleURL$default(com.facebook.react.devsupport.DevServerHelper,java.lang.String,com.facebook.react.devsupport.DevServerHelper$BundleType,java.lang.String,boolean,boolean,int,java.lang.Object)
com.facebook.react.uimanager.ReactShadowNode: int getScreenY()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: void decrypt(com.oblador.keychain.decryptionHandler.DecryptionResultHandler,java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.facebook.hermes.intl.NumberFormat: boolean isWellFormedUnitIdentifier(java.lang.String)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)
com.facebook.react.fabric.DevToolsReactPerfLogger: void addDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable ensureCSSBackground(android.view.View)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: KeyboardAnimationCallback(com.swmansion.reanimated.keyboard.Keyboard,com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction,boolean)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.swmansion.reanimated.NativeWorkletsModuleSpec: NativeWorkletsModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.react.uimanager.UIImplementation: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.nozbe.watermelondb.Queries: java.lang.String dropTable(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentDarkerSystemColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isLocationEnabledSync()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean access$isPaused$p(com.facebook.react.modules.core.JavaTimerManager)
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalMemory(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTitleFontWeight(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewEndTarget(boolean,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void clearAllSharedConfigsForView(android.view.View)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: ReactTextInputEndEditingEvent(int,java.lang.String)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape[] $values()
androidx.core.view.WindowInsetsCompat$BuilderImpl34: WindowInsetsCompat$BuilderImpl34()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPhoneNumberSync()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.oblador.keychain.decryptionHandler.DecryptionResultHandler: void askAccessPermissions(com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: java.util.ArrayList getExpoDatabases(android.content.Context)
com.facebook.imagepipeline.request.BasePostprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme valueOf(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: float getEffectiveLetterSpacing()
com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.WeakHashMap access$getINSTANCES$cp()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
androidx.security.crypto.EncryptedSharedPreferences: float getFloat(java.lang.String,float)
com.facebook.react.devsupport.MultipartStreamReader: void emitChunk(okio.Buffer,boolean,com.facebook.react.devsupport.MultipartStreamReader$ChunkListener)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
androidx.biometric.BiometricPrompt$AuthenticationCallback: void onAuthenticationFailed()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.react.module.annotations.ReactModule: java.lang.String name()
com.facebook.react.modules.debug.FpsDebugFrameCallback: int get4PlusFrameStutters()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: ReactNativeFeatureFlagsDefaults()
com.nozbe.watermelondb.WMDatabaseDriver: int count(java.lang.String,java.lang.Object[])
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.ReactChoreographer access$getReactChoreographer$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.uimanager.ReactShadowNode: void setStyleHeightPercent(float)
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: java.lang.String getProperty()
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.react.viewmanagers.ModalHostViewManagerDelegate: ModalHostViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.facebook.react.animated.NativeAnimatedModule$stopAnimation$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.bridge.ReadableMapBuilderKt: com.facebook.react.bridge.ReadableMap buildReadableMap(kotlin.jvm.functions.Function1)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int)
com.facebook.react.uimanager.MatrixMathHelper: void applyPerspective(double[],double)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxHeightPercent(float)
com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy update()
com.facebook.react.views.textinput.ReactTextInputManager$Companion: boolean shouldHideCursorForEmailTextInput()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void abortAnimation()
com.facebook.react.uimanager.NativeViewHierarchyManager: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: InsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.react.PackageList: PackageList(com.facebook.react.ReactNativeHost,com.facebook.react.shell.MainPackageConfig)
com.nozbe.watermelondb.Connection$Connected: Connection$Connected(com.nozbe.watermelondb.WMDatabaseDriver)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$show$2: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.devsupport.interfaces.DevSupportManager: void handleReloadJS()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallReferrerSync()
com.facebook.react.uimanager.style.BorderColors: java.lang.String toString()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.drawable.OutlineDrawable: int getOutlineColor()
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.drawer.events.DrawerSlideEvent: com.facebook.react.bridge.WritableMap getEventData()
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType[] values()
com.facebook.react.runtime.ReactInstance$1: ReactInstance$1(com.facebook.react.runtime.ReactInstance)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.ReactFragment: com.facebook.react.ReactDelegate getReactDelegate()
com.facebook.react.uimanager.UIImplementation: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.views.text.ReactTextViewManagerCallback: void onPostProcessSpannable(android.text.Spannable)
com.facebook.react.views.text.ReactTextView: void onDraw(android.graphics.Canvas)
com.facebook.react.common.ShakeDetectorKt: long access$getMIN_TIME_BETWEEN_SAMPLES_NS$p()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean deleteSurroundingText(int,int)
okio.ForwardingSource: okio.Timeout timeout()
com.facebook.react.views.modal.ReactModalHostManager: void setTestId(android.view.View,java.lang.String)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.react.common.LifecycleState: LifecycleState(java.lang.String,int)
com.facebook.hermes.intl.LocaleObjectICU: java.lang.Object getLocaleWithoutExtensions()
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginPercent(int,float)
com.facebook.react.devsupport.DevSupportManagerBase: void setLastErrorTitle(java.lang.String)
com.facebook.react.uimanager.style.LogicalEdge$RIGHT: int toSpacingType()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isOtherExtension()
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: void execute()
androidx.security.crypto.EncryptedFile: EncryptedFile(java.io.File,java.lang.String,com.google.crypto.tink.StreamingAead,android.content.Context)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
androidx.biometric.BiometricFragment: boolean isChangingConfigurations()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
org.pgsqlite.SQLitePlugin: void close(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.runtime.JSTimerExecutor$Companion: JSTimerExecutor$Companion()
com.facebook.react.shell.MainReactPackage: java.util.Map getViewManagersMap()
androidx.biometric.BiometricFragment$4: void onChanged(java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.swmansion.rnscreens.ScreenFooter: com.swmansion.rnscreens.Screen getScreenParent()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: com.facebook.react.bridge.WritableMap getEventData()
com.oblador.keychain.PrefsStorage: byte[] getBytesForUsername(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: boolean isEmojiCompatEnabled()
com.facebook.react.uimanager.style.RadialGradient$Position: RadialGradient$Position(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.text.PreparedLayout: int getMaximumNumberOfLines()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getOffsetByPointerId()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void clearElementsHighlights()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect parseAndCreateDropShadowEffect(com.facebook.react.bridge.ReadableMap,android.graphics.RenderEffect)
com.imagepicker.ImagePickerModule: ImagePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: void setName(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.biometric.BiometricFragment$6: void onChanged(java.lang.Boolean)
com.facebook.react.uimanager.DisplayMetricsHolder: void getScreenDisplayMetrics$annotations()
com.facebook.react.ReactHost: void addReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.facebook.react.uimanager.style.LogicalEdge$END: LogicalEdge$END(java.lang.String,int)
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean checkReactFeatureFlagsConditions()
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: int hashCode()
com.facebook.react.animated.NativeAnimatedModule$updateAnimatedNodeConfig$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.uimanager.UIConstantsProviderBinding: UIConstantsProviderBinding()
androidx.biometric.BiometricFragment$11: BiometricFragment$11(androidx.biometric.BiometricFragment)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setHidden(android.view.View,boolean)
com.facebook.react.uimanager.PixelUtil: float dpToPx(float)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.facebook.react.modules.blob.BlobProvider: void openFile$lambda$2(android.os.ParcelFileDescriptor,byte[])
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: ReactScrollViewCommandHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.graphics.Point convertScreenLocationToViewCoordinates(android.graphics.Point,android.view.View)
com.facebook.react.uimanager.drawable.BorderDrawable: void access$setNeedUpdatePath$p(com.facebook.react.uimanager.drawable.BorderDrawable,boolean)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.oblador.keychain.KeychainModule: boolean isIrisAuthAvailable()
com.facebook.react.views.text.TextAttributeProps: int getIntProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,int)
androidx.biometric.BiometricPrompt$PromptInfo$Builder: BiometricPrompt$PromptInfo$Builder()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: ReactImageDownloadListener$EmptyDrawable()
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.devsupport.BridgeDevSupportManager: void handleReloadJS$lambda$1$lambda$0(com.facebook.react.devsupport.BridgeDevSupportManager)
com.facebook.react.uimanager.StateWrapper: void updateState(com.facebook.react.bridge.WritableMap)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFabricRenderer()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReactRoot: int getHeightMeasureSpec()
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getActivePointerId()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.appcompat.widget.SearchView: int getInputType()
androidx.security.crypto.EncryptedFile$Builder: EncryptedFile$Builder(java.io.File,android.content.Context,java.lang.String,androidx.security.crypto.EncryptedFile$FileEncryptionScheme)
androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile$Builder setKeysetAlias(java.lang.String)
com.facebook.hermes.intl.LocaleIdentifier: com.facebook.hermes.intl.ParsedLocaleIdentifier parseLocaleId(java.lang.String)
androidx.activity.ComponentActivity: void initializeViewTreeOwners()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.react.devsupport.ReleaseDevSupportManager: void handleReloadJS()
com.facebook.react.views.textinput.ReactEditText: void clearFocusFromJS$ReactAndroid_release()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.facebook.react.bridge.ReadableType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTLForced(android.content.Context)
com.swmansion.rnscreens.SearchBarManager: void setText(android.view.View,java.lang.String)
androidx.emoji2.text.EmojiExclusions$EmojiExclusions_Api34: java.util.Set getExclusions()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer put(int,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStylePadding(int)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: void verifyAndForceSqliteCheckpoint(android.content.Context)
com.facebook.react.fabric.FabricUIManager: void prependUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean cxxNativeAnimatedEnabled()
com.facebook.react.uimanager.ComponentNameResolverBinding: ComponentNameResolverBinding()
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(android.view.View,boolean)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.lang.String[] getAvailableLocales()
com.facebook.react.animated.InterpolationAnimatedNode: void update$ReactAndroid_release()
com.facebook.react.uimanager.events.Event: boolean canCoalesce()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$deleteToken$5(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)
com.facebook.react.uimanager.ReactShadowNode: int getTotalNativeChildren()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setCurrency(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactEditText: void access$onContentSizeChange(com.facebook.react.views.textinput.ReactEditText)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.facebook.react.ReactRootView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.oblador.keychain.cipherStorage.CipherStorageBase: boolean supportsSecureHardware()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enablePreparedTextLayout()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.swmansion.reanimated.keyboard.KeyboardState: int asInt()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreensCoordinatorLayout(java.lang.Object)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: long getLongValue()
com.facebook.react.fabric.StateWrapperImpl: void updateState(com.facebook.react.bridge.WritableMap)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setBundleAssetName(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.nozbe.watermelondb.R: R()
org.pgsqlite.SQLitePlugin: void createFromAssets(java.lang.String,java.io.File,java.io.InputStream)
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest fromFile(java.io.File)
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeOffset$1: NativeAnimatedModule$setAnimatedNodeOffset$1(com.facebook.react.animated.NativeAnimatedModule,int,double)
com.facebook.react.bridge.BridgeReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.biometric.AuthenticatorUtils: java.lang.String convertToString(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.facebook.react.modules.core.JavaTimerManager: void maybeIdleCallback()
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: java.util.Map getMetadata()
com.facebook.react.modules.network.ForwardingCookieHandler$Companion: boolean isCookieHeader(java.lang.String)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createInvertEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: ReactAccessibilityDelegate$Role(java.lang.String,int)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] $values()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: com.facebook.react.bridge.WritableMap createKeyboardEventPayload(double,double,double,double)
com.facebook.react.views.text.TextTransform: java.lang.String applyNonNull(java.lang.String,com.facebook.react.views.text.TextTransform)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String toString()
com.facebook.react.devsupport.ReactInstanceDevHelper: void toggleElementInspector()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setDisplay(com.facebook.yoga.YogaDisplay)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setBorderStyle(com.facebook.react.views.text.PreparedLayoutTextView,java.lang.String)
com.facebook.hermes.intl.ILocaleObject: java.lang.Object getLocale()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.runtime.ReactHostImpl: void removeBeforeDestroyListener(kotlin.jvm.functions.Function0)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.devsupport.DevServerHelper: android.content.Context access$getApplicationContext$p(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setOverflow(com.facebook.react.views.text.PreparedLayoutTextView,java.lang.String)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int)
com.facebook.react.devsupport.interfaces.DevSupportManager: void openDebugger()
com.facebook.react.runtime.ReactInstance: void startSurface(com.facebook.react.runtime.ReactSurfaceImpl)
androidx.appcompat.widget.AppCompatEditText: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$1: void send(java.lang.String)
com.facebook.react.bridge.BridgeReactContext: java.util.Collection getNativeModules()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String toJSONString()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost(android.content.Context,com.facebook.react.ReactNativeHost,com.facebook.react.runtime.JSRuntimeFactory)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.facebook.react.modules.debug.DevMenuModule: DevMenuModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.uimanager.ReactShadowNode: boolean hasNewLayout()
com.facebook.react.runtime.ReactInstance$Companion: java.util.Map access$createConstants(com.facebook.react.runtime.ReactInstance$Companion,java.util.List,java.util.Map)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[])
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.modules.network.OkHttpClientProvider: void setFactory$ReactAndroid_release(com.facebook.react.modules.network.OkHttpClientFactory)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$4()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String getMethodName()
com.facebook.react.uimanager.UIImplementation: void setLayoutUpdateListener(com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.uimanager.style.ColorStop: java.lang.Integer getColor()
com.facebook.react.modules.blob.BlobModule$webSocketContentHandler$1: void onMessage(okio.ByteString,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String getName()
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow fromString(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: void invalidate()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$Companion: ReadableMapBuffer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactHost: com.facebook.react.MemoryPressureRouter getMemoryPressureRouter()
com.facebook.react.uimanager.ReactAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat superGetAccessibilityNodeProvider(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$400(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromViewTag(android.view.View)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.views.switchview.ReactSwitchShadowNode: void initMeasureFunction()
com.facebook.react.views.text.TextLayoutManager: boolean isRTL(com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.interfaces.fabric.ReactSurface: com.facebook.react.interfaces.TaskInterface stop()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: void replaceChars(java.lang.StringBuilder,java.lang.String,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableMapBuilder: ReadableMapBuilder(com.facebook.react.bridge.WritableMap)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost$default(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.runtime.JSRuntimeFactory,boolean,java.util.List,kotlin.jvm.functions.Function1,com.facebook.react.runtime.BindingsInstaller,int,java.lang.Object)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getCurrent()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetInitialDetent(android.view.View,int)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String)
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: android.graphics.Path getPath()
com.facebook.react.uimanager.events.EventEmitterImpl: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.view.WindowUtilKt: android.view.WindowInsets setStatusBarTranslucency$lambda$0(android.view.View,android.view.WindowInsets)
com.oblador.keychain.KeychainModule: void getInternetCredentialsForServer(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String decryptKey(java.lang.String)
com.facebook.react.touch.JSResponderHandler$Companion: JSResponderHandler$Companion()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean shouldEnableLegacyModuleInterop()
com.facebook.react.bridge.CatalystInstance: void destroy()
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: com.facebook.react.runtime.internal.bolts.Task getTask()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String getGlobalHookSettings()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void flashScrollIndicators()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: void invalidateSelfAndUpdatePath()
com.facebook.react.devsupport.PackagerStatusCheck: PackagerStatusCheck(okhttp3.OkHttpClient)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: void isEmulator(com.facebook.react.bridge.Promise)
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: java.lang.String read(int)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String getEventName()
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.LocaleObjectICU: com.facebook.hermes.intl.ILocaleObject createFromLocaleId(java.lang.String)
androidx.fragment.app.Fragment: java.lang.String toString()
com.facebook.react.runtime.ReactHostImpl: void lambda$createMemoryPressureListener$8(java.lang.ref.WeakReference,int)
com.facebook.react.modules.appstate.AppStateModule$Companion: AppStateModule$Companion()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion: DebuggingOverlayManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: android.widget.ProgressBar createProgressBar(android.content.Context,int)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onHostDestroy()
com.facebook.react.uimanager.ReactShadowNode: void setStyleAspectRatio(float)
com.facebook.react.interfaces.fabric.ReactSurface: boolean isRunning()
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.lang.String getDefaultNumberingSystem(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent$Companion: ReactTextInputSelectionEvent$Companion()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: void setDelegate(android.view.View,boolean,int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: void onLayout()
com.facebook.react.runtime.ReactHostImpl: void lambda$stopSurface$2(java.lang.String,com.facebook.react.runtime.ReactSurfaceImpl,com.facebook.react.runtime.ReactInstance)
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: int getIntValue()
com.facebook.react.modules.blob.FileReaderModule$Companion: FileReaderModule$Companion()
com.facebook.hermes.intl.LocaleObjectAndroid: LocaleObjectAndroid(com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.react.animated.NativeAnimatedNodesManager: void connectAnimatedNodes(int,int)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setAlpha(int)
com.facebook.react.modules.intent.IntentModule$waitForActivityAndGetInitialURL$1: void onHostPause()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.View,int)
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: void requestAddOnlyPermission(com.facebook.react.bridge.Promise)
com.facebook.react.runtime.CoreReactPackage: java.util.Map fallbackForMissingClass$lambda$0(java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderColor(int,java.lang.Integer)
com.facebook.react.views.text.FontMetricsUtil: FontMetricsUtil()
com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion: ReactNetworkImageRequest$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toCurrentMap()
com.facebook.react.uimanager.style.OutlineStyle$Companion: com.facebook.react.uimanager.style.OutlineStyle fromString(java.lang.String)
com.swmansion.worklets.AndroidUIScheduler: com.facebook.jni.HybridData initHybrid()
com.nozbe.watermelondb.WMDatabase: WMDatabase(android.database.sqlite.SQLiteDatabase)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.views.scroll.ReactScrollViewHelper: void dispatchMomentumEndOnAnimationEnd(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.facebook.react.bridge.ReadableArrayBuilder: ReadableArrayBuilder(com.facebook.react.bridge.WritableArray)
com.facebook.react.uimanager.NativeViewHierarchyManager: long getInstanceHandle(int)
com.facebook.react.views.textinput.ReactTextInputManager$Companion: boolean access$shouldHideCursorForEmailTextInput(com.facebook.react.views.textinput.ReactTextInputManager$Companion)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.swmansion.reanimated.BuildConfig: BuildConfig()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.runtime.ReactHostImpl: boolean isSurfaceAttached(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object access$getTimerGuard$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.biometric.BiometricFragment$1: BiometricFragment$1(androidx.biometric.BiometricFragment)
com.facebook.react.uimanager.ReactShadowNode: void markLayoutSeen()
androidx.biometric.CancellationSignalProvider$Api16Impl: CancellationSignalProvider$Api16Impl()
com.facebook.react.animated.SpringAnimation$PhysicsState: void setPosition(double)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: kotlin.enums.EnumEntries getEntries()
com.BV.LinearGradient.LinearGradientView: void setUseAngle(boolean)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.Spacing$Companion: float[] newFullSpacingArray()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: short readUnsignedShort-BwKQO78(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.oblador.keychain.cipherStorage.CipherStorageBase$EncryptStringHandler: void initialize(javax.crypto.Cipher,java.security.Key,java.io.OutputStream)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.facebook.react.uimanager.UIImplementation: void findSubviewIn(int,float,float,com.facebook.react.bridge.Callback)
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getNumFrames()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.rnscreens.ScreenContentWrapperManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int component6()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useTurboModules()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initialize()
com.facebook.react.runtime.BridgelessReactContext$BridgelessJSModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createGrayscaleColorMatrix(float)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
com.facebook.react.views.switchview.ReactSwitchEvent: ReactSwitchEvent(int,boolean)
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$onPackagerConnectedCallback$1: void onConnected()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isMostlyScrolledInView(android.view.View)
com.swmansion.rnscreens.ScreensModule: void nativeInstall(long)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: NativeProxyCommon(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.events.EventEmitterImpl: void registerFabricEventEmitter(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.ReactFragment: void onPause()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.style.BorderStyle getBorderStyle(android.view.View)
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchAllEvents()
com.facebook.react.jstasks.LinearCountingRetryPolicy: int getDelay()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBackgroundImageLayers(java.util.List)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl,com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int predictFinalScrollPosition(int)
com.facebook.react.views.text.TextLayoutManager: void buildSpannableFromFragments(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,android.text.SpannableStringBuilder,java.util.List)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getLayoutParent()
com.facebook.react.runtime.ReactHostImpl: java.lang.Object lambda$callAfterGetOrCreateReactInstance$17(java.lang.String,com.facebook.react.runtime.ReactHostImpl$ReactInstanceCalback,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setColorFilter(android.graphics.ColorFilter)
com.oblador.keychain.KeychainModule: boolean isFingerprintAuthAvailable()
com.swmansion.reanimated.ReaCompatibility: void unregisterFabricEventListener(com.swmansion.reanimated.NodesManager)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthStretchJNI(long)
androidx.biometric.BiometricFragment: void launchConfirmCredentialActivity()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void resume()
com.facebook.react.devsupport.DevSupportManagerBase: void reloadSettings()
androidx.biometric.BiometricFragment$ShowPromptForAuthenticationRunnable: void run()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.uimanager.FloatUtil: FloatUtil()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.facebook.react.uimanager.UIManagerModule$1: java.lang.String resolveCustomEventName(java.lang.String)
com.facebook.react.uimanager.ShadowNodeRegistry: void addRootNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.modules.core.ExceptionsManagerModule$Companion: ExceptionsManagerModule$Companion()
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableViewRecycling()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didDispatchMountItems()
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$5(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.ReactUnderlineSpan)
com.facebook.hermes.intl.LocaleObjectAndroid: java.lang.String toCanonicalTagWithoutExtensions()
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.react.views.scroll.ReactScrollView: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.react.modules.fresco.SystraceRequestListener: SystraceRequestListener()
com.oblador.keychain.KeychainModule: java.lang.String getAliasOrDefault(java.lang.String)
com.facebook.react.views.text.ReactTextView: void onStartTemporaryDetach()
com.facebook.react.runtime.ReactHostImpl: void unregisterInstanceFromInspector(com.facebook.react.runtime.ReactInstance)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisStretchJNI(long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: java.lang.String toString()
com.facebook.react.bridge.ReactNativeJniCommonSoLoader: ReactNativeJniCommonSoLoader()
com.facebook.react.views.text.TextAttributeProps: int getColor()
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData access$initHybrid(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(java.lang.String,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.UIImplementation: void applyUpdatesRecursive(com.facebook.react.uimanager.ReactShadowNode,float,float,java.util.List)
com.facebook.react.uimanager.UIViewOperationQueue$AnimationOperation: UIViewOperationQueue$AnimationOperation(int)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: ViewManagerPropertyUpdater$GenericViewManagerDelegate(com.facebook.react.uimanager.ViewManager)
org.pgsqlite.SQLitePlugin: void executeSqlBatch(java.lang.String,java.lang.String[],com.facebook.react.bridge.ReadableArray[],java.lang.String[],org.pgsqlite.CallbackContext)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.network.ResponseUtil: void onDataReceivedProgress(com.facebook.react.bridge.ReactApplicationContext,int,long,long)
com.facebook.react.fabric.ComponentFactory$Companion: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.fabric.ComponentFactory$Companion)
com.facebook.drawee.view.DraweeView: void onFinishTemporaryDetach()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String getName()
com.facebook.react.common.mapbuffer.WritableMapBuffer: android.util.SparseArray access$getValues$p(com.facebook.react.common.mapbuffer.WritableMapBuffer)
com.facebook.react.BaseReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: ReactScrollViewHelper$registerFlingAnimator$1(android.view.ViewGroup)
com.swmansion.reanimated.NodesManager: void initWithContext(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$Shape getShape()
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.ReactDelegate: void onUserLeaveHint()
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: void setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.react.HeadlessJsTaskService: void onHeadlessJsTaskFinish(int)
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.lifecycle.ViewModel: void clear()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.facebook.react.ReactHost: void onHostDestroy(android.app.Activity)
com.facebook.react.devsupport.LogBoxModule$Companion: LogBoxModule$Companion()
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String toString()
com.facebook.react.views.image.ReactImageView: void onSizeChanged(int,int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler()
com.facebook.react.uimanager.events.EventDispatcher: void onCatalystInstanceDestroyed()
com.facebook.react.views.text.internal.span.SetSpanOperation: SetSpanOperation(int,int,com.facebook.react.views.text.internal.span.ReactSpan)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: ReactChoreographer$CallbackType(java.lang.String,int,int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onFinishTemporaryDetach()
com.facebook.react.views.text.TextAttributes: float getEffectiveLetterSpacing()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.facebook.react.animated.ModulusAnimatedNode: ModulusAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[],int[])
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.packagerconnection.RequestOnlyHandler: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
com.facebook.react.uimanager.ReactShadowNode: void onAfterUpdateTransaction()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion: DebuggingOverlayManager$Companion()
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.devsupport.MultipartStreamReader$ChunkListener: void onChunkProgress(java.util.Map,long,long)
com.facebook.react.ReactNativeHost: com.facebook.react.JSEngineResolutionAlgorithm getJSEngineResolutionAlgorithm()
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$deleteToken$4(com.google.firebase.messaging.FirebaseMessaging)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreenStack(java.lang.Object)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.rnbiometrics.SimplePromptCallback: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.common.SurfaceDelegate: void createContentView(java.lang.String)
com.facebook.react.ReactActivity: void onWindowFocusChanged(boolean)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void clearAnimationConfigForTag(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.Object updateState(com.swmansion.rnscreens.ScreenStackHeaderConfig,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP$default(float,float,int,java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.ReactDelegate: ReactDelegate(android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point getFinalAnimatedPositionScroll()
com.rnbiometrics.ReactNativeBiometrics$2: ReactNativeBiometrics$2(com.rnbiometrics.ReactNativeBiometrics,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType: android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackgroundFromBundleLoader()
com.facebook.react.devsupport.ReleaseDevSupportManager: void showNewJavaError(java.lang.String,java.lang.Throwable)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: ReactNativeNewArchitectureFeatureFlagsDefaults(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.View)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
org.pgsqlite.SQLitePlugin: SQLitePlugin(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.facebook.react.modules.core.PermissionAwareActivity: int checkPermission(java.lang.String,int,int)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int registerSensor(com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.ReactChoreographer: void removeFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,android.view.Choreographer$FrameCallback)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void sendMessage(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.FpsListener: void disable(java.lang.String)
com.swmansion.reanimated.NativeProxy$1: int[] getSharedGroup(int)
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion: RedBoxContentView$OpenStackFrameTask$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap internal_backingMap()
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: void add(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.devsupport.MultipartStreamReader: MultipartStreamReader(okio.BufferedSource,java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String,boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutHeight()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getTopRight()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule _init_$lambda$0(java.lang.String)
com.BV.LinearGradient.LinearGradientManager: void setBorderRadii(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: void updateDrawState(android.text.TextPaint)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.packagerconnection.PackagerConnectionSettings: void setDebugServerHost(java.lang.String)
androidx.biometric.BiometricViewModel: void setCryptoObject(androidx.biometric.BiometricPrompt$CryptoObject)
androidx.biometric.BiometricFragment$StopIgnoringCancelRunnable: BiometricFragment$StopIgnoringCancelRunnable(androidx.biometric.BiometricViewModel)
com.facebook.react.shell.MainReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.animated.DecayAnimation: DecayAnimation(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.ModulusAnimatedNode: void update$ReactAndroid_release()
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: NativeReactDevToolsSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: void setAccessorProvider$ReactAndroid_release(kotlin.jvm.functions.Function0)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: IPlatformDateTimeFormatter$Minute(java.lang.String,int)
com.facebook.react.devsupport.DevServerHelper: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: long getAnimationTimestamp()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$deleteView$1: LayoutAnimationController$deleteView$1(com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] $values()
com.swmansion.reanimated.Utils: float convertToFloat(java.lang.Object)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.facebook.react.modules.network.ForwardingCookieHandler: void clearCookies(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nativeProxy.SensorSetter: void sensorSetter(float[],int)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void isStartSamplingProfilerOnInit$annotations()
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.String dangerouslyForceOverride(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTypeSync()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] $values()
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$11(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: kotlin.enums.EnumEntries getEntries()
com.facebook.react.animated.NativeAnimatedModule$restoreDefaultValues$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.textinput.ReactEditText: void setLineHeight(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderWidth(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.uimanager.ReactShadowNode: void setStyleWidthPercent(float)
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.facebook.react.viewmanagers.RNSScreenFooterManagerDelegate: RNSScreenFooterManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.devsupport.interfaces.DevLoadingViewManager: void showMessage(java.lang.String)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getHitPathByPointerId()
com.facebook.react.devsupport.IInspectorPackagerConnection: void connect()
com.facebook.react.ReactRootView: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.oblador.keychain.KeychainModule: void resetGenericPasswordForOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getFingerprintSync()
com.facebook.react.uimanager.ReactShadowNode: void setBaselineFunction(com.facebook.yoga.YogaBaselineFunction)
androidx.appcompat.widget.AppCompatEditText: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: boolean isVirtual()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateStartTask$14(java.lang.Exception,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: java.util.Map$Entry getNextEntry()
com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion: DrawerClosedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
androidx.biometric.BiometricFragment: void cancelAuthentication(int)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan copy(android.text.TextPaint)
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionDuration()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.facebook.hermes.instrumentation.HermesMemoryDumper: boolean shouldSaveSnapshot()
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.RectF computeBorderInsets()
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule()
com.facebook.react.touch.ReactHitSlopView: android.graphics.Rect getHitSlopRect()
com.oblador.keychain.cipherStorage.CipherStorageBase: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String,boolean)
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1: void onAuthenticationFailed()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.runtime.ReactSurfaceView: boolean isViewAttachedToReactInstance()
com.facebook.react.LazyReactPackage: java.util.List getNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: ViewManagersPropertyCache$DoublePropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,double)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
androidx.biometric.CancellationSignalProvider$1: androidx.core.os.CancellationSignal getFingerprintCancellationSignal()
com.facebook.react.uimanager.style.BorderRadiusStyle: void set(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
androidx.biometric.PackageUtils$Api23Impl: boolean hasSystemFeatureFingerprint(android.content.pm.PackageManager)
com.oblador.keychain.exceptions.CryptoFailedException: CryptoFailedException(java.lang.String)
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: boolean trySetCancelled()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: LegacyArchitectureLogLevel(java.lang.String,int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateInstanceHandle(int,long)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getHasBorderRadii()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: java.lang.String getSkeleonSymbol()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffDuration()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void fling(int)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.BytesRange getBytesRange()
androidx.fragment.app.Fragment: boolean isResumed()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useTurboModules()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getBufferedRuntimeExecutor()
com.facebook.react.uimanager.ReactClippingViewGroupHelper: ReactClippingViewGroupHelper()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.fabric.FabricUIManager getUIManager()
com.facebook.react.bridge.DynamicFromMap$Companion: DynamicFromMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactFontManager$Companion: com.facebook.react.views.text.ReactFontManager getInstance()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType fromId(int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.react.runtime.hermes.HermesInstance: com.facebook.jni.HybridData initHybrid(boolean)
com.facebook.react.bridge.DynamicFromArray$Companion: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Integer getBorderColor(android.view.View,com.facebook.react.uimanager.style.LogicalEdge)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$12()
com.facebook.react.jstasks.LinearCountingRetryPolicy: boolean canRetry()
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjsctooling_so()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: double getDouble(int)
com.facebook.react.uimanager.style.LogicalEdge$Companion: LogicalEdge$Companion()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.uimanager.Spacing$Companion: Spacing$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1: void onAuthenticationHelp(int,java.lang.CharSequence)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: void onLayout(boolean,int,int,int,int)
com.facebook.react.animated.PropsAnimatedNode: void disconnectFromView(int)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.views.text.TextLayoutManager$1: TextLayoutManager$1()
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.IInspectorPackagerConnection access$getInspectorPackagerConnection$p(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map getDefaultExportableEventTypes()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle getDefaultHourCycle(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContentWrapper getContentWrapper()
com.facebook.react.uimanager.events.EventEmitterImpl$Companion: EventEmitterImpl$Companion()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.oblador.keychain.KeychainModule: com.oblador.keychain.KeychainModule withWarming(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: java.lang.String toString()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.facebook.react.fabric.FabricUIManagerBinding: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory)
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.facebook.react.ReactRootView: void updateRootLayoutSpecs(boolean,int,int)
androidx.biometric.BiometricPrompt: androidx.biometric.BiometricFragment findOrAddBiometricFragment(androidx.fragment.app.FragmentManager)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.devsupport.interfaces.DevSupportManager: boolean hasUpToDateJSBundleInCache()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.LengthPercentage getBorderRadius(android.view.View,com.facebook.react.uimanager.style.BorderRadiusProp)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void onViewStateDeleted(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(android.view.View,int,int,int,int)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.View)
com.facebook.react.bridge.NativeMap$Companion: NativeMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.BiometricPrompt$ResetCallbackObserver: void resetCallback()
com.facebook.react.devsupport.DevInternalSettings: boolean isElementInspectorEnabled()
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManager resolveViewManager(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean fuseboxEnabledRelease()
androidx.biometric.BiometricPrompt$CryptoObject: BiometricPrompt$CryptoObject(javax.crypto.Cipher)
com.facebook.react.uimanager.ReactShadowNode: void calculateLayout(float,float)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.oblador.keychain.cipherStorage.CipherStorage: java.lang.String getDefaultAliasServiceName()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.WritableMap popRemoteMessageMapFromMessagingStore(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: int getMinSupportedApiLevel()
com.facebook.react.devsupport.interfaces.StackFrame: java.lang.String getFileName()
com.facebook.react.ReactActivity: boolean onKeyLongPress(int,android.view.KeyEvent)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.facebook.react.runtime.internal.bolts.Task: void runContinuations()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry)
com.facebook.react.modules.network.CookieJarContainer: void setCookieJar(okhttp3.CookieJar)
com.facebook.react.views.textinput.ReactTextInputLocalData: void apply(android.widget.EditText)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
com.facebook.react.modules.core.JavaTimerManager: void onHeadlessJsTaskFinish(int)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: ReactNativeNewArchitectureFeatureFlags()
com.facebook.react.runtime.ReactSurfaceImpl: int getSurfaceID()
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: float getYogaSize(float,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
com.learnium.RNDeviceInfo.RNDeviceModule: void getBaseOs(com.facebook.react.bridge.Promise)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: void onPackagerReloadCommand$lambda$0(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.fabric.FabricUIManager$4: java.lang.String toString()
androidx.appcompat.widget.SwitchCompat: void onMeasure(int,int)
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: java.lang.Object next()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.facebook.react.runtime.ReactSurfaceImpl: android.content.Context getContext()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void endLayoutAnimation(int,boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String getName()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getAffectedLayoutNodesCountTime()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.bridge.JavaOnlyArray$Companion: JavaOnlyArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.runtime.BindingsInstaller$Companion: BindingsInstaller$Companion()
org.pgsqlite.SQLitePlugin: void echoStringValue(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.GlobalImageLoadListener: void onLoadAttempt(android.net.Uri)
com.facebook.react.views.image.ReactImageManager$Companion: ReactImageManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key extractGeneratedKey(java.lang.String,com.oblador.keychain.SecurityLevel,java.util.concurrent.atomic.AtomicInteger)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: int getKey()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setBackgroundColor(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: RadialGradient$GradientSize$KeywordType(java.lang.String,int,java.lang.String)
com.facebook.react.touch.OnInterceptTouchEventListener: boolean onInterceptTouchEvent(android.view.ViewGroup,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.devsupport.DevSupportManagerBase: void hidePausedInDebuggerOverlay()
com.facebook.react.fabric.SurfaceHandlerBinding$Companion: SurfaceHandlerBinding$Companion()
com.facebook.crypto.cipher.NativeGCMCipher: int nativeEncryptInit(byte[],byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void fetchWithRequest(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback,okhttp3.Request)
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel[] $values()
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: boolean enableBridgelessArchitecture()
com.facebook.hermes.intl.IPlatformNumberFormatter: java.lang.String fieldToString(java.text.AttributedCharacterIterator$Attribute,double)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.hermes.intl.LocaleObjectAndroid: LocaleObjectAndroid(java.util.Locale)
com.facebook.react.views.scroll.ReactScrollViewHelper: void forceUpdateState(android.view.ViewGroup)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$$inlined$Iterable$1: ReactPackageHelper$getNativeModuleIterator$$inlined$Iterable$1(java.util.List)
androidx.biometric.BiometricManager: BiometricManager(androidx.biometric.BiometricManager$Injector)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: int toICUTimeStyle(com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTitle(android.view.View,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaScriptTimerExecutor access$getJavaScriptTimerExecutor$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF getBorderBoxRect()
com.facebook.react.uimanager.ReactShadowNodeImpl: float getPadding(int)
com.nozbe.watermelondb.WMDatabaseBridge: void find(int,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
com.facebook.imagepipeline.request.ImageRequest: boolean getProgressiveRenderingEnabled()
com.facebook.react.views.safeareaview.ReactSafeAreaView: ReactSafeAreaView(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.hermes.intl.OptionHelpers: OptionHelpers()
com.facebook.react.CoreModulesPackage$1: CoreModulesPackage$1(com.facebook.react.CoreModulesPackage)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Shader getBackgroundImageShader()
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.react.uimanager.UIViewOperationQueue$1: UIViewOperationQueue$1(com.facebook.react.uimanager.UIViewOperationQueue,int,java.util.ArrayList,java.util.ArrayDeque,java.util.ArrayList,long,long,long,long)
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeExtensionKey(java.lang.CharSequence,int,int)
com.facebook.react.devsupport.DevSupportManagerBase: void reloadJSFromServer(java.lang.String,com.facebook.react.devsupport.interfaces.BundleLoadCallback)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] $values()
com.facebook.react.uimanager.style.LinearGradient$Direction: LinearGradient$Direction(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLocalData(java.lang.Object)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int,int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.facebook.react.jstasks.HeadlessJsTaskEventListener: void onHeadlessJsTaskStart(int)
com.facebook.react.common.mapbuffer.MapBuffer: double getDouble(int)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setOverflow(com.facebook.yoga.YogaOverflow)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(java.lang.String,com.facebook.react.bridge.WritableMap,long,boolean)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.facebook.react.ReactDelegate: void onActivityResult(int,int,android.content.Intent,boolean)
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: int getNodeTag()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.MatrixMathHelper: double degreesToRadians(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.runtime.internal.bolts.Task: boolean trySetCancelled$ReactAndroid_release()
com.facebook.react.runtime.internal.bolts.Task: boolean isCompleted()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: android.graphics.drawable.Drawable[] createLayersArray(android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable)
com.facebook.react.viewmanagers.RNSSearchBarManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.devsupport.FpsView$Companion: FpsView$Companion()
com.facebook.react.uimanager.NativeKind: NativeKind(java.lang.String,int)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.biometric.BiometricFragment$2: void onChanged(androidx.biometric.BiometricErrorData)
com.facebook.react.uimanager.UIManagerModule: void markActiveTouchForTag(int,int)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.nozbe.watermelondb.WMDatabase: com.nozbe.watermelondb.WMDatabase buildDatabase(java.lang.String,android.content.Context,int)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.facebook.react.animated.NativeAnimatedNodesManager$Companion: NativeAnimatedNodesManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getOrCreateDestroyTask(java.lang.String,java.lang.Exception)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.biometric.BiometricManager: int canAuthenticateWithFingerprintOrUnknownBiometric()
androidx.biometric.AuthenticatorUtils: boolean isSomeBiometricAllowed(int)
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: boolean hasNextKey()
com.facebook.react.ReactPackageLogger: void startProcessPackage()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean getDidJSHitFrameAndCleanup(long,long)
com.oblador.keychain.cipherStorage.CipherStorageBase: byte[] encryptString(java.security.Key,java.lang.String)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: int getItemViewType(int)
com.facebook.react.devsupport.interfaces.ErrorType: java.lang.String getDisplayName()
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType$Companion: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType fromString(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.view.DraweeView: void resetActualImage()
com.facebook.react.uimanager.events.Event$eventAnimationDriverMatchSpec$1: Event$eventAnimationDriverMatchSpec$1(com.facebook.react.uimanager.events.Event)
com.facebook.react.ReactActivityDelegate: java.lang.String getMainComponentName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableNewBackgroundAndBorderDrawables()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useTurboModuleInterop()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.biometric.FingerprintDialogFragment$1: void run()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useShadowNodeStateOnClone()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onChildViewRemoved(android.view.View,android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.runtime.ReactHostDelegate: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getTurboModuleManagerDelegateBuilder()
com.facebook.react.uimanager.ReactShadowNode: void setAlignSelf(com.facebook.yoga.YogaAlign)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomRightRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.uimanager.ViewManagerDelegate: void kotlinCompat$receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.RequestCloseEvent$Companion: RequestCloseEvent$Companion()
com.facebook.react.uimanager.JSPointerDispatcher: java.util.List filterByShouldDispatch(java.util.List,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.react.devsupport.DevServerHelper: void closePackagerConnection()
com.facebook.react.devsupport.MultipartStreamReader$Companion: MultipartStreamReader$Companion()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isTranformedExtensionTValueItem()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: DefaultTurboModuleManagerDelegate(com.facebook.react.bridge.ReactApplicationContext,java.util.List,java.util.List)
com.facebook.react.LazyReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderStyle(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.String)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] keys_delegate$lambda$1(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.devsupport.DefaultDevSupportManagerFactory$Companion: DefaultDevSupportManagerFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollView: void getClippingRect(android.graphics.Rect)
com.oblador.keychain.PrefsStorage: void removeEntry(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.views.text.PreparedLayoutTextView$Companion: java.util.List filterClickableSpans(java.lang.CharSequence)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener: void onAccessibilityStateChanged(boolean)
com.facebook.react.uimanager.events.TouchesHelper: void getTARGET_KEY$annotations()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableSynchronousStateUpdates()
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setCurrency(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay)
com.facebook.react.views.switchview.ReactSwitchManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void printSubTree(android.view.View,int)
com.facebook.react.views.text.TextAttributeProps: void setLetterSpacing(float)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String getEncryptionAlgorithm()
com.facebook.react.runtime.ReactHostImpl: void lambda$registerSegment$12(java.lang.String,int,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.runtime.ReactInstance)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.uimanager.PointerEvents: PointerEvents(java.lang.String,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeViewAt(int,int,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.facebook.react.uimanager.TransformHelper: double parseTranslateValue(java.lang.String,double)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String getString(int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.MapBuffer getMapBufferValue()
com.facebook.react.util.ExceptionDataHelper: ExceptionDataHelper()
com.facebook.react.devsupport.BundleDownloader$BundleInfo$Companion: BundleDownloader$BundleInfo$Companion()
com.facebook.react.fabric.ComponentFactory$Companion: ComponentFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.facebook.react.uimanager.events.FabricEventDispatcher$Companion: FabricEventDispatcher$Companion()
com.oblador.keychain.KeychainPackage: java.util.List createJSModules()
com.facebook.react.ReactHost: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.facebook.react.modules.core.JavaTimerManager: int timers$lambda$1(kotlin.jvm.functions.Function2,java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.style.CornerRadii: boolean equals(java.lang.Object)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$getCurrentIdleCallbackRunnable$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String toString()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.facebook.react.modules.network.NetworkingModule$ResponseHandler: com.facebook.react.bridge.WritableMap toResponseData(okhttp3.ResponseBody)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionHandleColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: com.facebook.react.packagerconnection.PackagerConnectionSettings getPackagerConnectionSettings()
com.facebook.react.ReactDelegate: ReactDelegate(android.app.Activity,com.facebook.react.ReactHost,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,int,java.lang.String,int,int)
com.facebook.react.devsupport.DevSupportManagerBase$showDevOptionsDialog$adapter$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.facebook.react.uimanager.ReactShadowNode: java.lang.Iterable calculateLayoutOnChildren()
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String encryptKey(java.lang.String)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.facebook.react.modules.i18nmanager.I18nManagerModule$Companion: I18nManagerModule$Companion()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableDestroyShadowTreeRevisionAsync()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean updateRuntimeShadowNodeReferencesOnCommit()
com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType: com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType[] values()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.facebook.crypto.cipher.NativeGCMCipher: int nativeDestroy()
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setUserAuthenticationRequired(boolean)
com.facebook.react.devsupport.MultipartStreamReader$Companion: MultipartStreamReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost$default(android.content.Context,com.facebook.react.ReactNativeHost,com.facebook.react.runtime.JSRuntimeFactory,int,java.lang.Object)
com.facebook.react.devsupport.ReleaseDevSupportManager: java.lang.String getDownloadedJSBundleFile()
androidx.fragment.app.DialogFragment: boolean access$200(androidx.fragment.app.DialogFragment)
com.oblador.keychain.KeychainModuleBuilder: KeychainModuleBuilder()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.facebook.react.fabric.SynchronousEvent: java.lang.String toString()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
androidx.biometric.BiometricFragment$5: void onChanged(java.lang.Boolean)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onStartTemporaryDetach()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerDevMenuCommand()
com.facebook.react.devsupport.interfaces.RedBoxHandler$ReportCompletedListener: void onReportError(android.text.SpannedString)
com.facebook.react.MemoryPressureRouter: void onTrimMemory(int)
com.facebook.react.devsupport.DevSettingsActivity: void onCreate(android.os.Bundle)
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onCompletion()
com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setEnabled(android.view.View,boolean)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableNativeMap getExtraData()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.style.LogicalEdge: LogicalEdge(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.text.AttributedCharacterIterator formatToParts(double)
com.facebook.react.devsupport.ReleaseDevSupportManager: void showPausedInDebuggerOverlay(java.lang.String,com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: void setSignature(java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$Companion: LayoutAnimationController$Companion()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: long getLastModifiedTimeFromBasicFileAttrs(java.io.File)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.common.ShakeDetector: void reset()
com.facebook.react.bridge.BridgeReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.uimanager.events.PointerEventHelper: double getPressure(int,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onBatchComplete()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: androidx.fragment.app.FragmentActivity getCurrentActivity()
com.facebook.react.devsupport.StackTraceHelper: java.lang.String formatFrameSource(com.facebook.react.devsupport.interfaces.StackFrame)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createColorMatrixEffect$default(com.facebook.react.uimanager.FilterHelper,android.graphics.ColorMatrix,android.graphics.RenderEffect,int,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
com.facebook.react.views.textinput.ReactTextInputTextWatcher: ReactTextInputTextWatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.facebook.react.devsupport.ReleaseDevSupportManager: void showDevOptionsDialog()
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReadableMapBuilder: void put(java.lang.String,boolean)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task onSuccess$lambda$12(com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.uimanager.drawable.BorderDrawable: void invalidateSelf()
com.facebook.react.HeadlessJsTaskService: void invokeStartTask(com.facebook.react.bridge.ReactContext,com.facebook.react.jstasks.HeadlessJsTaskConfig)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getConcurrentReactEnabled()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isRefreshing()
com.facebook.react.views.modal.ReactModalHostManager$Companion: ReactModalHostManager$Companion()
androidx.biometric.BiometricFragment$9: void run()
com.facebook.hermes.intl.JSObjects: void Put(java.lang.Object,java.lang.String,java.lang.Object)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJSIReturnKind(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.react.views.modal.ReactModalHostView: void setDialogRootViewGroupTestId(java.lang.String)
com.facebook.react.ReactRootView: boolean isFabric()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.biometric.BiometricViewModel: void setAwaitingResult(boolean)
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getSourceMapUrl()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNode: float getLayoutX()
com.facebook.react.uimanager.events.TouchesHelper: void sendTouchEvent(com.facebook.react.uimanager.events.RCTModernEventEmitter,com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopLeft(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManager build()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setShouldShowHintSearchIcon(android.view.View,boolean)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.react.interfaces.TaskInterface: void waitForCompletion()
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler,com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.views.scroll.ReactScrollView: boolean isScrollPerfLoggingEnabled()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewCulling()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: java.lang.String toUpperString()
com.facebook.react.devsupport.LogBoxModule: void invalidate$lambda$2(com.facebook.react.devsupport.LogBoxModule)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String getCipherStorageName()
com.facebook.react.views.scroll.ReactScrollView: void requestChildFocus(android.view.View,android.view.View)
androidx.biometric.AuthenticationCallbackProvider$1: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: android.graphics.Typeface apply(android.graphics.Typeface)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] $values()
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: int read(byte[],int,int)
com.facebook.react.uimanager.style.ColorEdges: int component4()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface startSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.animated.NativeAnimatedModule$flattenAnimatedNodeOffset$1: NativeAnimatedModule$flattenAnimatedNodeOffset$1(com.facebook.react.animated.NativeAnimatedModule,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setScreenReaderFocusable(android.view.View,boolean)
com.facebook.react.views.textinput.SelectionWatcher: void onSelectionChanged(int,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: com.facebook.react.common.mapbuffer.MapBuffer$Entry next()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.defaults.DefaultReactNativeHost: void clear()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec access$getMAIN_UI_SPEC$cp()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void blur(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onHostPause()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenY()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setBorder(int,float)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: AsyncStorageModule$3(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder)
androidx.biometric.CancellationSignalProvider$Api16Impl: android.os.CancellationSignal create()
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType[] values()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setReactTag(int)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStyleHeight()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupportedAbisSync()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enablePropsUpdateReconciliationAndroid()
com.facebook.react.views.scroll.ReactScrollViewManager$Companion: java.util.Map createExportedCustomDirectEventTypeConstants()
com.oblador.vectoricons.VectorIconsPackage: VectorIconsPackage()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTint(int)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.devsupport.BundleDownloader$Companion: boolean storePlainJSInFile(okio.BufferedSource,java.io.File)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.drawerlayout.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodeFromView$1: NativeAnimatedModule$disconnectAnimatedNodeFromView$1(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void addCoalescingKey(long)
com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable getText()
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getDescription()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component13()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupportedMediaTypeList(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CxxModuleWrapper$Companion: CxxModuleWrapper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.react.views.textinput.ReactEditText: void maybeSetSelection(int,int)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.views.text.ReactTextUpdate: int getTextBreakStrategy()
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.facebook.react.bridge.DynamicFromMap$Companion$pool$1: java.lang.Object initialValue()
com.facebook.react.viewmanagers.UnimplementedNativeViewManagerInterface: void setName(android.view.View,java.lang.String)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void connect()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.react.views.imagehelper.ImageSource$Companion: com.facebook.react.views.imagehelper.ImageSource getTransparentBitmapImageSource(android.content.Context)
androidx.biometric.BiometricFragment: void handleConfirmCredentialResult(int)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getAvailableLocationProvidersSync()
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
androidx.biometric.CryptoObjectUtils: android.hardware.biometrics.BiometricPrompt$CryptoObject wrapForBiometricPrompt(androidx.biometric.BiometricPrompt$CryptoObject)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float getFullBorderWidth()
com.facebook.react.uimanager.ReactShadowNode: void setIsLayoutOnly(boolean)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: SurfaceMountingManager$1(com.facebook.react.fabric.mounting.SurfaceMountingManager,int,int,int,android.view.ViewGroup)
com.facebook.react.module.annotations.ReactModule: boolean hasConstants()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Experimental_Android: ReactNativeFeatureFlagsOverrides_RNOSS_Experimental_Android()
com.facebook.react.views.textinput.ReactEditText: void onAttachedToWindow()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate$Companion: TurboModuleManagerDelegate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Integer component3()
com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException parse(java.lang.String,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.facebook.react.uimanager.PixelUtil: PixelUtil()
com.facebook.react.views.text.PreparedLayoutTextView: void setSelectionColor(java.lang.Integer)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: java.lang.String toString()
com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics: TextLayoutManager$AttachmentMetrics()
com.facebook.react.fabric.mounting.SurfaceMountingManager: android.view.View getView(int)
com.facebook.react.uimanager.PixelUtil: float dpToPx(int)
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.ReleaseDevSupportManager: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: boolean install()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: java.lang.String nextKey()
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
androidx.biometric.PackageUtils: PackageUtils()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setCustomPackagerCommandHandlers(java.util.Map)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineColor(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.facebook.hermes.intl.LocaleObjectICU: LocaleObjectICU(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.blob.BlobModule$networkingRequestBodyHandler$1: okhttp3.RequestBody toRequestBody(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.drawer.events.DrawerClosedEvent: DrawerClosedEvent(int,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthStretchJNI(long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setLetterSpacing(com.facebook.react.views.text.ReactTextView,float)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.zoontek.rnpermissions.RNPermissionsModule: void checkLocationAccuracy(com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: void getType(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.defaults.DefaultReactActivityDelegate: DefaultReactActivityDelegate(com.facebook.react.ReactActivity,java.lang.String,boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendReduceMotionChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.devsupport.ReactInstanceDevHelper: void onJSBundleLoadedFromServer()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForFalse(java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.facebook.react.ReactNativeHost: void clear()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task access$getTASK_TRUE$cp()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.biometric.CryptoObjectUtils$Api30Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(android.security.identity.IdentityCredential)
com.facebook.react.common.DebugServerException$Companion: com.facebook.react.common.DebugServerException parse(java.lang.String,java.lang.String)
com.facebook.react.uimanager.style.ColorEdges: com.facebook.react.uimanager.style.ColorEdges copy$default(com.facebook.react.uimanager.style.ColorEdges,int,int,int,int,int,java.lang.Object)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.facebook.react.modules.appearance.AppearanceModule$Companion: AppearanceModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.LengthPercentage getPosition()
androidx.fragment.app.DialogFragment: androidx.activity.ComponentDialog requireComponentDialog()
androidx.biometric.BiometricFragment$ShowPromptForAuthenticationRunnable: BiometricFragment$ShowPromptForAuthenticationRunnable(androidx.biometric.BiometricFragment)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setDevBundleDownloadListener(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.facebook.hermes.intl.JSRangeErrorException: JSRangeErrorException(java.lang.String)
com.facebook.react.modules.core.ReactChoreographer$Companion: ReactChoreographer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: boolean canRetry()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.react.views.textinput.ReactEditText: void setContextMenuHidden(boolean)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: ReactTextInputBlurEvent(int)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandlerHelper(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
com.facebook.react.uimanager.style.ProcessedColorStop: ProcessedColorStop()
com.facebook.react.animated.AnimatedNode$Companion: AnimatedNode$Companion()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: InsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.common.JavascriptException: void setExtraDataAsJson(java.lang.String)
com.facebook.react.bridge.NativeArgumentsParseException$Companion: NativeArgumentsParseException$Companion()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component6()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableNetworkEventReporting()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: void addListener(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: java.util.Collection getLazyViewManagerNames()
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.biometric.BiometricViewModel: java.util.concurrent.Executor getClientExecutor()
com.facebook.react.runtime.ReactHostImpl: void onHostPause(android.app.Activity)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libmapbufferjni_so()
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.oblador.keychain.KeychainModule: java.lang.String getServiceOrDefault(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] $values()
androidx.appcompat.widget.SwitchCompat: void jumpDrawablesToCurrentState()
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: void invalidate()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator: int getFlingExtrapolatedDistance(int)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: org.json.JSONObject toJSON()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitLayoutChangeEvent(android.view.ViewGroup)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void dispatchEvent(java.lang.String,int,int)
com.facebook.react.views.text.TextLayoutManager: long measureText(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,com.facebook.react.views.text.ReactTextViewManagerCallback,float[])
com.facebook.react.ReactHost: void removeBeforeDestroyListener(kotlin.jvm.functions.Function0)
com.facebook.react.uimanager.util.ReactFindViewUtil: void removeViewListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void addView(com.facebook.react.views.text.PreparedLayoutTextView,android.view.View,int)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect parseFilters(com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformNumberFormatter: java.lang.String[] getAvailableLocales()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.facebook.react.uimanager.events.TouchEvent: java.lang.String getEventName()
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.swmansion.reanimated.NativeReanimatedModuleSpec: NativeReanimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManagerDelegate,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.events.Event: com.facebook.react.bridge.WritableMap getEventData()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.swmansion.rnscreens.SearchBarManager: void focus(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.uimanager.BaseViewManager: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationEnd(android.view.animation.Animation)
com.facebook.react.devsupport.interfaces.DevSupportManager: void showNewJavaError(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
com.facebook.imagepipeline.request.ImageRequest: void setUseCachedHashcodeInEquals(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: void override(java.lang.Object)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.ReactActivity$1: ReactActivity$1(com.facebook.react.ReactActivity,boolean)
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.facebook.react.jstasks.HeadlessJsTaskEventListener: void onHeadlessJsTaskFinish(int)
com.facebook.react.uimanager.ReactShadowNode: boolean hasUnseenUpdates()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: void setCurrentIndex(int)
com.facebook.react.devsupport.interfaces.DevSupportManager: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.react.runtime.BridgelessReactContext: boolean hasNativeModule(java.lang.Class)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.MountingManager: MountingManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor)
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForShadowNodeClass(java.lang.Class)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.bridge.CatalystInstance: void initialize()
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.runtime.ReactHostImpl getReactHost$ReactAndroid_release()
androidx.biometric.BiometricPrompt$AuthenticationResult: androidx.biometric.BiometricPrompt$CryptoObject getCryptoObject()
com.oblador.keychain.KeychainModuleBuilder: void validate()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void attachRootView(android.view.View,com.facebook.react.uimanager.ThemedReactContext)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginAuto(int)
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentageType component2()
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$Companion: BaseLayoutAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.R$integer: R$integer()
com.facebook.react.animated.ObjectAnimatedNode: ObjectAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri getUri()
com.facebook.react.modules.debug.DevSettingsModule: void reload$lambda$0(com.facebook.react.modules.debug.DevSettingsModule)
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBlurEffect(float,android.graphics.RenderEffect)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper: com.facebook.react.runtime.ReactInstance unwrap(com.facebook.react.runtime.internal.bolts.Task,java.lang.String)
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRootTag(int)
com.facebook.react.runtime.internal.bolts.Task: void waitForCompletion()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedPreFling(android.view.View,float,float)
com.oblador.keychain.KeychainModule: void getSupportedBiometryType(com.facebook.react.bridge.Promise)
androidx.biometric.BiometricViewModel$CallbackListener: void onFailure()
com.facebook.react.uimanager.OnLayoutEvent: void getHeight$ReactAndroid_release$annotations()
com.facebook.react.fabric.mounting.mountitems.BatchMountItem: boolean isBatchEmpty()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager$Companion: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.fabric.SynchronousEvent: int hashCode()
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setCurrency(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReloadTask$33(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.nozbe.watermelondb.WMDatabaseBridge: void withDriver(int,com.facebook.react.bridge.Promise,com.nozbe.watermelondb.WMDatabaseBridge$ParamFunction,java.lang.String)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createSepiaColorMatrix(float)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.facebook.react.bridge.BridgeReactContext: boolean hasActiveReactInstance()
com.facebook.react.runtime.JSTimerExecutor: void callIdleCallbacks(double)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component12()
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnative_so()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.facebook.react.uimanager.ReferenceStateWrapper: java.lang.Object getStateDataReference()
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeExtensionAttribute(java.lang.CharSequence,int,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void addListener(java.lang.String)
com.facebook.hermes.intl.LocaleIdentifier: java.lang.String canonicalizeLocaleId(java.lang.String)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.RedBoxContentView access$getRedBoxContentView$p(com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.runtime.ReactSurfaceView: void onChildEndedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.lang.String toString()
com.facebook.react.bridge.DynamicFromMap: int asInt$lambda$3(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: IPlatformDateTimeFormatter$DateStyle(java.lang.String,int)
androidx.biometric.BiometricFragment$8: BiometricFragment$8(androidx.biometric.BiometricFragment,int,java.lang.CharSequence)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: AnimationFrameCallback(com.facebook.jni.HybridData)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule lambda$initialize$1(java.util.Map,java.lang.String)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer getMapBuffer(int)
com.facebook.react.R$xml: R$xml()
com.nozbe.watermelondb.Queries: Queries()
com.facebook.react.modules.network.ForwardingCookieHandler: void put(java.net.URI,java.util.Map)
com.facebook.react.runtime.BridgelessCatalystInstance: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.uimanager.style.CornerRadii: com.facebook.react.uimanager.style.CornerRadii copy$default(com.facebook.react.uimanager.style.CornerRadii,float,float,int,java.lang.Object)
com.facebook.react.runtime.JSCInstance$Companion: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetViewWithPointerEvents$default(com.facebook.react.uimanager.TouchTargetHelper,float[],android.view.View,java.util.List,int,java.lang.Object)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: NativeViewHierarchyOptimizer$NodeIndexPair(com.facebook.react.uimanager.ReactShadowNode,int)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.biometric.BiometricManager$Injector: boolean isDeviceSecuredWithCredential()
com.facebook.react.devsupport.DevSupportManagerBase: void reportBundleLoadingFailure$lambda$23(java.lang.Exception,com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext,int)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForDeviceDimensionsChanges()
com.facebook.react.animated.SpringAnimation$PhysicsState: int hashCode()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.uimanager.ReactShadowNodeImpl: void removeAllNativeChildren()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getOriginalMessage()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignItems(com.facebook.yoga.YogaAlign)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.biometric.BiometricFragment: BiometricFragment()
com.facebook.react.animated.ObjectAnimatedNode: com.facebook.react.bridge.JavaOnlyArray collectViewUpdatesHelper(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.facebook.react.modules.blob.BlobModule$networkingRequestBodyHandler$1: boolean supports(com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.react.views.textinput.ReactEditText: void clearFocusAndMaybeRefocus$ReactAndroid_release()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: java.util.List addCxxReactPackage$lambda$1$lambda$0(kotlin.jvm.functions.Function0,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl$1: ReactInstanceManager$InspectorTargetDelegateImpl$1(com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl,com.facebook.react.ReactInstanceManager)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void endLayoutAnimation(int,boolean)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerEnforced(int,java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.internal.AndroidChoreographerProvider$AndroidChoreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: boolean trySetResult(java.lang.Object)
com.facebook.react.devsupport.PackagerStatusCheck$run$1: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void kotlinCompat$setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1: void onHostResume()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeMountItemsOnViewAttach()
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.fabric.mounting.MountingManager: boolean isWaitingForViewAttach(int)
com.facebook.react.ReactHost: void onConfigurationChanged(android.content.Context)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean useTurboModules()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec getEventAnimationDriverMatchSpec()
androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
com.facebook.react.devsupport.DevServerHelper$Companion: java.lang.String access$createResourceURL(com.facebook.react.devsupport.DevServerHelper$Companion,java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrolledInView(android.view.View)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.biometric.BiometricFragment$3: void onChanged(java.lang.Object)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.uimanager.MatrixMathHelper: double[] createIdentityMatrix()
com.facebook.react.uimanager.OnLayoutEvent: int getX$ReactAndroid_release()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void moveToStart(float)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)
com.facebook.react.modules.dialog.AlertFragment$Companion: android.view.View getAccessibleTitle(android.content.Context,java.lang.String)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.facebook.react.animated.AnimatedNodeValueListener: void onValueUpdate(double,double)
org.pgsqlite.SQLitePlugin: void closeDatabase(java.lang.String,org.pgsqlite.CallbackContext)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: void executeWithExceptions()
com.facebook.react.views.textinput.ReactTextInputManager: void setLineHeight(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void reset()
com.swmansion.reanimated.NativeProxy$1: void startAnimation(int,int,java.util.HashMap)
com.facebook.react.uimanager.events.FabricEventDispatcher: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[],kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.Event: void dispose()
com.facebook.react.DebugCorePackage: java.util.Map getViewManagersMap()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void lambda$updateInsets$1(int,int)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void attachGestureHandler(double,double,double)
androidx.core.view.WindowInsetsCompat$Impl: void setSystemUiVisibility(int)
com.facebook.react.shell.MainReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void onFragmentUpdate(androidx.fragment.app.Fragment,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidValueError(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] access$getValueMap$cp()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult encrypt(java.lang.String,java.lang.String,java.lang.String,com.oblador.keychain.SecurityLevel)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.common.mapbuffer.MapBuffer$Entry: int getIntValue()
androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)
com.facebook.react.uimanager.UIImplementation: void onHostResume()
androidx.activity.OnBackPressedCallback: kotlin.jvm.functions.Function0 getEnabledChangedCallback$activity_release()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean updateRuntimeShadowNodeReferencesOnCommit()
com.facebook.hermes.intl.JSObjects: java.lang.Object newBoolean()
androidx.security.crypto.EncryptedSharedPreferences$Editor: void notifyListeners()
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
androidx.biometric.FingerprintDialogFragment$2: FingerprintDialogFragment$2(androidx.biometric.FingerprintDialogFragment)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float getInnerBorderRadius(float,float)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer access$getChoreographer$cp()
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.switchview.ReactSwitch: void setBackgroundColor(int)
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1(com.facebook.react.devsupport.DevSupportManagerBase,java.lang.String,java.io.File,com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: int getMinSupportedApiLevel()
com.nozbe.watermelondb.WMDatabase: void delete(java.lang.String,java.lang.Object[])
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(android.view.View,java.lang.String)
com.facebook.react.bridge.JSBundleLoader$Companion: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils: PreparedLayoutTextView$Api34Utils()
com.facebook.react.common.assets.ReactFontManager$Companion: android.graphics.Typeface access$createAssetTypeface(com.facebook.react.common.assets.ReactFontManager$Companion,java.lang.String,int,android.content.res.AssetManager)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper: boolean isTouchPointInView(float,float,android.view.View)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier getInstance(android.content.Context)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getInterpolation(float)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreact_newarchdefaults_so()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: int toICUDateStyle(com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Float getOutlineWidth(android.view.View)
com.facebook.react.HeadlessJsTaskService: void access$invokeStartTask(com.facebook.react.HeadlessJsTaskService,com.facebook.react.bridge.ReactContext,com.facebook.react.jstasks.HeadlessJsTaskConfig)
com.facebook.react.uimanager.ReactShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.facebook.react.module.model.ReactModuleInfo: boolean classIsTurboModule(java.lang.Class)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createPreAllocateViewMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.uimanager.PixelUtil: float dpToPx(double)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setSignDisplay(com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPendingContentOffsets(int,int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void access$setCustomClientBuilder$cp(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.hermes.intl.PlatformNumberFormatterICU: java.lang.String[] getAvailableLocales()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isTranformedExtensionTKey()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineColor(android.view.View,java.lang.Integer)
androidx.biometric.FingerprintDialogFragment$4: void onChanged(java.lang.CharSequence)
com.facebook.react.runtime.ReactInstance$Companion: com.facebook.react.bridge.NativeMap getConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map)
com.facebook.hermes.intl.JSObjects: java.lang.Object newBoolean(boolean)
com.facebook.react.uimanager.events.Event: void init(int,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: int getSurfaceId()
com.facebook.react.fabric.FabricUIManager$5: FabricUIManager$5(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.uimanager.JSPointerDispatcher: java.util.List findHitPathIntersection(java.util.List,java.util.List)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: java.lang.Throwable getError()
com.facebook.react.runtime.ReactHostImpl$3: void onError(java.lang.Exception)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.facebook.react.runtime.BridgelessCatalystInstance: void getJSCallInvokerHolder$annotations()
com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: int getDelay()
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$14(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.uimanager.LayoutDirectionUtil: com.facebook.yoga.YogaDirection toYogaFromAndroid(int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.Integer getColumn()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.security.crypto.MasterKeys: void generateKey(android.security.keystore.KeyGenParameterSpec)
com.facebook.react.internal.SystraceSection: SystraceSection(java.lang.String)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.zoontek.rnpermissions.RNPermissionsModule: void checkNotifications(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.imagepipeline.request.ImageRequest: java.lang.String getDiskCacheId()
com.facebook.react.views.text.PreparedLayoutTextView: void setOverflow(com.facebook.react.uimanager.style.Overflow)
androidx.fragment.app.Fragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.facebook.react.uimanager.JSTouchDispatcher: int findTargetTagAndSetCoordinates(android.view.MotionEvent)
com.facebook.react.viewmanagers.RNSScreenStackManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: short getCoalescingKey(long)
com.swmansion.rnscreens.ScreenContentWrapper: void setDelegate$react_native_screens_release(com.swmansion.rnscreens.ScreenContentWrapper$OnLayoutCallback)
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool pool_delegate$lambda$0()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
androidx.drawerlayout.widget.DrawerLayout: void cancelChildViewTouch()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableArrayBuilder: void add(long)
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface reload(java.lang.String)
com.facebook.react.uimanager.style.LogicalEdge$Companion: com.facebook.react.uimanager.style.LogicalEdge fromSpacingType(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void getClippingRect(android.graphics.Rect)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setFractionDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSepiaEffect(float,android.graphics.RenderEffect)
com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate: AndroidProgressBarManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.animated.SubtractionAnimatedNode: SubtractionAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.facebook.soloader.SysUtil: java.lang.reflect.Method getNativeLoadRuntimeMethod()
com.facebook.react.ReactHost: com.facebook.react.interfaces.fabric.ReactSurface createSurface(android.content.Context,java.lang.String,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getSurfaceId()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setKeepActivity(boolean)
com.facebook.react.views.textinput.ReactEditText$Companion: boolean access$sameTextForSpan(com.facebook.react.views.textinput.ReactEditText$Companion,android.text.Editable,android.text.SpannableStringBuilder,int,int)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderBottomRightRadius(float)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.text.TextAttributeProps: void setTextDecorationLine(java.lang.String)
com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap,com.facebook.react.modules.fresco.ImageCacheControl)
com.facebook.react.runtime.ReactSurfaceImpl$Companion: com.facebook.react.runtime.ReactSurfaceImpl createWithView(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.react.modules.image.ImageLoaderModule$Companion: ImageLoaderModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void setModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.PreparedLayoutTextView: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ReactShadowNode: void markUpdated()
androidx.biometric.FingerprintDialogFragment$3: void onChanged(java.lang.Integer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
androidx.biometric.KeyguardUtils$Api23Impl: android.app.KeyguardManager getKeyguardManager(android.content.Context)
com.facebook.react.views.drawer.ReactDrawerLayout$Companion: ReactDrawerLayout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.CharSequence getTalkbackDescription(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] $values()
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)
com.facebook.react.runtime.BridgelessAtomicRef: BridgelessAtomicRef()
androidx.biometric.FingerprintDialogFragment$4: void onChanged(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack()
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.devsupport.BridgelessDevSupportManager: java.lang.String getUniqueTag()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.blob.BlobModule: double getLastModifiedFromUri(android.net.Uri)
com.facebook.react.uimanager.events.Event: int getEventCategory()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: PointerEventHelper$EVENT(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didReceiveMessage(java.lang.String)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setLazyViewManagersEnabled(boolean)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.uimanager.annotations.ReactPropGroup: int defaultInt()
com.facebook.react.views.scroll.ReactScrollViewManager$Companion: ReactScrollViewManager$Companion()
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.facebook.react.runtime.ReactHostInspectorTarget: boolean isValid()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap,com.facebook.react.modules.fresco.ImageCacheControl)
com.facebook.react.runtime.ReactLifecycleStateManager: com.facebook.react.common.LifecycleState getLifecycleState()
com.nozbe.watermelondb.WMDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.hermes.intl.JSObjects: boolean isNumber(java.lang.Object)
com.facebook.react.uimanager.ViewManager: ViewManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactEditText: void onDetachedFromWindow()
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: void onSetPausedInDebuggerMessage(java.lang.String)
com.facebook.hermes.intl.IntlTextUtils: boolean isExtensionSingleton(java.lang.CharSequence,int,int)
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$getBackingMap$p(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] $values()
com.facebook.react.views.modal.ReactModalHostView: void dismiss()
com.facebook.react.R$anim: R$anim()
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.facebook.react.views.text.TextAttributes: void setTextTransform(com.facebook.react.views.text.TextTransform)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$1()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isInstanceOf(java.lang.Object,java.lang.String)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: com.facebook.react.ReactPackageTurboModuleManagerDelegate build(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
androidx.biometric.BiometricErrorData: int getErrorCode()
androidx.fragment.app.Fragment: void onStart()
com.facebook.react.views.text.TextLayoutManager: java.lang.String getTextAlignmentAttr(com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.NativeViewHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.events.FabricEventDispatcher: java.util.concurrent.CopyOnWriteArrayList access$getPostEventDispatchListeners$p(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1: ReactEditText$customActionModeCallback$1(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType[] $values()
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: RNEncryptedStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateX(double[],double)
com.facebook.react.uimanager.ReanimatedUIImplementation: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component1()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setActivityState(android.view.View,float)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutDuration()
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
com.reactnativecommunity.cameraroll.CameraRollModule: void getPhotos(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.facebook.react.runtime.ReactInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void computeTargetView()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableNetworkEventReporting()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBoxShadow(android.view.View,java.util.List)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getBatchedExecutionTime()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule()
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] unbox-impl()
com.facebook.react.fabric.FabricUIManagerBinding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.common.network.OkHttpCallUtil: OkHttpCallUtil()
com.facebook.react.views.debuggingoverlay.TraceUpdate: TraceUpdate(int,android.graphics.RectF,int)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: int getValue()
androidx.biometric.BiometricErrorData: boolean isErrorMessageEqualTo(java.lang.CharSequence)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enablePropsUpdateReconciliationAndroid()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setUseDeveloperSupport(boolean)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: HermesExecutor$Companion()
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void onHostPause()
com.facebook.react.uimanager.ViewGroupManager$Companion: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BorderDrawable getBorder()
com.facebook.react.uimanager.style.CornerRadii: CornerRadii(com.facebook.react.uimanager.LengthPercentage,float,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionPercent(int,float)
com.facebook.react.bridge.ReactContext: void onHostDestroy(boolean)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor()
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel[] values()
com.nozbe.watermelondb.WMDatabaseBridge: void onCatalystInstanceDestroy()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.react.devsupport.PerftestDevSupportManager$devSettings$1: void onInternalSettingsChanged()
com.facebook.react.views.view.ReactViewGroup: void checkViewClippingTag(android.view.View,java.lang.Boolean)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean didEndFrameIdle(long,long)
com.facebook.react.views.image.ScaleTypeStartInside: java.lang.String toString()
com.facebook.react.packagerconnection.ReconnectingWebSocket: void sendMessage(java.lang.String)
com.facebook.react.ReactHost: void onHostResume(android.app.Activity)
androidx.biometric.BiometricViewModel: boolean isPromptShowing()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.uimanager.style.BorderInsets: android.graphics.RectF resolve(int,android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap,android.graphics.Bitmap)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Iterable calculateLayoutOnChildren()
com.facebook.react.uimanager.util.ReactFindViewUtil: void notifyViewRendered(android.view.View)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: void remove()
com.facebook.react.views.text.PreparedLayoutTextView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceSync()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.oblador.keychain.BuildConfig: BuildConfig()
com.facebook.react.modules.i18nmanager.I18nUtil: void setPref(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.text.TextAttributeProps: int getFontStyle()
com.facebook.hermes.intl.LocaleObjectICU: android.icu.util.ULocale getLocaleWithoutExtensions()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
okio.ForwardingSource: void close()
androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)
com.facebook.react.uimanager.LengthPercentage: LengthPercentage()
androidx.fragment.app.Fragment: void onDestroy()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.fragment.app.DialogFragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.react.uimanager.common.UIManagerType$Companion: UIManagerType$Companion()
com.facebook.react.views.progressbar.ProgressBarContainerView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.views.textinput.ReactEditText: boolean shouldBlurOnReturn()
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.JavaScriptModule getInteropModule(java.lang.Class)
com.facebook.hermes.intl.IntlTextUtils: boolean isTranformedExtensionTValueItem(java.lang.CharSequence,int,int)
com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState: com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
androidx.biometric.BiometricManager: int canAuthenticateWithStrongBiometricOnApi29()
com.facebook.react.runtime.BridgelessAtomicRef: BridgelessAtomicRef(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.facebook.react.bridge.Dynamic: void recycle()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
androidx.biometric.BiometricPrompt$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: void setRemoveClippedSubviews(boolean)
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.views.view.ReactDrawableHelper: ReactDrawableHelper()
com.facebook.hermes.intl.IntlTextUtils: boolean isAlpha(java.lang.CharSequence,int,int,int,int)
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$count$4(java.lang.String,com.facebook.react.bridge.ReadableArray,com.nozbe.watermelondb.WMDatabaseDriver)
com.facebook.react.ReactRootView$1: void run()
androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void onClick(android.content.DialogInterface,int)
kotlin.properties.ObservableProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
com.facebook.react.views.switchview.ReactSwitchEvent: java.lang.String getEventName()
com.facebook.react.views.text.TextAttributeProps: void setColor(java.lang.Integer)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstanceId(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1: void write(byte[],int,int)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage copy(float,com.facebook.react.uimanager.LengthPercentageType)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setSignificantDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1: void invoke(java.lang.Object[])
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.packagerconnection.PackagerConnectionSettings: PackagerConnectionSettings(android.content.Context)
com.oblador.keychain.PrefsStorage$ResultSet: PrefsStorage$ResultSet(java.lang.String,byte[],byte[])
com.facebook.hermes.intl.LocaleIdTokenizer: boolean hasMoreSubtags()
com.facebook.hermes.intl.NumberFormat: boolean isSanctionedSimpleUnitIdentifier(java.lang.String)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.OnScrollDispatchHelper: float getXFlingVelocity()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.uimanager.style.ColorEdges: int getTop()
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: TransformAnimatedNode$TransformConfig(com.facebook.react.animated.TransformAnimatedNode)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.String getFile()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: java.lang.String toString()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: java.lang.String toString()
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_END: int toSpacingType()
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask: java.lang.Void doInBackground(com.facebook.react.devsupport.interfaces.StackFrame[])
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface destroy(java.lang.String,java.lang.Exception,kotlin.jvm.functions.Function1)
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactInstanceManager$2: void destroyRootView(android.view.View)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: ReactNativeNewArchitectureFeatureFlagsDefaults(boolean)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JavaScriptExecutorFactory getDefaultJSExecutorFactory(java.lang.String,java.lang.String,android.content.Context)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.nozbe.watermelondb.WMDatabaseDriver: WMDatabaseDriver(android.content.Context,java.lang.String,com.nozbe.watermelondb.utils.Schema,boolean)
com.facebook.react.uimanager.JSTouchDispatcher: void sweepActiveTouchForTag(int,int,com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.security.Key generateKey(android.security.keystore.KeyGenParameterSpec)
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.NativeModuleRegistry processPackages(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.react.views.text.TextAttributeProps: void setMaxFontSizeMultiplier(float)
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String getName()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getTotalNativeNodeContributionToParent()
com.facebook.react.fabric.SurfaceHandlerBinding: void initHybrid(int,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onFinishTemporaryDetach()
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU$PatternUtils: PlatformDateTimeFormatterICU$PatternUtils()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollDelta(android.view.View)
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: double getJsFps()
com.facebook.react.MemoryPressureRouter: MemoryPressureRouter(android.content.Context)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle$lambda$2(android.app.Activity,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean access$requestFocusProgrammatically(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.ReactShadowNode: void removeAndDisposeAllChildren()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderStyle(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.react.uimanager.UIImplementation: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType[] $values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.facebook.react.common.ShakeDetector: void stop()
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isHotModuleReplacementEnabled()
com.facebook.react.bridge.BridgeReactContext: BridgeReactContext(android.content.Context)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setEndStart(com.facebook.react.uimanager.LengthPercentage)
androidx.fragment.app.Fragment: boolean isHidden()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void hasHms(com.facebook.react.bridge.Promise)
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: MultiSourceHelper$MultiSourceResult(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: boolean isNewArchitectureStrictModeEnabled()
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.facebook.react.packagerconnection.FileIoHandler$Companion: FileIoHandler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: AndroidSwipeRefreshLayoutManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.facebook.react.modules.blob.BlobModule$networkingRequestBodyHandler$1: BlobModule$networkingRequestBodyHandler$1(com.facebook.react.modules.blob.BlobModule)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
com.facebook.react.views.safeareaview.ReactSafeAreaViewShadowNode: ReactSafeAreaViewShadowNode()
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setFpsDebugEnabled(boolean)
androidx.biometric.AuthenticationCallbackProvider$1: void onAuthenticationFailed()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: WindowsInsetsManager(java.lang.ref.WeakReference,com.swmansion.reanimated.keyboard.Keyboard,com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] $values()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.biometric.AuthenticationCallbackProvider$Api28Impl: AuthenticationCallbackProvider$Api28Impl()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createHueRotateColorMatrix(float)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
androidx.security.crypto.MasterKey: java.lang.String toString()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.reanimated.NativeWorkletsModuleSpec: boolean installTurboModule(java.lang.String)
androidx.biometric.AuthenticatorUtils: boolean isDeviceCredentialAllowed(int)
com.facebook.hermes.intl.PlatformCollatorICU: com.facebook.hermes.intl.IPlatformCollator setNumericAttribute(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
org.pgsqlite.SQLitePlugin: void delete(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.biometric.BiometricFragment$10: BiometricFragment$10(androidx.biometric.BiometricFragment,int,java.lang.CharSequence)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.listener.RequestListener getRequestListener()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getServerIpAddress(android.content.Context,int)
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.JSTimerExecutor access$createJSTimerExecutor()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: java.lang.String getDescription()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.facebook.react.animated.FrameBasedAnimationDriver: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal access$getPool$cp()
com.facebook.react.devsupport.interfaces.DevLoadingViewManager: void hide()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$reload$5(java.lang.String)
androidx.biometric.BiometricFragment: boolean isManagingDeviceCredentialButton()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.views.textinput.ScrollWatcher: void onScrollChanged(int,int,int,int)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: void access$resetArray(com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion,double[])
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setBarTintColor(android.view.View,java.lang.Integer)
com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult: CipherStorage$EncryptionResult(byte[],byte[],com.oblador.keychain.cipherStorage.CipherStorage)
com.reactnativecommunity.netinfo.NetInfoModule: void addListener(java.lang.String)
com.facebook.react.packagerconnection.PackagerConnectionSettings: void resetDebugServerHost()
com.facebook.react.devsupport.ChangeBundleLocationDialog: void show$lambda$2(com.facebook.react.devsupport.ChangeBundleLocationDialog$ChangeBundleLocationDialogListener,android.widget.EditText,android.app.AlertDialog,android.view.View)
com.facebook.react.ReactHost: void onHostDestroy()
com.facebook.react.views.image.ImageLoadEvent: java.lang.String getEventName()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: AnimationsManager(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.facebook.drawee.drawable.ForwardingDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.runtime.ReactHostImpl: void onWindowFocusChange(boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.facebook.react.uimanager.style.ColorEdges: int component2()
com.facebook.react.uimanager.events.NativeGestureUtil: void notifyNativeGestureStarted(android.view.View,android.view.MotionEvent)
com.facebook.react.views.image.ReactImageView: boolean isTiled()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.bridge.BridgeReactContext: boolean hasCatalystInstance()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.views.text.PreparedLayout prepareLayout(int,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.facebook.react.uimanager.BackgroundStyleApplicator: void reset(android.view.View)
com.facebook.react.viewmanagers.RNCSafeAreaViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetView(float[],android.view.View,java.util.EnumSet,java.util.List)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.facebook.react.uimanager.MeasureSpecAssertions: MeasureSpecAssertions()
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.startup.InitializationProvider: InitializationProvider()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String)
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: ComputedBorderRadiusProp(java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useFabricInterop()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.common.futures.SimpleSettableFuture: void checkNotSet()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createContrastColorMatrix(float)
androidx.security.crypto.EncryptedSharedPreferences: java.lang.Object getDecryptedObject(java.lang.String)
com.facebook.react.bridge.BridgeSoLoader: BridgeSoLoader()
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.fabric.SynchronousEvent: int getViewTag()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
androidx.biometric.AuthenticatorUtils: boolean isWeakBiometricAllowed(int)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.react.views.view.WindowUtilKt: void setSystemBarsTranslucency(android.view.Window,boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.react.devsupport.BundleDownloader: void access$processMultipartResponse(com.facebook.react.devsupport.BundleDownloader,java.lang.String,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
com.facebook.react.devsupport.BridgeDevSupportManager: void handleReloadJS()
com.facebook.react.common.mapbuffer.MapBuffer: int getCount()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void willDispatchViewUpdates$lambda$0(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper)
androidx.activity.ComponentActivity: void ensureViewModelStore()
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] constructor-impl$default(java.lang.Integer[],int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
androidx.core.view.WindowInsetsCompat$Impl34: WindowInsetsCompat$Impl34(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl34)
com.facebook.react.views.textinput.ReactEditText: void onFocusChanged(boolean,int,android.graphics.Rect)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int librninstance_so()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode(com.facebook.react.bridge.ReadableMap,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: int access$001(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.devsupport.DevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair walkUpUntilNativeKindIsParent(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt: void access$cleanUp(java.util.ArrayList,long)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1: ReactInstanceManagerInspectorTarget$1(com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.learnium.RNDeviceInfo.RNDeviceModule: android.net.wifi.WifiInfo getWifiInfo()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBootloaderSync()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.String getName()
com.facebook.hermes.intl.Collator: void initializeCollator(java.util.List,java.util.Map)
com.facebook.react.common.assets.ReactFontManager: void addCustomFont(android.content.Context,java.lang.String,int)
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getLastErrorTitle()
com.facebook.react.uimanager.Spacing: void reset()
com.facebook.react.runtime.ReactHostImplDevHelper: android.view.View createRootView(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: ReactTextInputSubmitEditingEvent(int,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: void onPackagerDevMenuCommand$lambda$1(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.packagerconnection.FileIoHandler$1: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.modules.core.ReactChoreographer$Companion: void initialize(com.facebook.react.internal.ChoreographerProvider)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.View,android.view.View,int)
com.facebook.hermes.intl.LocaleObjectICU: android.icu.util.ULocale getLocale()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$sendMessage$8(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.nozbe.watermelondb.WMDatabaseBridge: void initialize(java.lang.Integer,java.lang.String,int,boolean,com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.biometric.AuthenticatorUtils: int getConsolidatedAuthenticators(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,int,java.lang.String,int,int)
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String getName()
com.facebook.react.uimanager.JSPointerDispatcher$1: JSPointerDispatcher$1(com.facebook.react.uimanager.JSPointerDispatcher,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher,boolean)
com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener: void onLayoutUpdated(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.ChangeBundleLocationDialog: void show$lambda$0(android.widget.EditText,java.lang.String,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.react.uimanager.ThemedReactContext: boolean hasActiveReactInstance()
com.facebook.react.devsupport.DevServerHelper: java.lang.String createBundleURL(java.lang.String,com.facebook.react.devsupport.DevServerHelper$BundleType,java.lang.String,boolean,boolean)
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.util.Map getAdditionalOptionsForPackager()
com.facebook.react.views.drawer.events.DrawerOpenedEvent: DrawerOpenedEvent(int)
com.facebook.react.modules.core.JavaTimerManager: void createAndMaybeCallTimer(int,int,double,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
com.facebook.react.module.model.ReactModuleInfoProvider: java.util.Map getReactModuleInfos()
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
com.facebook.react.modules.dialog.AlertFragment: void onClick(android.content.DialogInterface,int)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: java.lang.String getValue(com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void abort(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: void startNewBackgroundThread$lambda$1(com.facebook.react.common.futures.SimpleSettableFuture)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void installJSIBindings()
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.devsupport.PerftestDevSupportManager$devSettings$1: PerftestDevSupportManager$devSettings$1()
androidx.biometric.BiometricFragment$Api28Impl: android.hardware.biometrics.BiometricPrompt buildPrompt(android.hardware.biometrics.BiometricPrompt$Builder)
com.facebook.react.runtime.ReactSurfaceImpl: void attach(com.facebook.react.ReactHost)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: NetworkingModule$sendRequestInternal$2(com.facebook.react.modules.network.NetworkingModule,int,com.facebook.react.bridge.ReactApplicationContext,java.lang.String,boolean)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: java.lang.String getEventName()
com.facebook.react.devsupport.RedBoxContentView: void setExceptionDetails(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[])
com.facebook.react.runtime.ReactInstance: void loadJSBundle(com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] $values()
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void showMessage$lambda$0(com.facebook.react.devsupport.DefaultDevLoadingViewImplementation,java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: boolean getViewExists(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.devsupport.interfaces.DevSupportManager: void reloadJSFromServer(java.lang.String,com.facebook.react.devsupport.interfaces.BundleLoadCallback)
com.facebook.drawee.drawable.ForwardingDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.hermes.intl.DateTimeFormat: java.lang.Object DefaultTimeZone()
androidx.biometric.DeviceUtils: boolean isModelInList(android.content.Context,java.lang.String,int)
com.facebook.react.views.textinput.ReactEditText$editTextAccessibilityDelegate$1: ReactEditText$editTextAccessibilityDelegate$1(com.facebook.react.views.textinput.ReactEditText,boolean,int)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsAddListener(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme: java.lang.String getScheme()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$13()
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.modules.websocket.WebSocketModule: void access$setCustomClientBuilder$cp(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: CatalystInstanceImpl$InstanceCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setGestureEnabled(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper$Companion: com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper getInstance()
com.facebook.react.uimanager.events.EventDispatcherImpl$1: int compare(com.facebook.react.uimanager.events.Event,com.facebook.react.uimanager.events.Event)
com.facebook.react.devsupport.MultipartStreamReader: java.util.Map parseHeaders(okio.Buffer)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: ReactFontManager$TypefaceStyle(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: void write(byte[],int,int)
com.facebook.react.views.textinput.ReactEditText$Companion: ReactEditText$Companion()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl)
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: ReactNativeUtils$BorderRadii(float,float,float,float,float)
com.swmansion.reanimated.NodesManager$OnAnimationFrame: void onAnimationFrame(double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.bridge.UiThreadUtil: android.os.Handler getUiThreadHandler()
com.facebook.react.modules.debug.FpsDebugFrameCallback: void start(double)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setNavigationBarHidden(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $values()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.hermes.intl.OptionHelpers$OptionType: OptionHelpers$OptionType(java.lang.String,int)
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeExtensionKeyTypeItem(java.lang.CharSequence,int,int)
com.oblador.keychain.PrefsStorage: java.lang.String getKeyForPassword(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
androidx.biometric.PackageUtils: boolean hasSystemFeatureFingerprint(android.content.Context)
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: long getLongValue()
com.facebook.react.views.text.PreparedLayout: PreparedLayout(android.text.Layout,int)
com.facebook.react.ReactActivityDelegate: ReactActivityDelegate(android.app.Activity,java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.reactperflogger.NativeModulePerfLogger)
com.facebook.react.animated.ModulusAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.views.textinput.ReactEditText: boolean showSoftKeyboard()
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNodeImpl: void markLayoutSeen()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String getName()
com.facebook.react.uimanager.PixelUtil: float pxToDp(double)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion: void runAfterHostResume(com.facebook.react.bridge.ReactContext,java.lang.Runnable)
com.facebook.react.views.scroll.OnScrollDispatchHelper: OnScrollDispatchHelper()
com.facebook.react.runtime.ReactSurfaceView: boolean hasActiveReactContext()
com.facebook.react.views.text.internal.span.ReactAbsoluteSizeSpan: ReactAbsoluteSizeSpan(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isIdle()
com.facebook.react.ReactDelegate: boolean onKeyLongPress(int)
com.facebook.react.views.textinput.ReactTextInputManager$Companion: ReactTextInputManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isJSMinifyEnabled()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useTurboModuleInterop()
androidx.biometric.R$string: R$string()
com.oblador.keychain.cipherStorage.CipherStorageBase$Defaults: void lambda$static$1(javax.crypto.Cipher,java.security.Key,java.io.InputStream)
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void addMenuItem(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: kotlin.enums.EnumEntries getEntries()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: android.content.Context getContext()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task access$getTASK_CANCELLED$cp()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
com.facebook.hermes.intl.LocaleIdentifier: com.facebook.hermes.intl.ParsedLocaleIdentifier parseLocaleId(java.lang.String,com.facebook.hermes.intl.LocaleIdTokenizer)
com.facebook.react.views.textinput.ReactTextChangedEvent$Companion: ReactTextChangedEvent$Companion()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: void flush()
com.oblador.keychain.KeychainModule: void hasInternetCredentialsForServer(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetCornerRadius(android.view.View,float)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void incrementCoalescingKey(long)
com.facebook.react.uimanager.Spacing: Spacing()
com.facebook.react.devsupport.DevServerHelper: void access$setPackagerClient$p(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.packagerconnection.JSPackagerClient)
androidx.security.crypto.MasterKey: boolean isKeyStoreBacked()
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactHost toReactHost$ReactAndroid_release$default(com.facebook.react.defaults.DefaultReactNativeHost,android.content.Context,com.facebook.react.runtime.JSRuntimeFactory,int,java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
com.facebook.react.uimanager.style.RadialGradient$GradientSize: RadialGradient$GradientSize()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.crypto.cipher.NativeGCMCipher$STATE: com.facebook.crypto.cipher.NativeGCMCipher$STATE[] values()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.modules.debug.DevMenuModule: void reload()
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.NativeModule: void invalidate()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: void configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,java.lang.String,com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher,com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName,com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle,java.lang.Object,com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle,java.lang.Object)
com.facebook.react.uimanager.MatrixMathHelper: double v3Length(double[])
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.rnbiometrics.CreateSignatureCallback: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.runtime.ReactHostImpl: void onNewIntent(android.content.Intent)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation$Companion: LayoutCreateAnimation$Companion()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: ReactUnimplementedView(android.content.Context)
com.facebook.react.uimanager.style.LinearGradient: kotlin.Pair endPointsFromAngle(double,float,float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.facebook.react.runtime.ReactInstance$Companion: ReactInstance$Companion()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: ReanimatedSensorListener(com.swmansion.reanimated.nativeProxy.SensorSetter,double,android.view.Display)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: androidx.biometric.BiometricPrompt authenticateWithPrompt(androidx.fragment.app.FragmentActivity)
com.facebook.react.runtime.ReactLifecycleStateManager: void resumeReactContextIfHostResumed(com.facebook.react.bridge.ReactContext,android.app.Activity)
com.facebook.react.runtime.ReactHostImpl: java.lang.Void lambda$callAfterGetOrCreateReactInstance$18(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.uimanager.ViewManager: void trimMemory()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.ComputedBorderRadius resolve(int,android.content.Context,float,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidth(float)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.facebook.react.views.modal.ReactModalHostView: void removeView(android.view.View)
com.facebook.react.common.mapbuffer.MapBuffer: boolean contains(int)
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: LinearGradient$Direction$Angle(double)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void decrementPendingJSCalls()
com.facebook.hermes.intl.ILocaleObject: java.lang.String toCanonicalTagWithoutExtensions()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
com.facebook.react.ReactNativeHost: com.facebook.react.internal.ChoreographerProvider getChoreographerProvider()
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getDownloadedJSBundleFile()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getDevServerNetworkIpAndPort$ReactAndroid_release(android.content.Context)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setMinIntergerDigits(int)
com.facebook.react.touch.JSResponderHandler: JSResponderHandler()
com.facebook.react.views.image.ReactImageDownloadListener: void onIntermediateImageFailed(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.JavaOnlyMap: long getLong(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBrightnessEffect(float,android.graphics.RenderEffect)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void reconnect$lambda$2(com.facebook.react.packagerconnection.ReconnectingWebSocket)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitleHideShadow(android.view.View,boolean)
com.facebook.react.uimanager.annotations.ReactProp: float defaultFloat()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onDetachedFromWindow()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SwitchCompat: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical$ReactAndroid_release(int)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Dimensions: com.facebook.react.uimanager.LengthPercentage getX()
com.facebook.react.uimanager.ReactShadowNode: boolean isDirty()
com.facebook.react.animated.FrameBasedAnimationDriver: FrameBasedAnimationDriver(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.runtime.ReactSurfaceImpl createWithView(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.facebook.react.modules.systeminfo.AndroidInfoModule$Companion: AndroidInfoModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
com.facebook.react.views.text.PreparedLayout: android.text.Layout getLayout()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.animated.StyleAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.DebugCorePackage: java.util.Collection getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.DevSupportManagerBase: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
com.facebook.react.fabric.FabricUIManager$5: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.modules.network.RequestBodyUtil$create$1: RequestBodyUtil$create$1(okhttp3.MediaType,java.io.InputStream)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.biometric.BiometricViewModel: void setFingerprintDialogCancelPending(boolean)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion: com.facebook.jni.HybridData initHybrid(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$destroy$6(java.lang.String,java.lang.Exception,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostDestroy()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String getName()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getTotalNativeChildren()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
com.th3rdwave.safeareacontext.SafeAreaView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: ReactInstanceManagerInspectorTarget(com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate)
com.swmansion.reanimated.ReanimatedModule: void lambda$new$1()
com.facebook.react.fabric.StateWrapperImpl$Companion: StateWrapperImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.pgsqlite.SQLitePlugin: void startDatabase(java.lang.String,com.facebook.react.bridge.ReadableMap,org.pgsqlite.CallbackContext)
com.facebook.react.uimanager.style.LogicalEdge$TOP: LogicalEdge$TOP(java.lang.String,int)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
org.pgsqlite.SQLitePlugin: void bindArgsToStatement(android.database.sqlite.SQLiteStatement,com.facebook.react.bridge.ReadableArray)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
com.facebook.drawee.drawable.ForwardingDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.oblador.keychain.KeychainModule: void resetInternetCredentialsForServer(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.interfaces.DevSupportManager: void stopInspector()
org.pgsqlite.SQLitePlugin: boolean executeAndPossiblyThrow(org.pgsqlite.SQLitePlugin$Action,com.facebook.react.bridge.ReadableMap,org.pgsqlite.CallbackContext)
com.facebook.hermes.intl.LocaleObjectICU: java.lang.String toCanonicalTag()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void cancelPostTouchScrolling()
com.facebook.react.uimanager.events.PointerEvent: void onDispose()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.style.CornerRadii: float getHorizontal()
com.facebook.react.uimanager.ReactShadowNode: void setReactTag(int)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHardwareSync()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setDeviceCredentialAllowed(boolean)
com.reactnativecommunity.cameraroll.CameraRollModule: com.facebook.react.bridge.WritableMap convertMediaToMap(android.content.ContentResolver,android.database.Cursor,java.util.Set)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendInvertColorsChangeEvent()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String access$getGRANTED$p(com.facebook.react.modules.permissions.PermissionsModule)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.modules.dialog.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.soloader.OpenSourceMergedSoMapping: OpenSourceMergedSoMapping()
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.react.uimanager.style.BorderRadiusStyle: int hashCode()
com.swmansion.rnscreens.FabricEnabledHeaderSubviewViewGroup: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.text.ReactTextShadowNode: java.lang.Iterable calculateLayoutOnChildren()
com.facebook.react.views.text.ReactTypefaceUtils: int parseFontWeight(java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List drainConcurrentItemQueue(java.util.concurrent.ConcurrentLinkedQueue)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: java.lang.String getValue()
com.facebook.react.bridge.ActivityEventListener: void onUserLeaveHint(android.app.Activity)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayMode(int)
com.facebook.hermes.intl.LocaleObjectAndroid: com.facebook.hermes.intl.ILocaleObject cloneObject()
com.facebook.react.uimanager.ReactShadowNode: void removeAllNativeChildren()
com.facebook.react.modules.debug.FpsDebugFrameCallback: void doFrame(long)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: int getLast()
com.facebook.react.uimanager.events.TouchEvent: void onDispose()
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void dropGestureHandler(double)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$2: void onNotification(java.lang.Object)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setMinNumShakes(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.facebook.react.views.modal.ReactModalHostView: void removeViewAt(int)
com.facebook.react.common.ShakeDetector$ShakeListener: void onShake()
com.facebook.react.views.modal.RequestCloseEvent: RequestCloseEvent(int,int)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableViewRecyclingForText()
com.facebook.react.devsupport.DoubleTapReloadRecognizer$Companion: DoubleTapReloadRecognizer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$Style,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign,com.facebook.hermes.intl.IPlatformNumberFormatter$Notation,com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay)
com.facebook.react.uimanager.JSTouchDispatcher: JSTouchDispatcher(android.view.ViewGroup)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: void resetArray(double[])
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.OutlineStyle getOutlineStyle()
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Arguments: Arguments()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setAlpha(int)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.facebook.react.ReactInstanceManager: void showDevOptionsDialog()
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalMemorySync()
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: ReactNativeNewArchitectureFeatureFlagsDefaults()
com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.react.uimanager.events.EventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
androidx.appcompat.widget.SwitchCompat: boolean isEmojiCompatEnabled()
androidx.fragment.app.DialogFragment: void onViewStateRestored(android.os.Bundle)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemAvailableFeatures(com.facebook.react.bridge.Promise)
com.facebook.react.module.annotations.ReactModuleList: java.lang.Class[] nativeModules()
com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: com.facebook.jni.HybridData initHybrid(java.util.concurrent.Executor,com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate)
androidx.core.view.ViewCompat$Api30Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType valueOf(java.lang.String)
com.facebook.react.common.assets.ReactFontManager$Companion: ReactFontManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.facebook.react.modules.camera.ImageStoreManager$Companion: ImageStoreManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config$Companion: MaintainVisibleScrollPositionHelper$Config$Companion()
com.swmansion.rnscreens.Screen: int getSheetLargestUndimmedDetentIndex()
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
com.facebook.react.views.scroll.ReactScrollView: void onLayout(boolean,int,int,int,int)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.fragment.app.Fragment: void initState()
com.facebook.react.modules.fresco.SystraceRequestListener: boolean requiresExtraMap(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
com.facebook.react.packagerconnection.JSPackagerClient$Companion: JSPackagerClient$Companion()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.facebook.react.viewmanagers.RNSScreenStackHeaderSubviewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setRefreshing(android.view.View,boolean)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule$getValue$1: NativeAnimatedModule$getValue$1(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.Callback)
com.facebook.react.ReactFragment: int checkSelfPermission(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
androidx.biometric.CancellationSignalProvider$Injector: androidx.core.os.CancellationSignal getFingerprintCancellationSignal()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.fragment.app.Fragment: void postponeEnterTransition()
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: boolean isShowing()
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int,float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useTurboModuleInterop()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$reload$3(java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer getColumn()
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] $values()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] $values()
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.ReactInstanceManager: void onJSBundleLoadedFromServer()
com.facebook.react.jstasks.HeadlessJsTaskContext: void scheduleTaskTimeout$lambda$5(com.facebook.react.jstasks.HeadlessJsTaskContext,int)
com.facebook.jni.DestructorThread: DestructorThread()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableFabricLogs()
androidx.biometric.BiometricViewModel: void setPromptShowing(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableFabricRenderer()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void destroyRootView(android.view.View)
com.facebook.react.uimanager.NativeKind: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.text.ReactTextUpdate: boolean getContainsImages()
com.facebook.react.bridge.CatalystInstanceImpl: void setFabricUIManager(com.facebook.react.bridge.UIManager)
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void addListener(java.lang.String)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: LocaleIdTokenizer$LocaleIdSubtag(com.facebook.hermes.intl.LocaleIdTokenizer,java.lang.CharSequence,int,int)
com.facebook.react.devsupport.BundleDownloader$BundleInfo: BundleDownloader$BundleInfo()
com.facebook.react.uimanager.events.Event: java.lang.String internal_getEventNameCompat()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableResourceTimingAPI()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme[] values()
androidx.biometric.BiometricViewModel: boolean isConfirmingDeviceCredential()
com.swmansion.worklets.WorkletsModule: com.facebook.jni.HybridData getHybridData()
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactHost getReactHost()
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: void execute()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetPreMountItems()
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.facebook.react.uimanager.UIImplementation: void onHostDestroy()
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasGmsSync()
com.facebook.react.modules.debug.FpsDebugFrameCallback: void start$lambda$0(com.facebook.react.modules.debug.FpsDebugFrameCallback)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useRawPropsJsiValue()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
com.swmansion.rnscreens.ScreenViewManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.react.modules.debug.FpsDebugFrameCallback: FpsDebugFrameCallback(com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollToChild(android.view.View)
com.facebook.react.uimanager.style.ColorStopUtils: java.util.List getFixedColorStops(java.util.List,float)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$initialize$3()
com.facebook.react.animated.NativeAnimatedNodesManager: void createAnimatedNode(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.swmansion.reanimated.NodesManager: NodesManager(com.facebook.react.bridge.ReactContext,com.swmansion.worklets.WorkletsModule)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: IntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinHeight(float)
com.learnium.RNDeviceInfo.RNDeviceModule: void getAndroidId(com.facebook.react.bridge.Promise)
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.oblador.keychain.KeychainModuleBuilder: com.oblador.keychain.KeychainModuleBuilder usingWarmUp()
com.facebook.react.ReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.common.MapBuilder: java.util.HashMap newHashMap()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getFlingExtrapolatedDistance(int)
com.facebook.react.uimanager.BaseViewManager: void setOutlineStyle(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void orderByAnimationTypes(java.util.List)
com.facebook.react.ReactRootView: void onAttachedToWindow()
com.facebook.react.views.scroll.ReactScrollView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.devsupport.DevInternalSettings: boolean isJSMinifyEnabled()
com.swmansion.reanimated.Utils: java.util.Map processMapping(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setSelectionColor(com.facebook.react.views.text.PreparedLayoutTextView,java.lang.Integer)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Integer getColor()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: boolean shouldEnableCustomDrawingOrder()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: ReactSafeAreaViewManager()
com.facebook.react.runtime.ReactInstance$Companion: com.facebook.react.bridge.NativeMap access$getConstantsForViewManager(com.facebook.react.runtime.ReactInstance$Companion,com.facebook.react.uimanager.ViewManager,java.util.Map)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: java.lang.String dangerouslyForceOverride(java.lang.Object)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.nozbe.watermelondb.WMDatabaseDriver: void close()
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toTargetMap()
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTagsSync()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void prepareLayoutAnimations(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.react.animated.TransformAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.biometric.BiometricViewModel: void setFingerprintDialogDismissedInstantly(boolean)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getJSExecutorDescription()
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.PointerEvent obtain(java.lang.String,int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent)
androidx.biometric.BiometricManager$Injector: androidx.core.hardware.fingerprint.FingerprintManagerCompat getFingerprintManager()
com.facebook.react.modules.debug.FpsDebugFrameCallback$Companion: FpsDebugFrameCallback$Companion()
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableNetworkEventReporting()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.swmansion.reanimated.R: R()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.common.mapbuffer.MapBuffer: int getInt(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableFontScaleChangesUpdatingLayout()
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: void hidePausedInDebuggerOverlay()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.Shader getBackgroundImageShader()
androidx.biometric.BiometricManager$Api30Impl: int canAuthenticate(android.hardware.biometrics.BiometricManager,int)
androidx.security.crypto.EncryptedSharedPreferences: long getLong(java.lang.String,long)
androidx.biometric.BiometricErrorData: java.lang.String convertToString(java.lang.CharSequence)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerStateChanged(int)
com.facebook.react.ReactInstanceManager: void onHostDestroy()
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$2: void onReactContextInitialized(com.facebook.react.bridge.ReactContext)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int findPrecedingViewTagForTransition(int)
com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.facebook.react.runtime.ReactInstance$ReactJsExceptionHandlerImpl: void reportJsException(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection,com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.views.text.TextTransform$Companion: java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: ViewManagersPropertyCache$FloatPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,float)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] $values()
com.facebook.react.jstasks.LinearCountingRetryPolicy: LinearCountingRetryPolicy(int,int)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReloadTask$30(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFooter getFooter()
com.swmansion.rnscreens.ScreensModule: void nativeUninstall()
com.facebook.react.uimanager.UIManagerHelper: UIManagerHelper()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleSetChildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: void askAccessPermissions(com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int)
com.facebook.react.views.textinput.ReactEditText: boolean isLayoutRequested()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.ExceptionHelper: java.lang.String getErrorDescription(java.lang.Throwable)
com.facebook.react.runtime.hermes.HermesInstance: HermesInstance(boolean)
com.facebook.react.ReactInstanceManager$ReactContextInitParams: ReactInstanceManager$ReactContextInitParams(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.common.SurfaceDelegate createSurfaceDelegate(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.RotationOptions getRotationOptions()
com.swmansion.reanimated.NativeProxy$1: void clearAnimationConfig(int)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText createInternalEditText()
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.facebook.react.modules.network.OkHttpClientProvider: com.facebook.react.modules.network.OkHttpClientFactory getFactory$ReactAndroid_release()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.debuggingoverlay.TraceUpdate: int getId()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.biometric.CryptoObjectUtils$Api28Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(javax.crypto.Mac)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.facebook.react.uimanager.NoSuchNativeViewException$Companion: NoSuchNativeViewException$Companion()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.facebook.react.runtime.ReactHostImplDevHelper: void onJSBundleLoadedFromServer()
com.zoontek.rnpermissions.RNPermissionsModule: java.util.Map getConstants()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: IPlatformDateTimeFormatter$TimeStyle(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer put(int,boolean)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
org.pgsqlite.SQLitePlugin: boolean deleteDatabaseNow(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: java.lang.String toString()
com.facebook.react.animated.FrameBasedAnimationDriver: void runAnimationStep(long)
com.facebook.hermes.intl.IntlTextUtils: boolean isPrivateUseExtension(java.lang.CharSequence,int,int)
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.animated.ObjectAnimatedNode$Companion: ObjectAnimatedNode$Companion()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.fragment.app.Fragment: java.lang.Object getHost()
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void checkDuplicateSharedTag(android.view.View)
com.facebook.react.uimanager.BaseViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonDisplayMode(android.view.View,java.lang.String)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerWidth(android.view.View,java.lang.Float)
com.facebook.react.views.text.TextLayoutManager: com.facebook.react.bridge.WritableArray measureLines(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,float)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.facebook.react.uimanager.DisplayMetricsHolder: void setScreenDisplayMetrics(android.util.DisplayMetrics)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator: android.animation.ValueAnimator getFlingAnimator()
com.facebook.hermes.instrumentation.HermesMemoryDumper: void setMetaData(java.lang.String)
com.facebook.react.uimanager.RootViewUtil: com.facebook.react.uimanager.RootView getRootView(android.view.View)
com.facebook.react.uimanager.drawable.OutlineDrawable: void draw(android.graphics.Canvas)
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.modules.fresco.ImageCacheControl getCacheControl()
com.facebook.react.animated.SpringAnimation$PhysicsState: com.facebook.react.animated.SpringAnimation$PhysicsState copy$default(com.facebook.react.animated.SpringAnimation$PhysicsState,double,double,int,java.lang.Object)
com.facebook.react.views.text.ReactTextView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEvent(java.lang.String)
com.facebook.react.ReactActivityDelegate: void onUserLeaveHint()
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String component1()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int hashCode()
com.facebook.react.devsupport.DevServerHelper: void closeInspectorConnection()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onDetachedFromWindow()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.react.modules.systeminfo.AndroidInfoModule: boolean isRunningScreenshotTest()
com.oblador.keychain.KeychainModule: com.oblador.keychain.cipherStorage.CipherStorage getCipherStorageByName(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.UIManager lambda$getUIManagerProvider$0(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.TextAttributeProps: void setLayoutDirection(java.lang.String)
com.nozbe.watermelondb.Connection$Waiting: Connection$Waiting(java.util.ArrayList)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BorderDrawable getBorder(android.view.View)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: android.app.Activity getCurrentActivity()
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomRight(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerProperties$ReactAndroid_release()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatch(java.lang.String,com.facebook.react.bridge.WritableMap,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.facebook.react.uimanager.ReactShadowNode: void setPositionPercent(int,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBlurEffect(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.biometric.BiometricViewModel: void setAuthenticationFailurePending(boolean)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.react.packagerconnection.ReconnectingWebSocket: void onMessage(okhttp3.WebSocket,okio.ByteString)
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
com.swmansion.reanimated.ReactNativeUtils: ReactNativeUtils()
com.facebook.react.modules.blob.BlobProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
com.facebook.react.common.assets.ReactFontManager$AssetFontFamily: ReactFontManager$AssetFontFamily()
androidx.biometric.BiometricFragment$Api21Impl: android.content.Intent createConfirmDeviceCredentialIntent(android.app.KeyguardManager,java.lang.CharSequence,java.lang.CharSequence)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
okhttp3.RequestBody: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasValidRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getOrCreateStartTask()
com.facebook.react.module.model.ReactModuleInfo: java.lang.String name()
com.facebook.react.views.text.internal.ReactTextInlineImageShadowNode: com.facebook.react.views.text.internal.span.TextInlineImageSpan buildInlineImageSpan()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.util.Iterator iterator()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.facebook.react.fabric.SynchronousEvent: int component1()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String getName()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.facebook.react.devsupport.DevInternalSettings: void setDeviceDebugEnabled(boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.views.switchview.ReactSwitch: void setOn(boolean)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$Companion: RedBoxContentView$StackAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleClearJSResponder()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
com.facebook.react.modules.network.NetworkInterceptorCreator: okhttp3.Interceptor create()
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setUnits(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay)
com.facebook.hermes.intl.NumberFormat: void initializeNumberFormat(java.util.List,java.util.Map)
com.facebook.react.runtime.ReactHostImpl: void addBeforeDestroyListener(kotlin.jvm.functions.Function0)
com.facebook.react.uimanager.UIViewOperationQueue: void addRootView(int,android.view.View)
com.facebook.react.ReactInstanceManager: void onHostPause(android.app.Activity)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: boolean useTurboModuleInterop()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void scrollTo(int,double,double,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupportedAbis(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void removeListeners(java.lang.Integer)
com.swmansion.reanimated.ReaCompatibility: ReaCompatibility(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateLayout(int,int,int,int,int,int)
com.facebook.react.animated.DecayAnimation: void runAnimationStep(long)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: int getWidth()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setPreventNativeDismiss(android.view.View,boolean)
androidx.biometric.AuthenticationCallbackProvider$Listener: void onHelp(java.lang.CharSequence)
com.facebook.react.views.text.ReactTextUpdate: boolean containsImages()
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: ReactContentSizeChangedEvent(int,int,float,float)
com.facebook.react.runtime.BridgelessReactContext: java.lang.String getSourceURL()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.util.List getStack()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.facebook.react.runtime.BridgelessReactStateTracker$Companion: BridgelessReactStateTracker$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.StateWrapperImpl: void initHybrid()
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setJSMinifyEnabled(boolean)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
androidx.biometric.BiometricFragment$8: void run()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.react.views.text.ReactTextView: void initView()
com.facebook.react.uimanager.ViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.facebook.react.views.text.ReactTextShadowNode: boolean isVirtualAnchor()
com.facebook.react.modules.debug.SourceCodeModule$Companion: SourceCodeModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
com.facebook.react.views.modal.ReactModalHostView: void onDropInstance()
com.facebook.react.uimanager.ReactShadowNode: boolean dispatchUpdatesWillChangeLayout(float,float)
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: HermesExecutor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer: void run(java.lang.Runnable)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void setEventDispatcher$ReactAndroid_release(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setBorderless(android.view.View,boolean)
com.nozbe.watermelondb.WMDatabase: android.database.sqlite.SQLiteDatabase createSQLiteDatabase(java.lang.String,android.content.Context,int)
androidx.biometric.BiometricPrompt$ResetCallbackObserver: BiometricPrompt$ResetCallbackObserver(androidx.biometric.BiometricViewModel)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPaddingPercent(int,float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(com.swmansion.rnscreens.Screen,int)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String getDefaultNumberingSystem(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.views.textinput.ReactEditText: boolean isSettingTextFromJS()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Integer getBackgroundColor(android.view.View)
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: void execute()
com.facebook.react.ReactNativeHost: ReactNativeHost(android.app.Application)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.react.uimanager.Spacing$Companion: Spacing$Companion()
com.facebook.react.views.text.internal.span.CustomStyleSpan: int getWeight()
com.facebook.drawee.view.DraweeView: java.lang.String toString()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableNewBackgroundAndBorderDrawables()
com.facebook.react.modules.core.JavaTimerManager: java.util.PriorityQueue access$getTimers$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String getSkeleton(com.facebook.hermes.intl.ILocaleObject,com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName,com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle,com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle,java.lang.Object)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.events.FabricEventDispatcher: void onCatalystInstanceDestroyed()
com.facebook.react.bridge.DynamicNative: boolean isNullNative()
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.uimanager.ReactShadowNode: void setFlexWrap(com.facebook.yoga.YogaWrap)
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.hermes.intl.UnicodeExtensionKeys$3: UnicodeExtensionKeys$3()
com.facebook.react.views.textinput.ReactEditText$editTextAccessibilityDelegate$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.views.scroll.ReactScrollViewHelper: void removeLayoutChangeListener(com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener)
com.facebook.react.devsupport.StackTraceHelper: StackTraceHelper()
com.facebook.react.runtime.BridgelessCatalystInstance$Companion: BridgelessCatalystInstance$Companion()
com.facebook.react.modules.debug.FpsDebugFrameCallback: double getJsFPS()
com.facebook.react.views.scroll.ReactScrollView: void onOverScrolled(int,int,boolean,boolean)
com.facebook.react.ReactInstanceManager: java.util.List getOrCreateViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.style.CornerRadii: CornerRadii(float,float)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createContrastEffect(float,android.graphics.RenderEffect)
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.oblador.keychain.cipherStorage.CipherStorageBase: void generateKeyAndStoreUnderAlias(java.lang.String,com.oblador.keychain.SecurityLevel)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String access$getNAME$cp()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollBeginDragEvent(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation: void execute(com.swmansion.reanimated.NodesManager)
com.facebook.react.devsupport.interfaces.DevSupportManager: android.view.View createRootView(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void removeViewAt(com.facebook.react.views.text.PreparedLayoutTextView,int)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.biometric.BiometricViewModel$CallbackListener: void onSuccess(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer putInternal(int,java.lang.Object)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] $values()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libyoga_so()
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout()
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: void access$apply(com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion,android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.react.uimanager.drawable.BorderDrawable: int multiplyColorAlpha(int,int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getMessage()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewRecycling()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void deleteApp(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewManagerRegistry: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: android.graphics.drawable.Drawable[] access$createLayersArray(com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeRegionSubtag(java.lang.CharSequence,int,int)
com.facebook.react.devsupport.MultipartStreamReader: boolean readAllParts(com.facebook.react.devsupport.MultipartStreamReader$ChunkListener)
com.swmansion.reanimated.NodesManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.hermes.intl.PlatformCollatorICU: com.facebook.hermes.intl.IPlatformCollator setIgnorePunctuation(boolean)
com.facebook.imagepipeline.request.ImageRequest: android.net.Uri getSourceUri()
com.facebook.react.ReactFragment: boolean onBackPressed()
com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromState(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$Style,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign,com.facebook.hermes.intl.IPlatformNumberFormatter$Notation,com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: SharedTransitionManager$TopWillAppearListener(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.devsupport.RedBoxContentView: void access$setReporting$p(com.facebook.react.devsupport.RedBoxContentView,boolean)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.facebook.react.runtime.internal.bolts.Task$Companion: void call$lambda$2(java.util.concurrent.Callable,com.facebook.react.runtime.internal.bolts.TaskCompletionSource)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsRemoveListener(java.lang.String,java.lang.Boolean)
com.facebook.react.uimanager.StateWrapper: void destroyState()
com.facebook.react.devsupport.interfaces.DevSupportManager: void showPausedInDebuggerOverlay(java.lang.String,com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener)
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: ReactSwipeRefreshLayout(com.facebook.react.bridge.ReactContext)
com.facebook.react.packagerconnection.ReconnectingWebSocket$Companion: ReconnectingWebSocket$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
com.facebook.react.modules.network.ProgressListener: void onProgress(long,long,boolean)
com.facebook.react.uimanager.style.LogicalEdge$RIGHT: LogicalEdge$RIGHT(java.lang.String,int)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.oblador.keychain.decryptionHandler.DecryptionResultHandler: void waitResult()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$DataType readDataType(int)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.views.image.ReactImageView$TilePostprocessor: ReactImageView$TilePostprocessor(com.facebook.react.views.image.ReactImageView)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean disableMainQueueSyncDispatchIOS()
com.facebook.react.jstasks.LinearCountingRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy copy()
com.facebook.imagepipeline.request.ImageRequest: int getCachesDisabled()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollView: void recreateFlingAnimation(int)
com.facebook.react.animated.NativeAnimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.uimanager.ReactOverflowViewWithInset: void setOverflowInset(int,int,int,int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$Entry entryAt(int)
com.facebook.react.uimanager.ThemedReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.runtime.ReactHostInspectorTarget$UIThreadConditionalSyncExecutor: void execute(java.lang.Runnable)
com.facebook.react.modules.core.JavaTimerManager$Companion: boolean access$isTimerInRange(com.facebook.react.modules.core.JavaTimerManager$Companion,com.facebook.react.modules.core.JavaTimerManager$Timer,long)
com.facebook.react.devsupport.inspector.InspectorNetworkHelper$loadNetworkResource$1: InspectorNetworkHelper$loadNetworkResource$1(com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
com.facebook.react.runtime.ReactHostInspectorTarget$Companion: ReactHostInspectorTarget$Companion()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: void setType(java.lang.String)
com.facebook.react.views.text.TextAttributes: float getLetterSpacing()
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToVerifiedAncestor(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int[])
com.facebook.react.uimanager.drawable.BackgroundDrawable: void onBoundsChange(android.graphics.Rect)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.facebook.react.modules.network.ProgressResponseBody$source$1: long read(okio.Buffer,long)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.facebook.react.modules.network.RequestBodyUtil$create$1: okhttp3.MediaType contentType()
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation$Companion: LayoutDeleteAnimation$Companion()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableFabricLogs()
com.facebook.hermes.intl.JSRangeErrorException: JSRangeErrorException()
com.facebook.react.uimanager.style.BorderColors: com.facebook.react.uimanager.style.ColorEdges resolve-impl(java.lang.Integer[],int,android.content.Context)
androidx.biometric.BiometricFragment: boolean isUsingFingerprintDialog()
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$getTileMatrix$cp()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: UIViewOperationQueue$SetChildrenOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.facebook.react.ReactActivity: com.facebook.react.ReactHost getReactHost()
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates$lambda$0(com.facebook.react.animated.NativeAnimatedModule,long,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.devsupport.DevSupportManagerBase$Companion: DevSupportManagerBase$Companion()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onViewHierarchyUpdateEnqueued()
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float component4()
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator(float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.common.SurfaceDelegate: void hide()
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: void setLast(long)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.biometric.BiometricManager$DefaultInjector: android.hardware.biometrics.BiometricManager getBiometricManager()
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.zoontek.rnpermissions.RNPermissionsModule: void check(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.BorderDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.keyboard.Keyboard: Keyboard()
com.facebook.react.jstasks.HeadlessJsTaskContext: void addTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener)
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: ViewManagersPropertyCache$StringPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderBottomRightRadius()
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
com.facebook.react.uimanager.util.ReactFindViewUtil: void addViewListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromValue(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.fabric.mounting.LayoutMetricsConversions: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.UIManagerHelper: int getSurfaceId(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.facebook.react.views.scroll.ReactScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$5()
com.facebook.react.common.mapbuffer.MapBuffer$Companion: MapBuffer$Companion()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.Map getConstants()
com.nozbe.watermelondb.DatabaseUtils: com.facebook.react.bridge.WritableMap cursorToMap(android.database.Cursor)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion: float getSpringDamping(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.image.ImageLoaderModule$getSize$dataSubscriber$1: void onNewResultImpl(com.facebook.datasource.DataSource)
com.swmansion.reanimated.NativeReanimatedModuleSpec: boolean installTurboModule()
com.facebook.react.bridge.UIManagerProvider: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.style.OutlineStyle$Companion: OutlineStyle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.EventDispatcher: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.reactnativecommunity.netinfo.NetInfoModule: void onCatalystInstanceDestroy()
com.facebook.react.devsupport.DevServerHelper: void disableDebugger()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.facebook.react.devsupport.ReleaseDevSupportManager: void openDebugger()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableEagerRootViewAttachment()
com.facebook.react.uimanager.events.Event: Event(int)
com.facebook.react.uimanager.ReactShadowNode: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setMinIntergerDigits(int)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: android.security.keystore.KeyInfo getKeyInfo(java.security.Key)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.swmansion.rnscreens.FabricEnabledViewGroup: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion: InterpolatorType$Companion()
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent$Companion: ReactTextInputKeyPressEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setMinTimeLeftInFrameForNonBatchedOperationMs(int)
com.facebook.react.runtime.BridgelessReactContext: java.util.Collection getNativeModules()
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentageType getType()
androidx.biometric.CancellationSignalProvider: CancellationSignalProvider()
com.swmansion.reanimated.NativeWorkletsModuleSpec: java.lang.String getName()
androidx.biometric.FingerprintDialogFragment: void updateFingerprintIcon(int)
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: java.lang.String toString()
com.facebook.react.bridge.WritableArray: void pushLong(long)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
com.facebook.react.runtime.internal.bolts.ExecutorException: ExecutorException(java.lang.Exception)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder addCxxReactPackages(kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraints(int,int,int,int,boolean,boolean,float,float)
com.facebook.react.runtime.ReactHostImpl: java.util.Map getHostMetadata()
androidx.fragment.app.Fragment: void performStop()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator: void startFlingAnimator(int,int)
com.facebook.react.ReactRootView$ReactRootViewEventListener: void onAttachedToReactInstance(com.facebook.react.ReactRootView)
com.facebook.react.uimanager.style.BackgroundImageLayer: BackgroundImageLayer(com.facebook.react.uimanager.style.Gradient,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.ReactInstanceDevHelper: void destroyRootView(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionType(com.facebook.yoga.YogaPositionType)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: DispatchIntCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.react.fabric.mounting.SurfaceMountingManager: void enqueuePendingEvent(int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.modules.network.HeaderUtil$Companion: HeaderUtil$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableNewBackgroundAndBorderDrawables()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createContrastEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: kotlin.enums.EnumEntries getEntries()
androidx.biometric.BiometricFragment$Api28Impl: void setNegativeButton(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence,java.util.concurrent.Executor,android.content.DialogInterface$OnClickListener)
com.facebook.react.views.textinput.ReactEditText: void maybeSetSelection(int,int,int)
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.views.text.ReactTextView: void setMinimumFontSize(float)
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData getAuthenticationHelpMessage()
com.facebook.react.uimanager.events.EventCategoryDef$Companion: EventCategoryDef$Companion()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: ReactTextViewAccessibilityDelegate(android.view.View,boolean,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String getName()
com.facebook.react.animated.SpringAnimation$PhysicsState: SpringAnimation$PhysicsState()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableDoubleMeasurementFixAndroid()
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: void setResult(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.swmansion.reanimated.keyboard.KeyboardState: KeyboardState(java.lang.String,int,int)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffsetDy(float)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] $values()
com.facebook.react.devsupport.StackTraceHelper: java.lang.String formatStackTrace(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[])
androidx.biometric.CryptoObjectUtils$Api23Impl: android.security.keystore.KeyGenParameterSpec buildKeyGenParameterSpec(android.security.keystore.KeyGenParameterSpec$Builder)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderColor(com.facebook.react.uimanager.style.LogicalEdge,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
androidx.biometric.AuthenticatorUtils: AuthenticatorUtils()
com.facebook.react.uimanager.OnLayoutEvent: void getWidth$ReactAndroid_release$annotations()
com.facebook.react.views.scroll.ReactScrollView: void abortAnimation()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.react.modules.permissions.PermissionsModule$requestPermission$1: void invoke(java.lang.Object[])
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodes$1: NativeAnimatedModule$connectAnimatedNodes$1(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getMessage()
com.facebook.react.common.MapBuilder: java.util.Map of()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasUpdates()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.imagepicker.ImagePickerModule: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$getOrCreateReactInstanceTask$23(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void clearText(android.view.View)
com.facebook.react.uimanager.FilterHelper: float sigmaToRadius$ReactAndroid_release(float)
com.facebook.react.ReactInstanceManager$3: ReactInstanceManager$3(com.facebook.react.ReactInstanceManager)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: SharedTransitionManager(com.swmansion.reanimated.layoutReanimation.AnimationsManager)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState valueOf(java.lang.String)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View,int)
com.facebook.react.devsupport.InspectorFlags: boolean getIsProfilingBuild()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewRecyclingForView()
com.facebook.react.modules.dialog.AlertFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: void deepMergeInto(org.json.JSONObject,org.json.JSONObject)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.ReactDelegate: void onWindowFocusChanged(boolean)
com.facebook.react.views.text.PreparedLayoutTextViewManager: PreparedLayoutTextViewManager()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isInvertColorsEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.MountItemDispatcher: void printMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.facebook.react.animated.TrackingAnimatedNode: TrackingAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.runtime.ReactHostImpl: void removeReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.ReactFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate createReactActivityDelegate()
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData isNegativeButtonPressPending()
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool getPool()
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$find$0(java.lang.String,java.lang.String,com.nozbe.watermelondb.WMDatabaseDriver)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: ReactSafeAreaView$updateState$2(com.facebook.react.views.safeareaview.ReactSafeAreaView,androidx.core.graphics.Insets,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.runtime.ReactSurfaceView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion: InterpolatorType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.common.assets.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,android.content.res.AssetManager)
com.facebook.react.fabric.LongStreamingStats: long getMax()
com.facebook.react.runtime.ReactInstance$loadJSBundle$1: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.views.view.ReactViewManager: void setCollapsableChildren(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1: void execute(java.lang.Runnable)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: ReanimatedSensorContainer(java.lang.ref.WeakReference)
com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil getInstance()
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: JavaTimerManager$TimerFrameCallback(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.uimanager.style.BorderStyle: kotlin.enums.EnumEntries getEntries()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void lambda$deleteView$0(com.facebook.react.uimanager.events.Event)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void draw(android.graphics.Canvas)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void setAutomaticDataCollectionEnabled(java.lang.String,java.lang.Boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightStretchJNI(long)
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: void destroyContentView()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: boolean canCoalesce()
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.views.image.ReactImageView$Companion: ReactImageView$Companion()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$IWebSocket: void send(java.lang.String)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libturbomodulejsijni_so()
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextView: int access$101(androidx.appcompat.widget.AppCompatTextView)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
com.facebook.react.runtime.BridgelessCatalystInstance: void setFabricUIManager(com.facebook.react.bridge.UIManager)
com.facebook.react.LazyReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.yoga.YogaNative: void jni_YGNodeSetAlwaysFormsContainingBlockJNI(long,boolean)
com.facebook.react.modules.camera.ImageStoreManager$Companion: java.lang.String convertInputStreamToBase64OutputStream$ReactAndroid_release(java.io.InputStream)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.ThemedReactContext getReactContext()
com.oblador.keychain.KeychainModule: KeychainModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: CustomStyleSpan$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.NativeAnimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.uimanager.UIManagerHelper: float[] getDefaultTextInputPadding(android.content.Context)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setProgressViewOffset(android.view.View,float)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.facebook.react.views.text.ReactTextView: boolean dispatchHoverEvent(android.view.MotionEvent)
com.facebook.react.uimanager.UIImplementation: UIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void dispatchPendingNonBatchedOperations(long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableCppPropsIteratorSetter()
com.facebook.react.devsupport.DevSupportManagerBase: void setDevLoadingViewManager(com.facebook.react.devsupport.interfaces.DevLoadingViewManager)
com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener: void onLayoutChange(android.view.ViewGroup)
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData getFingerprintDialogHelpMessage()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.oblador.keychain.KeychainModule: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult decryptToResult(java.lang.String,com.oblador.keychain.cipherStorage.CipherStorage,com.oblador.keychain.PrefsStorage$ResultSet,androidx.biometric.BiometricPrompt$PromptInfo)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.IPlatformCollator setCaseFirstAttribute(com.facebook.hermes.intl.IPlatformCollator$CaseFirst)
com.facebook.react.modules.websocket.WebSocketModule$Companion: void access$applyCustomBuilder(com.facebook.react.modules.websocket.WebSocketModule$Companion,okhttp3.OkHttpClient$Builder)
com.facebook.react.devsupport.BundleDownloader: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType[] values()
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.JavaScriptExecutorFactory getJSExecutorFactory()
com.facebook.react.animated.MultiplicationAnimatedNode: MultiplicationAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.devsupport.DevSupportManagerBase: void access$setPackagerConnected$p(com.facebook.react.devsupport.DevSupportManagerBase,boolean)
com.facebook.react.devsupport.ReactInstanceDevHelper: com.facebook.react.interfaces.TaskInterface loadBundle(com.facebook.react.bridge.JSBundleLoader)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: java.lang.String getEventName()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.uimanager.ViewManagersPropertyCache: void createPropSetters(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,java.lang.Class,java.util.Map)
okio.ForwardingSource: okio.Source delegate()
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String getFileName()
com.facebook.react.ReactRootView$1: ReactRootView$1(com.facebook.react.ReactRootView,android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdated()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
com.facebook.react.R$style: R$style()
com.facebook.hermes.intl.JSObjects: java.lang.Object Get(java.lang.Object,java.lang.String)
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(java.lang.String,com.facebook.react.bridge.WritableMap,long,boolean,com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.devsupport.interfaces.ErrorType getLastErrorType()
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.facebook.react.animated.AnimatedNode: AnimatedNode()
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.facebook.hermes.intl.ILocaleObject: java.lang.String toCanonicalTag()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType)
com.facebook.react.ReactRootView: void attachToReactInstanceManager()
com.facebook.react.modules.core.JavaTimerManager$Timer: boolean getRepeat()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.lang.Object findGeneratedSetter(java.lang.Class)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updateNativeChildrenCountInParent(int)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$FrameViewHolder: android.widget.TextView getMethodView()
com.facebook.react.common.ClearableSynchronizedPool: ClearableSynchronizedPool(int)
com.facebook.react.devsupport.InspectorFlags: InspectorFlags()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.facebook.react.module.model.ReactModuleInfo: boolean isCxxModule()
com.facebook.react.views.scroll.ReactScrollView: void onDraw(android.graphics.Canvas)
com.swmansion.reanimated.NativeMethodsHelper: void scrollTo(android.view.View,double,double,boolean)
com.facebook.react.runtime.BridgelessAtomicRef$State: BridgelessAtomicRef$State(java.lang.String,int)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.ComputedBorderRadius copy(com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii)
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType[] values()
com.swmansion.rnscreens.bottomsheet.DimmingView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String getEncryptionAlgorithm()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void metaGetAll(com.facebook.react.bridge.Promise)
androidx.fragment.app.Fragment: android.view.View getView()
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource$ReactAndroid_release()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void hide$lambda$2(com.facebook.react.devsupport.DefaultDevLoadingViewImplementation)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.facebook.react.ReactActivityDelegate: void setReactRootView(com.facebook.react.ReactRootView)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.devsupport.DevSupportManagerBase$Companion: DevSupportManagerBase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$backPressedCallback$1: ReactModalHostView$showOrUpdate$backPressedCallback$1(kotlin.jvm.functions.Function0)
com.rnbiometrics.ReactNativeBiometrics$1: void run()
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getNullableViewState(int)
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void updateLayout(android.view.View,com.facebook.react.uimanager.ViewManager,int,float,float,float,float,boolean)
com.facebook.react.views.view.ReactViewGroup: boolean onHoverEvent(android.view.MotionEvent)
com.facebook.react.devsupport.interfaces.RedBoxHandler: boolean isReportEnabled()
com.facebook.react.devsupport.interfaces.RedBoxHandler: void handleRedbox(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],com.facebook.react.devsupport.interfaces.ErrorType)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: long readLongValue(int)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateClippingRect()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable getCSSBackground(android.view.View)
com.facebook.react.runtime.ReactLifecycleStateManager: ReactLifecycleStateManager(com.facebook.react.runtime.BridgelessReactStateTracker)
com.facebook.react.uimanager.style.Overflow: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.ReactShadowNodeImpl: void onAfterUpdateTransaction()
com.facebook.react.shell.MainReactPackage: com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void willMountItems(java.util.List)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.facebook.react.ReactInstanceManager: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.ReactShadowNode: void setColumnGap(float)
com.facebook.react.views.textinput.ReactEditText: void setDisableTextDiffing$ReactAndroid_release(boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$CryptoObject getCryptoObject()
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: ReactAccessibilityDelegate$2(com.facebook.react.uimanager.ReactAccessibilityDelegate,int,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setDisableBackButtonMenu(android.view.View,boolean)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Boolean getInset()
com.oblador.keychain.KeychainModule: void migrateCipherStorage(java.lang.String,com.oblador.keychain.cipherStorage.CipherStorage,com.oblador.keychain.cipherStorage.CipherStorage,com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult)
com.facebook.react.modules.debug.DevSettingsModule$Companion: DevSettingsModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: void performStart()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.oblador.keychain.KeychainModule: void throwIfEmptyLoginPassword(java.lang.String,java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isRootViewAttached()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean getIndeterminate$ReactAndroid_release()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor: void executeItems(java.util.Queue)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fuseboxNetworkInspectionEnabled()
androidx.drawerlayout.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.bridge.JavaOnlyMap: void putLong(java.lang.String,long)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.facebook.react.fabric.FabricUIManagerBinding: void uninstallFabricUIManager()
com.facebook.react.views.text.TextLayoutManager: float calculateWidth(android.text.Layout,android.text.Spanned,float,com.facebook.yoga.YogaMeasureMode,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputBlurEvent$Companion: ReactTextInputBlurEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor()
com.facebook.react.runtime.internal.bolts.Continuation: java.lang.Object then(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task continueWithTask(com.facebook.react.runtime.internal.bolts.Continuation)
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient getOkHttpClient()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.swmansion.rnscreens.SearchBarManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion: DefaultTurboModuleManagerDelegate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String getName()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void setConfig(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.DoubleTapReloadRecognizer access$getDoubleTapReloadRecognizer$p(com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate)
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getBorderColor()
com.facebook.react.uimanager.ReactShadowNode: void setAlignItems(com.facebook.yoga.YogaAlign)
com.facebook.react.uimanager.OnLayoutEvent: void getY$ReactAndroid_release$annotations()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion: SimpleSpringInterpolator$Companion()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems()
com.facebook.react.bridge.UIManager: void invalidate()
com.facebook.react.uimanager.events.TouchEvent$Companion: TouchEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
com.oblador.keychain.KeychainModule: java.lang.String getAccessControlOrDefault(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.BaseReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.safeareaview.ReactSafeAreaView: void onAttachedToWindow()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.facebook.react.animated.PropsAnimatedNode: void restoreDefaultValues()
com.facebook.react.uimanager.ViewProps: ViewProps()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findScreen(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: java.lang.String toString()
com.BV.LinearGradient.LinearGradientView: void setBorderRadii(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManagerRegistry: void onSurfaceStopped(int)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent$Companion: ReactContentSizeChangedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void setKeyboardFocused(boolean)
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: FpsDebugFrameCallback$FpsInfo(int,int,int,int,double,double,int)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt: long access$getLastEventBetweenTimestamps(java.util.ArrayList,long,long)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.uimanager.util.ReactFindViewUtil: java.lang.String getNativeId(android.view.View)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getStartStart()
com.facebook.react.runtime.BridgelessCatalystInstance: void runJSBundle()
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
androidx.biometric.BiometricFragment: void showPromptForAuthentication()
androidx.biometric.BiometricPrompt: BiometricPrompt(androidx.fragment.app.FragmentActivity,androidx.biometric.BiometricPrompt$AuthenticationCallback)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.react.uimanager.BlendModeHelper: BlendModeHelper()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.jstasks.NoRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy update()
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
com.rnbiometrics.R: R()
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.zoontek.rnpermissions.RNPermissionsModule: RNPermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.ReleaseDevSupportManager: void reloadJSFromServer(java.lang.String,com.facebook.react.devsupport.interfaces.BundleLoadCallback)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$Compatible: WMDatabaseDriver$SchemaCompatibility$Compatible()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.react.CoreModulesPackage: void startProcessPackage()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaDirection getLayoutDirection()
com.facebook.react.views.text.TextAttributeProps: boolean isLineThroughTextDecorationSet()
com.facebook.drawee.view.DraweeView: java.lang.Object getExtraData()
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isHighTextContrastEnabled(com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Combine(double[],double[],double,double)
com.facebook.react.ReactActivity: java.lang.String getMainComponentName()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.facebook.react.uimanager.style.BorderColors: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.swmansion.reanimated.Utils: java.lang.Runnable combineRunnables(java.lang.Runnable[])
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableDoubleMeasurementFixAndroid()
com.facebook.imagepipeline.request.ImageRequest: boolean isCacheEnabled(int)
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: void lambda$static$0(javax.crypto.Cipher,java.security.Key,java.io.OutputStream)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isPrefSet(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: int getTextAlign()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setSelectable(com.facebook.react.views.text.PreparedLayoutTextView,boolean)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setBorderColor(android.view.View,java.lang.Integer)
com.rnbiometrics.ReactNativeBiometrics: boolean deleteBiometricKey()
com.facebook.react.runtime.CoreReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomEnd()
com.facebook.react.views.switchview.ReactSwitch: ReactSwitch(android.content.Context)
com.oblador.keychain.PrefsStorage: java.util.Set getUsedCipherNames()
com.nozbe.watermelondb.DatabaseUtils: DatabaseUtils()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: EncryptedSharedPreferences$PrefValueEncryptionScheme(java.lang.String,int,com.google.crypto.tink.KeyTemplate)
androidx.biometric.AuthenticationCallbackProvider$1: void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.nozbe.watermelondb.WMDatabaseDriver: WMDatabaseDriver(android.content.Context,java.lang.String,int,boolean)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setAnimationFpsDebugEnabled(boolean)
com.facebook.react.uimanager.OnLayoutEvent: int getWidth$ReactAndroid_release()
com.facebook.react.LazyReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.shell.MainReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider fallbackForMissingClass()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setDisableBackButtonOverride(android.view.View,boolean)
com.facebook.drawee.drawable.ForwardingDrawable: boolean setVisible(boolean,boolean)
com.facebook.react.runtime.ReactHostImpl: void setCurrentActivity(android.app.Activity)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
com.facebook.react.modules.network.HeaderUtil: java.lang.String stripHeaderName(java.lang.String)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.oblador.keychain.KeychainPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactRootView: ReactRootView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.runtime.ReactSurfaceView: void setIsFabric(boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component3()
com.facebook.react.viewmanagers.RNSScreenContentWrapperManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createBrightnessColorMatrix(float)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setExclusive(android.view.View,boolean)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.facebook.imagepipeline.request.ImageRequest: java.io.File getSourceFile()
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ImageCacheControl getCacheControl$ReactAndroid_release()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.modules.network.HeaderUtil: HeaderUtil()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleRemoveView(android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomLeftRadius(android.view.View,float)
androidx.biometric.FingerprintDialogFragment$2: void onClick(android.content.DialogInterface,int)
androidx.biometric.AuthenticationCallbackProvider$Api28Impl: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback createCallback(androidx.biometric.AuthenticationCallbackProvider$Listener)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createGrayscaleEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getAdbReverseTcpCommand(int)
com.facebook.react.runtime.ReactHostImpl: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.util.Map getInspectorHostMetadata(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.ViewManagerOnDemandReactPackage: com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean cxxNativeAnimatedEnabled()
androidx.biometric.BiometricFragment$Api30Impl: void setAllowedAuthenticators(android.hardware.biometrics.BiometricPrompt$Builder,int)
androidx.core.widget.NestedScrollView: int getScrollRange()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetString(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fuseboxEnabledRelease()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueCreateView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.fabric.FabricUIManagerBinding: FabricUIManagerBinding()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
androidx.fragment.app.Fragment: int getId()
com.facebook.react.modules.network.ReactCookieJarContainer: ReactCookieJarContainer()
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.ReactAndroidHWInputDeviceHelper: void dispatchEvent$default(com.facebook.react.ReactAndroidHWInputDeviceHelper,java.lang.String,int,int,int,java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisAuto()
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1: ProgressRequestBody$outputStreamSink$1(com.facebook.react.modules.network.ProgressRequestBody,java.io.OutputStream)
com.facebook.react.jstasks.HeadlessJsTaskContext$Companion: HeadlessJsTaskContext$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.common.ShakeDetector: ShakeDetector(com.facebook.react.common.ShakeDetector$ShakeListener,int)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.views.text.PreparedLayoutTextView: void recycleView()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: void getOutline(android.graphics.Outline)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getError(java.lang.String,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: void execute()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFirstInstallTime(com.facebook.react.bridge.Promise)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver: ReactNativeFirebaseMessagingReceiver()
com.facebook.react.uimanager.style.BoxShadow: int hashCode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.facebook.react.ReactRootView: void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle)
com.facebook.react.uimanager.UIManagerModuleListener: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType defaultValue()
androidx.fragment.app.Fragment: void performAttach()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useTurboModuleInterop()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: double readDoubleValue(int)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: LayoutCreateAnimation()
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType valueOf(java.lang.String)
androidx.biometric.BiometricPrompt: void authenticate(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)
com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader: void onSuccess(com.facebook.react.bridge.JSBundleLoader)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener: void onViewHierarchyUpdateFinished()
com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.common.LifecycleState: kotlin.enums.EnumEntries getEntries()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$DataType getType(int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidMakePlayServicesAvailable()
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.runtime.ReactSurfaceView: void dispatchJSTouchEvent(android.view.MotionEvent)
com.reactnativecommunity.cameraroll.CameraRollModule: void saveToCameraRoll(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper DEPRECATED$getInstance()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.rnscreens.Screen: boolean getSheetClosesOnTouchOutside()
androidx.biometric.BiometricFragment$StopDelayingPromptRunnable: void run()
com.facebook.react.modules.i18nmanager.I18nUtil$Companion: I18nUtil$Companion()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFontScale(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.NativeViewHierarchyManager$1: void onAnimationEnd()
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.bridge.UIManagerProvider getUIManagerProvider()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisMaxContentJNI(long)
com.facebook.hermes.intl.IPlatformCollator: com.facebook.hermes.intl.IPlatformCollator$Sensitivity getSensitivity()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.facebook.react.reactperflogger.NativeModulePerfLogger: void maybeLoadOtherSoLibraries()
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: ReactScrollViewHelper$OverScrollerDurationGetter(android.content.Context)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.facebook.imagepipeline.request.ImageRequest: int getSourceUriType()
com.facebook.react.uimanager.BaseViewManager: void setOutlineColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LengthPercentage: float component1()
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem$lambda$1(java.lang.String,com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters$lambda$0(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView,android.content.DialogInterface)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.facebook.react.fabric.events.EventEmitterWrapper$Companion: EventEmitterWrapper$Companion()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.facebook.react.views.image.ImageLoadEvent$Companion: ImageLoadEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setGrouping(boolean)
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.IPlatformCollator configure(com.facebook.hermes.intl.ILocaleObject)
com.oblador.keychain.exceptions.KeyStoreAccessException: KeyStoreAccessException(java.lang.String)
com.facebook.hermes.intl.LocaleObjectAndroid: void setUnicodeExtensions(java.lang.String,java.util.ArrayList)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: SurfaceMountingManager$PendingViewEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
com.facebook.react.runtime.ReactInstance: java.lang.String access$getTAG$cp()
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.react.uimanager.PointerEvents: boolean canChildrenBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
com.facebook.hermes.intl.JSObjects: boolean isUndefined(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void makeSnapshotOfTopScreenViews(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableNativeCSSParsing()
com.oblador.keychain.KeychainModule: com.oblador.keychain.cipherStorage.CipherStorage getSelectedStorage(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.views.text.TextLayoutManager: android.text.Layout createLayout(android.text.Spannable,android.text.BoringLayout$Metrics,float,com.facebook.yoga.YogaMeasureMode,boolean,int,int,android.text.Layout$Alignment,int,android.text.TextUtils$TruncateAt,int,android.text.TextPaint)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayout$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: void getBuildId(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: UIViewOperationQueue$SetLayoutAnimationEnabledOperation(com.facebook.react.uimanager.UIViewOperationQueue,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasHmsSync()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.Event: boolean internal_experimental_isSynchronous$ReactAndroid_release()
com.facebook.react.modules.websocket.WebSocketModule$Companion: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer put(int,long)
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContext(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.react.runtime.ReactInstance$1: java.lang.String[] getComponentNames()
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: kotlin.enums.EnumEntries getEntries()
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule$Companion: ReactDevToolsRuntimeSettingsModule$Companion()
com.reactnativecommunity.cameraroll.CameraRollModule: boolean putImageSize(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,android.net.Uri,boolean,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)
com.facebook.react.ReactActivityDelegate: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void disableUserInteractions(android.view.View)
androidx.appcompat.widget.SwitchCompat: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: CSSBackgroundDrawable(android.content.Context)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List getSharedElementsForCurrentTransition(java.util.List,boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateOverflowInset(int,int,int,int,int)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable createDrawableFromJSDescription(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: int getNameStyle()
com.facebook.react.defaults.DefaultReactHostDelegate: void handleInstanceException(java.lang.Exception)
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.animated.NativeAnimatedNodesManager: void stopAnimationsForNode(com.facebook.react.animated.AnimatedNode)
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler getDefaultHardwareBackBtnHandler()
com.swmansion.reanimated.DevMenuUtils: DevMenuUtils()
com.facebook.react.uimanager.style.BorderStyle$Companion: BorderStyle$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.react.modules.dialog.DialogModule: void showAlert$lambda$0(com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper,android.os.Bundle,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.jstasks.HeadlessJsTaskContext: void finishTask(int)
com.facebook.react.uimanager.JSPointerDispatcher: boolean qualifiedMove(float[],float[])
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.devsupport.ReleaseDevSupportManager: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createSplitBundleURL(java.lang.String,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: DevSupportManagerBase$reloadJSFromServer$1(com.facebook.react.devsupport.DevSupportManagerBase,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.BundleLoadCallback)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setScrollAwayPaddingTop(int)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
androidx.appcompat.widget.Toolbar: void setTitle(int)
org.pgsqlite.SQLitePlugin: android.content.Context getContext()
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.lang.String getDefaultTimeZone(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.views.text.PreparedLayoutTextView$Companion: boolean access$isDirectionKey(com.facebook.react.views.text.PreparedLayoutTextView$Companion,int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData getFingerprintDialogState()
com.facebook.react.uimanager.Spacing$Companion: float[] access$newFullSpacingArray(com.facebook.react.uimanager.Spacing$Companion)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule$Companion: DeviceInfoModule$Companion()
com.nozbe.watermelondb.utils.Pair: Pair(java.lang.Object,java.lang.Object)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$18(com.facebook.react.devsupport.DevSupportManagerBase,android.content.DialogInterface)
com.facebook.react.ReactNativeHost: com.facebook.react.common.SurfaceDelegateFactory getSurfaceDelegateFactory()
com.facebook.react.views.image.ReactImageManager$Companion: ReactImageManager$Companion()
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimationImpl$ReactAndroid_release(android.view.View,int,int,int,int)
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$2: HeadlessJsTaskService$createReactContextAndScheduleTask$2(com.facebook.react.HeadlessJsTaskService,com.facebook.react.jstasks.HeadlessJsTaskConfig,com.facebook.react.ReactInstanceManager)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onMessage$lambda$1(com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableViewRecyclingForText()
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.ReactInstanceDevHelper getReactInstanceDevHelper()
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformNumberFormatter: java.lang.String format(double)
com.facebook.react.bridge.UIManager: void markActiveTouchForTag(int,int)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
com.facebook.react.uimanager.ReactShadowNode: void setFlexBasisPercent(float)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBackgroundColor(int)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$unsubscribeFromTopic$11(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.image.ReactImageDownloadListener: ReactImageDownloadListener()
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: void onProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.uimanager.ReactShadowNode: void setRootTag(int)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.facebook.react.uimanager.style.CornerRadii: CornerRadii()
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder setPackages(java.util.List)
com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean access$isRunningTasks$p(com.facebook.react.modules.core.JavaTimerManager)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.Boolean isLowRamDevice()
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void setTextView(android.widget.TextView)
com.facebook.react.uimanager.ReactShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void afterTextChanged(android.text.Editable)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: com.oblador.keychain.SecurityLevel securityLevel()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetLayoutAnimationEnabled(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddingInline(int,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen: com.facebook.react.uimanager.ThemedReactContext getReactContext()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getEventCoordinatesByPointerId()
com.nozbe.watermelondb.WMDatabaseDriver: com.facebook.react.bridge.WritableArray unsafeQueryRaw(java.lang.String,java.lang.Object[])
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeDropAncestors(android.view.View)
com.facebook.react.common.SystemClock: long uptimeMillis()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule$Companion: AndroidInfoModule$Companion()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.blob.BlobModule$webSocketContentHandler$1: void onMessage(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion: ReactUnimplementedViewManager$Companion()
com.facebook.hermes.intl.LocaleIdTokenizer: LocaleIdTokenizer(java.lang.CharSequence)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: java.util.Map customCommandHandlers()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)
com.facebook.react.views.modal.ReactModalHostView: void addChildrenForAccessibility(java.util.ArrayList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.swmansion.reanimated.sensor.ReanimatedSensor: ReanimatedSensor(java.lang.ref.WeakReference,com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.HeadlessJsTaskService: android.os.PowerManager$WakeLock access$getWakeLock$cp()
com.facebook.react.uimanager.ReactShadowNode: void dirty()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean isFatal()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBrightnessEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
androidx.biometric.DeviceUtils: DeviceUtils()
com.facebook.react.fabric.FabricUIManagerBinding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: InterpolationAnimatedNode$Companion()
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: java.lang.String getStringValue()
com.facebook.react.bridge.ReadableArrayBuilder: void add(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.facebook.react.uimanager.drawable.BorderDrawable: void drawRoundedBorders(android.graphics.Canvas)
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: java.lang.String getSkeleonSymbol24()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertReturnClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getPrimaryPointerId()
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setTypeAttr(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Cross(double[],double[])
com.facebook.react.devsupport.DevSupportManagerBase: android.content.Context getApplicationContext()
com.facebook.react.uimanager.DisplayMetricsHolder: void setWindowDisplayMetrics(android.util.DisplayMetrics)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthFitContentJNI(long)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.drawable.ForwardingDrawable: int getOpacity()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.animated.ColorAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.runtime.internal.bolts.Task$Companion: kotlin.Unit call$lambda$2$lambda$0(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Task)
com.nozbe.watermelondb.WMDatabase: void lambda$unsafeExecuteStatements$0(java.lang.String)
com.facebook.react.uimanager.PointerEvents: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.drawable.BorderDrawable: float getInnerBorderRadius(float,float)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.facebook.react.uimanager.FilterHelper: boolean isOnlyColorMatrixFilters(com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactHostImpl: void lambda$prerenderSurface$0(java.lang.String,com.facebook.react.runtime.ReactSurfaceImpl,com.facebook.react.runtime.ReactInstance)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void updateViewAccessibility(com.facebook.react.views.text.PreparedLayoutTextView)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: int available()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.react.common.DebugServerException$Companion: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: int getCount()
com.facebook.react.fabric.mounting.MountItemDispatcher: long getRunStartTime()
com.facebook.hermes.intl.PlatformCollatorICU: com.facebook.hermes.intl.IPlatformCollator setSensitivity(com.facebook.hermes.intl.IPlatformCollator$Sensitivity)
androidx.biometric.BiometricPrompt: BiometricPrompt(androidx.fragment.app.Fragment,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.ReactInstanceManager: java.lang.String getJsExecutorName()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task onSuccessTask$lambda$13(com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: int maybeTransformLeftRightToStartEnd(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableBridgelessArchitecture()
com.facebook.react.fabric.mounting.MountItemDispatcher: void tryDispatchMountItems()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.facebook.react.common.mapbuffer.MapBuffer: int getKeyOffset(int)
androidx.drawerlayout.widget.DrawerLayout: void computeScroll()
com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate: RNCSafeAreaProviderManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isStartSamplingProfilerOnInit()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableFabricRenderer()
com.facebook.react.ReactActivityDelegate: boolean onBackPressed()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme(java.lang.String)
com.facebook.react.modules.network.CookieJarContainer: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.security.crypto.EncryptedSharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableTextDiffing$ReactAndroid_release()
com.facebook.react.defaults.DefaultReactHost: kotlin.Unit getDefaultReactHost$lambda$1(java.lang.Exception)
com.facebook.react.uimanager.style.RadialGradient$Shape: kotlin.enums.EnumEntries getEntries()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.facebook.hermes.intl.LocaleObjectICU: com.facebook.hermes.intl.ILocaleObject createDefault()
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: com.facebook.react.bridge.WritableMap getReloadAndProfileConfig()
com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener: java.lang.String getNativeId()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: void askAccessPermissions(com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightElements(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewGroupManager$Companion: ViewGroupManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dropView(android.view.View)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: int getMinSupportedApiLevel()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ReactShadowNode: void dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.views.scroll.ReactScrollView: void updateClippingRect()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void hideRedboxDialog()
com.facebook.react.fabric.FabricUIManager: float[] measurePreparedLayout(com.facebook.react.views.text.PreparedLayout,float,float,float,float)
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: NodesManager$NativeUpdateOperation(com.swmansion.reanimated.NodesManager,int,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.facebook.react.uimanager.NoSuchNativeViewException: NoSuchNativeViewException(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType$Companion: LinearGradient$Direction$KeywordType$Companion()
com.facebook.hermes.reactexecutor.HermesExecutorFactory: void setEnableDebugger(boolean)
com.facebook.react.uimanager.style.LinearGradient: com.facebook.react.uimanager.style.LinearGradient$Direction getDirection()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: UIViewOperationQueue$ManageChildrenOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase: void updateLayoutCommon(int,int,int,int,int,int)
com.facebook.react.runtime.BridgelessCatalystInstance: BridgelessCatalystInstance(com.facebook.react.runtime.ReactHostImpl)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.runtime.ReactHostImpl: java.util.Collection getNativeModules()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: MaintainVisibleScrollPositionHelper$Config(int,java.lang.Integer)
com.zoontek.rnpermissions.RNPermissionsModule: void requestNotifications(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.PreparedLayoutTextViewManager: int getChildCount(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion: ReactQueueConfigurationImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueRemoveRootView(int)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreact_featureflagsjni_so()
com.rnbiometrics.ReactNativeBiometrics: boolean isCurrentSDK29OrEarlier()
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: void execute()
com.facebook.react.devsupport.DevSupportManagerBase: int getLastErrorCookie()
com.facebook.react.views.text.PreparedLayoutTextView$Api34Utils: void draw(android.text.Layout,android.graphics.Canvas,android.graphics.Path,android.graphics.Paint)
com.facebook.react.uimanager.LayoutShadowNode: void setMarginBlock(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.react.modules.network.RequestBodyUtil: void access$closeQuietly(com.facebook.react.modules.network.RequestBodyUtil,okio.Source)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createOpacityColorMatrix(float)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int findPrecedingViewTagForTransition(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: AccessibilityInfoModule$ReactTouchExplorationStateChangeListener(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setJustifyContent(com.facebook.yoga.YogaJustify)
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1: void onAuthenticationSucceeded(android.hardware.biometrics.BiometricPrompt$AuthenticationResult)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.uimanager.ReactRootViewTagGenerator: int getNextRootViewTag()
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
okhttp3.ResponseBody: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: java.lang.String toString()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean tryStartSharedTransitionForViews(java.util.List,boolean)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder addPackage(com.facebook.react.ReactPackage)
okhttp3.ResponseBody: byte[] bytes()
com.facebook.react.common.ShakeDetector: void maybeDispatchShake(long)
com.swmansion.reanimated.NodesManager$1: NodesManager$1(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderColor(android.view.View,java.lang.Integer)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.views.text.TextAttributeProps: void setFontWeight(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
com.swmansion.reanimated.NativeMethodsHelper: com.facebook.react.views.scroll.ReactScrollView findScrollView(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.facebook.react.modules.core.PermissionAwareActivity: int checkSelfPermission(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.facebook.react.uimanager.ReactRoot: android.view.ViewGroup getRootViewGroup()
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableViewRecycling()
com.facebook.react.views.textinput.ReactEditText: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void drawShadowRoundRect(android.graphics.Canvas,android.graphics.RectF,float,com.facebook.react.uimanager.style.ComputedBorderRadius)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger: void assertLegacyArchitecture(java.lang.String,com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel)
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge[] $values()
androidx.biometric.CryptoObjectUtils$Api23Impl: CryptoObjectUtils$Api23Impl()
androidx.biometric.R$interpolator: R$interpolator()
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: ReactRootView$CustomGlobalLayoutListener(com.facebook.react.ReactRootView)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.packagerconnection.FileIoHandler$3: FileIoHandler$3(com.facebook.react.packagerconnection.FileIoHandler)
com.rnbiometrics.ReactNativeBiometricsPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] $values()
androidx.biometric.BiometricPrompt$PromptInfo: int getAllowedAuthenticators()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedNodesManager: void disconnectAnimatedNodeFromView(int,int)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.zoontek.rnpermissions.RNPermissionsModule: java.lang.String getName()
com.facebook.react.uimanager.events.EventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationStart(android.animation.Animator)
com.oblador.keychain.exceptions.KeyStoreAccessException: KeyStoreAccessException(java.lang.String,java.lang.Throwable)
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: void deletePhotos(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.swmansion.reanimated.ReactNativeUtils: com.swmansion.reanimated.ReactNativeUtils$BorderRadii getBorderRadii(android.view.View)
com.oblador.keychain.cipherStorage.CipherStorageBase: com.oblador.keychain.cipherStorage.CipherStorageBase setCipher(javax.crypto.Cipher)
com.facebook.react.animated.NativeAnimatedModule$removeAnimatedEventFromView$1: NativeAnimatedModule$removeAnimatedEventFromView$1(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,int)
kotlin.collections.AbstractList: AbstractList()
com.facebook.react.views.text.ReactVirtualTextViewManager$Companion: ReactVirtualTextViewManager$Companion()
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.facebook.react.uimanager.ViewManagersPropertyCache$1: java.lang.Object[] initialValue()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.uimanager.events.TouchEvent: int getEventCategory()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomEnd(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.swmansion.rnscreens.SearchBarManager: void setPlacement(android.view.View,java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.internal.interop.InteropUIBlockListener getInteropUIBlockListener()
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.facebook.react.uimanager.ReactAccessibilityDelegate: ReactAccessibilityDelegate(android.view.View,boolean,int)
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int getTotal4PlusFrameStutters()
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: void execute()
com.facebook.react.ReactDelegate: ReactDelegate(android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle,boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumEndEvent(android.view.ViewGroup)
com.facebook.react.runtime.ReactHostImplDevHelper: void toggleElementInspector()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onViewHierarchyUpdateFinished()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean cxxNativeAnimatedEnabled()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.runtime.internal.bolts.Task: boolean isCancelled()
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems(java.util.Queue)
com.facebook.react.uimanager.BaseViewManager: void setOutlineOffset(android.view.View,float)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int,int)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.ReactShadowNode: int getReactTag()
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setMarginAuto(int)
com.swmansion.rnscreens.ScreenViewManager: double setSheetAllowedDetents$lambda$0(com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.events.SynchronousEventReceiver: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int,boolean)
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
com.facebook.react.modules.i18nmanager.I18nUtil: void forceRTL(android.content.Context,boolean)
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$startListeningToAnimatedNodeValue$1: NativeAnimatedModule$startListeningToAnimatedNodeValue$1(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.animated.AnimatedNodeValueListener)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.facebook.react.runtime.ReactHostDelegate: com.facebook.react.runtime.JSRuntimeFactory getJsRuntimeFactory()
com.facebook.react.uimanager.events.PointerEvent$1: boolean match(int,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.uimanager.drawable.BorderDrawable: void updatePathEffect(int)
com.facebook.react.devsupport.InspectorFlags: boolean getFuseboxEnabled()
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig yogaConfig_delegate$lambda$1()
com.facebook.react.bridge.JSBundleLoader$Companion: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.oblador.keychain.KeychainModule: com.oblador.keychain.SecurityLevel getSecurityLevelOrDefault(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1: void write(int)
com.facebook.react.views.textinput.ReactTextInputBlurEvent$Companion: ReactTextInputBlurEvent$Companion()
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.JSBundleLoader$Companion: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.facebook.react.animated.AdditionAnimatedNode: AdditionAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.BV.LinearGradient.LinearGradientView: void setEndPoint(com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
com.facebook.react.uimanager.events.FabricEventDispatcher: FabricEventDispatcher(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.events.RCTModernEventEmitter)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.facebook.react.uimanager.ReactRoot: android.os.Bundle getAppProperties()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isJSDevModeEnabled()
com.rnbiometrics.ReactNativeBiometrics: void simplePrompt(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.producers.BaseNetworkFetcher: boolean shouldPropagate(com.facebook.imagepipeline.producers.FetchState)
com.facebook.react.modules.dialog.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.devsupport.DevSupportManagerBase$Companion: java.lang.String access$getReloadAppAction(com.facebook.react.devsupport.DevSupportManagerBase$Companion,android.content.Context)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void sendEventToAllConnections(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void lambda$initialize$2(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setLayoutDirectionOverride(int)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createInvertColorMatrix(float)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNode: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.lang.String getDefaultNumberingSystem(com.facebook.hermes.intl.ILocaleObject)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion: AnimatedPropertyType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: void doFrame(long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.modules.network.ResponseUtil: void onDataSend(com.facebook.react.bridge.ReactApplicationContext,int,long,long)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFixForParentTagDuringReparenting()
com.facebook.react.fabric.FabricUIManager$4: FabricUIManager$4(com.facebook.react.fabric.FabricUIManager,int,int,int,boolean)
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.IPlatformCollator setNumericAttribute(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String getMarkerName()
com.facebook.react.devsupport.DevSupportManagerBase: android.app.Activity getCurrentActivity()
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.drawee.drawable.ScalingUtils$ScaleType access$getINSTANCE$cp()
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.util.AndroidVersion: AndroidVersion()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthAuto()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task loadBundle(com.facebook.react.bridge.JSBundleLoader)
okio.ForwardingSource: okio.Source -deprecated_delegate()
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: NativeAnimatedModule$UIThreadOperation(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.switchview.ReactSwitch: android.content.res.ColorStateList createRippleDrawableColorStateList(int)
com.facebook.react.jscexecutor.JSCExecutor$Companion: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.jscexecutor.JSCExecutor$Companion,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createViewUnsafe(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: AsyncStoragePackage()
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
androidx.biometric.CryptoObjectUtils$Api28Impl: javax.crypto.Cipher getCipher(android.hardware.biometrics.BiometricPrompt$CryptoObject)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType$Companion: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType fromString(java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: SurfaceMountingManager$3(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState,com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent)
com.facebook.hermes.intl.LocaleObjectICU: java.util.ArrayList getUnicodeExtensions(java.lang.String)
com.facebook.hermes.intl.IPlatformCollator: int compare(java.lang.String,java.lang.String)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void stop()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.bridge.ReactIgnorableMountingException$Companion: ReactIgnorableMountingException$Companion()
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus[] values()
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$animationScaleObserver$1: void onChange(boolean)
com.facebook.react.modules.core.JavaTimerManager$Timer: int getTimerId()
com.facebook.hermes.intl.UnicodeExtensionKeys: UnicodeExtensionKeys()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View maybeOverrideSiblingForTabNavigator(android.view.View,android.view.View)
com.facebook.react.fabric.mounting.MountItemDispatcher: MountItemDispatcher(com.facebook.react.fabric.mounting.MountingManager,com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener)
com.facebook.react.runtime.ReactInstance: void callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.oblador.keychain.cipherStorage.CipherStorageBase$DecryptBytesHandler: void initialize(javax.crypto.Cipher,java.security.Key,java.io.InputStream)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowRadius(float)
com.facebook.react.ReactNativeApplicationEntryPoint: void loadReactNative(android.content.Context)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.swmansion.reanimated.NodesManager: void onAnimationFrame(long)
com.facebook.react.uimanager.style.BoxShadow$Companion: com.facebook.react.uimanager.style.BoxShadow parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableViewCulling()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderTopLeftRadius()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderColor(java.lang.Integer)
com.facebook.hermes.intl.NumberFormat: boolean isWellFormedCurrencyCode(java.lang.String)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setSignDisplay(com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.HorizontalScrollView findDeepestScrollViewForMotionEvent(android.view.View,android.view.MotionEvent)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes fromId(int)
com.facebook.react.devsupport.interfaces.StackFrame: java.lang.String getMethod()
com.facebook.react.uimanager.ViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.swmansion.rnscreens.Screen: float getSheetElevation()
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver: java.lang.String resolveCustomEventName(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.modules.network.RequestBodyUtil$create$1: long contentLength()
com.facebook.react.uimanager.BaseViewManager: void setRole(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.textinput.ReactEditText: boolean isSettingTextFromState()
com.facebook.react.uimanager.JSPointerDispatcher: void handleMotionEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher,boolean)
com.facebook.react.runtime.BridgelessCatalystInstance: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
com.facebook.react.animated.TrackingAnimatedNode: void update$ReactAndroid_release()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.facebook.react.ReactRootView: void onStage(int)
com.facebook.react.modules.i18nmanager.I18nUtil: void allowRTL(android.content.Context,boolean)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
com.facebook.hermes.intl.LocaleObjectAndroid: java.util.ArrayList getUnicodeExtensions(java.lang.String)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEventOrEnqueue(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List getAfterUIBlocks$ReactAndroid_release()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
com.facebook.react.devsupport.IInspectorPackagerConnection: void sendEventToAllConnections(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableResourceTimingAPI()
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: int getCurrentIndex()
com.facebook.react.views.textinput.ReactEditText: void commitStagedInputType$ReactAndroid_release()
com.facebook.react.devsupport.ReleaseDevSupportManager: void setHotModuleReplacementEnabled(boolean)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextShadowNode: void initMeasureFunction()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.facebook.react.animated.StyleAnimatedNode: void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.runtime.ReactHostDelegate: com.facebook.react.bridge.JSBundleLoader getJsBundleLoader()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
androidx.biometric.BiometricManager$Api29Impl: android.hardware.biometrics.BiometricManager create(android.content.Context)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStackAnimation(android.view.View,java.lang.String)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void updateScrollPositionInternal()
com.oblador.keychain.KeychainModule: java.util.Collection doGetAllGenericPasswordServices()
com.facebook.react.uimanager.BackgroundStyleApplicator: float getInnerBorderRadius(java.lang.Float,java.lang.Float)
com.facebook.react.views.scroll.ScrollEvent: void access$init(com.facebook.react.views.scroll.ScrollEvent,int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: java.lang.String getEncryptionAlgorithm()
com.facebook.react.views.modal.ReactModalHostView$Companion: ReactModalHostView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: int getHeight()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.facebook.hermes.intl.PlatformCollatorICU: com.facebook.hermes.intl.IPlatformCollator setCaseFirstAttribute(com.facebook.hermes.intl.IPlatformCollator$CaseFirst)
com.facebook.react.ReactInstanceManager$2: android.app.Activity getCurrentActivity()
com.facebook.react.devsupport.FpsView: void onDetachedFromWindow()
com.facebook.react.devsupport.DebugOverlayController$Companion: boolean canHandleIntent(android.content.Context,android.content.Intent)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion: com.facebook.jni.HybridData initHybrid(java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.learnium.RNDeviceInfo.RNDeviceModule: void getCarrier(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.TextLayoutManager: float calculateHeight(android.text.Layout,android.text.Spanned,float,com.facebook.yoga.YogaMeasureMode,int)
com.nozbe.watermelondb.WatermelonDBPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.StateWrapperImpl: java.lang.Object getStateDataReferenceImpl()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setAutoInitEnabled$0(java.lang.Boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.facebook.react.ReactInstanceManager$4: void onViewDetachedFromWindow(android.view.View)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface reload(java.lang.String)
com.facebook.react.modules.intent.IntentModule$Companion: IntentModule$Companion()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.EventDispatcherImpl: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableFixForParentTagDuringReparenting()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.react.views.textinput.ReactTextInputManager: void setAcceptDragAndDropTypes(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.events.PointerEvent: java.util.List createW3CPointerEvents()
com.facebook.react.modules.network.ProgressiveStringDecoder$Companion: ProgressiveStringDecoder$Companion()
com.facebook.react.uimanager.ReactShadowNode: boolean isYogaLeafNode()
com.facebook.react.uimanager.events.TouchEvent: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: int getVirtualViewAt(float,float)
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType[] values()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float,int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.bridge.GuardedAsyncTask$Companion: GuardedAsyncTask$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder access$getCustomClientBuilder$cp()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.viewmanagers.RNCSafeAreaViewManagerInterface: void setEdges(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role fromValue(java.lang.String)
com.facebook.react.common.mapbuffer.MapBuffer: long getLong(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.yoga.YogaNative: int jni_YGConfigGetErrataJNI(long)
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.Object getAnimatedObject()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void scheduleCompletionCallback(long)
com.facebook.react.devsupport.ReactInstanceDevHelper: android.view.View createRootView(java.lang.String)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: TouchEventCoalescingKeyHelper()
com.facebook.react.ReactActivity: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.devsupport.DevServerHelper$Companion: DevServerHelper$Companion()
com.facebook.hermes.intl.IntlTextUtils: boolean isASCIILetter(char)
com.facebook.react.uimanager.events.EventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.crypto.cipher.NativeGCMCipher: int nativeFailure()
com.swmansion.rnscreens.Screen: com.facebook.react.uimanager.events.EventDispatcher getReactEventDispatcher()
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
com.facebook.react.ReactInstanceManager$2: ReactInstanceManager$2(com.facebook.react.ReactInstanceManager)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)
com.facebook.react.devsupport.BundleDownloader: void downloadBundleFromURL$default(com.facebook.react.devsupport.BundleDownloader,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,okhttp3.Request$Builder,int,java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.R: R()
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.runtime.internal.bolts.Task: java.lang.Exception getError()
com.facebook.react.views.image.MultiPostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
com.nozbe.watermelondb.Connection: Connection()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setCanceled(boolean)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: UIViewOperationQueue$UIBlockOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIBlock)
com.facebook.react.packagerconnection.Responder: void respond(java.lang.Object)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: boolean getBooleanValue()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void endMarkers()
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
androidx.security.crypto.EncryptedSharedPreferences: android.util.Pair encryptKeyValuePair(java.lang.String,byte[])
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double)
com.facebook.react.views.text.TextAttributeProps: int getLayoutDirection(java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion: LayoutAnimationType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.imagepicker.ImagePickerProvider: ImagePickerProvider()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderStyle(android.view.View,java.lang.String)
com.facebook.react.util.ExceptionDataHelper: java.lang.String getExtraDataAsJson(com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setMinIntergerDigits(int)
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropsForView(java.lang.Class,java.lang.Class)
com.facebook.react.uimanager.ReactShadowNode: void setStyleWidthAuto()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: ReaLayoutAnimator(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.internal.interop.InteropEventEmitter: void overrideEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.packagerconnection.JSPackagerClient: void abortOnMessage(java.lang.Object,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: java.lang.String dangerouslyForceOverride(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
com.facebook.react.runtime.BridgelessCatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$3()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.UIViewOperationQueue$2: UIViewOperationQueue$2(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Float getPosition()
com.facebook.react.fabric.FabricUIManagerBinding: void startSurfaceWithSurfaceHandler(int,com.facebook.react.fabric.SurfaceHandlerBinding,boolean)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: void decrypt(com.oblador.keychain.decryptionHandler.DecryptionResultHandler,java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.views.modal.ReactModalHostView: void setId(int)
com.facebook.react.animated.ObjectAnimatedNode$Companion: ObjectAnimatedNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection access$connectNative(com.facebook.react.bridge.Inspector,int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextTransform getTextTransform()
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: void remove()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean fuseboxEnabledRelease()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: CipherStorageKeystoreAesCbc()
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.react.jscexecutor.JSCExecutor$Companion: JSCExecutor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: InspectorNetworkRequestListener(com.facebook.jni.HybridData)
com.facebook.react.ReactRootView: void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$getOrCreateReactInstanceTask$24(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ReadableArrayBuilder: void addArray(kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: void setCount(int)
com.facebook.react.bridge.Dynamic: int asInt()
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: ReactTextInputSelectionEvent(int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.nozbe.watermelondb.WMDatabase: int getUserVersion()
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodes$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
com.facebook.react.views.textinput.ReactEditText: boolean onDragEvent(android.view.DragEvent)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int getRetries()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void invalidate()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,java.lang.Long)
com.facebook.hermes.intl.ILocaleObject: java.util.HashMap getUnicodeExtensions()
com.facebook.react.modules.core.TimingModule: void callIdleCallbacks(double)
com.facebook.react.uimanager.style.BorderStyle$Companion: com.facebook.react.uimanager.style.BorderStyle fromString(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$deleteView$1: void onAnimationEnd(android.view.animation.Animation)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder setReactApplicationContext(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
org.pgsqlite.SQLitePlugin: void attachDatabase(java.lang.String,java.lang.String,java.lang.String,org.pgsqlite.CallbackContext)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getProduct(com.facebook.react.bridge.Promise)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.react.bridge.JavaOnlyArray$Companion: JavaOnlyArray$Companion()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: OutsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutX()
com.swmansion.rnscreens.ModalScreenViewManager: java.lang.String getName()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactHostImpl$3: void onSuccess()
com.facebook.react.runtime.internal.bolts.Task: boolean trySetResult$ReactAndroid_release(java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.facebook.react.uimanager.style.BoxShadow: BoxShadow(float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.TouchesHelper: TouchesHelper()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.runtime.ReactSurfaceImpl$Companion: boolean isRTL(android.content.Context)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.view.WindowUtilKt: void setStatusBarVisibility(android.view.Window,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(android.view.View,long)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getUri()
com.facebook.react.runtime.internal.bolts.Executors$UIThreadExecutor: void execute(java.lang.Runnable)
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeInfoFromView(android.view.View)
com.facebook.react.runtime.ReactInstance: void initializeEagerTurboModules$lambda$3(com.facebook.react.runtime.ReactInstance)
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: long getBatchNumber()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: IPlatformNumberFormatter$SignDisplay(java.lang.String,int)
com.facebook.react.devsupport.ReleaseDevSupportManager: android.app.Activity getCurrentActivity()
com.facebook.hermes.intl.IPlatformCollator: com.facebook.hermes.intl.IPlatformCollator setNumericAttribute(boolean)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.facebook.react.animated.NativeAnimatedNodesManager: void restoreDefaultValues(int)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxWidth(float)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
com.facebook.react.modules.core.ReactChoreographer: void frameCallback$lambda$1(com.facebook.react.modules.core.ReactChoreographer,long)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.hermes.intl.JSObjects: JSObjects()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,java.lang.String,int,int)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.material.chip.Chip: void setElevation(float)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1: NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1(java.lang.String,com.facebook.react.bridge.ReactApplicationContext,int)
com.facebook.react.devsupport.interfaces.RedBoxHandler: void reportRedbox(android.content.Context,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],java.lang.String,com.facebook.react.devsupport.interfaces.RedBoxHandler$ReportCompletedListener)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.nozbe.watermelondb.WMDatabaseBridge: void invalidate()
com.facebook.react.modules.network.ResponseUtil: void onResponseReceived(com.facebook.react.bridge.ReactApplicationContext,int,int,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.react.devsupport.RedBoxContentView: void resetReporting()
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$special$$inlined$sortBy$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost$default(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.runtime.JSRuntimeFactory,boolean,java.util.List,int,java.lang.Object)
com.facebook.react.uimanager.JSPointerDispatcher: void dispatchEventForViewTargets(java.lang.String,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,java.util.List,com.facebook.react.uimanager.events.EventDispatcher)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.learnium.RNDeviceInfo.RNDeviceModule: void isBluetoothHeadphonesConnected(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.ReactAxOrderHelper: void applyFlowToTraversal(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getExpectedNumFrames()
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.modules.network.ProgressResponseBody: long totalBytesRead()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void setAlpha(int)
com.facebook.react.runtime.ReactHostImplDevHelper: ReactHostImplDevHelper(com.facebook.react.runtime.ReactHostImpl)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeChildAt(int)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.lang.Object next()
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: java.lang.String toString()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)
androidx.biometric.BiometricViewModel$CallbackListener: BiometricViewModel$CallbackListener(androidx.biometric.BiometricViewModel)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: IPlatformDateTimeFormatter$Month(java.lang.String,int)
com.facebook.react.modules.i18nmanager.I18nUtil$Companion: com.facebook.react.modules.i18nmanager.I18nUtil getInstance()
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: void refreshPhotoSelection(com.facebook.react.bridge.Promise)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForTrue(java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int[] getSharedGroup(int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean isLayoutAnimationEnabled()
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.interfaces.TaskInterface start()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.facebook.react.fabric.FabricUIManagerBinding: void initHybrid()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int getSurfaceId()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
com.facebook.react.util.RNLog: RNLog()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableDoubleMeasurementFixAndroid()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createColorMatrixEffect(android.graphics.ColorMatrix,android.graphics.RenderEffect)
com.facebook.react.uimanager.style.LinearGradient: double getAngleForKeyword(com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType,double,double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.uimanager.NativeViewHierarchyManager$1: NativeViewHierarchyManager$1(com.facebook.react.uimanager.NativeViewHierarchyManager,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup,android.view.View,java.util.Set,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
com.facebook.react.defaults.DefaultReactHostDelegate: java.util.List getReactPackages()
com.oblador.keychain.cipherStorage.CipherStorage: boolean isBiometrySupported()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableBridgelessArchitecture()
com.facebook.react.bridge.ReactNativeJniCommonSoLoader: boolean isInitialized()
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JavaScriptExecutorFactory getJsExecutorFactory()
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: void lambda$createMemoryPressureListener$9(java.lang.ref.WeakReference,int)
com.facebook.react.uimanager.ShadowNodeRegistry: boolean isRootNode(int)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: void setLast(long)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onTouchEvent(android.view.MotionEvent)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: EncryptedSharedPreferences$PrefKeyEncryptionScheme(java.lang.String,int,com.google.crypto.tink.KeyTemplate)
com.facebook.react.uimanager.ReactShadowNode: void setStyleWidth(float)
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: void setEnd(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: java.lang.String getSkeleonSymbol12()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableNetworkEventReporting()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isInvertColorsEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void logViewHierarchy(android.view.ViewGroup,boolean)
com.facebook.react.runtime.BridgelessReactStateTracker: void enterState(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.ReactRootView: boolean hasActiveReactContext()
com.facebook.react.modules.devloading.DevLoadingModule$Companion: DevLoadingModule$Companion()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$1: DevServerHelper$openPackagerConnection$1$doInBackground$1(com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener)
com.facebook.react.ReactInstanceManager: void removeReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
com.facebook.react.bridge.JSBundleLoader$Companion: JSBundleLoader$Companion()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.interop.InteropModuleRegistry$Companion: InteropModuleRegistry$Companion()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: void waitResult()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createOpacityEffect(float,android.graphics.RenderEffect)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTitleFontFamily(android.view.View,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.facebook.react.uimanager.MatrixMathHelper: boolean isZero(double)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent getMotionEvent()
com.facebook.react.devsupport.LogBoxDialog: LogBoxDialog(android.app.Activity,android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.modules.core.JavaScriptTimerExecutor: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.HeadlessJsTaskService: void access$setWakeLock$cp(android.os.PowerManager$WakeLock)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.ReactContext: void internal_registerInteropModule(java.lang.Class,java.lang.Object)
androidx.biometric.AuthenticationCallbackProvider: androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback getFingerprintCallback()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.facebook.react.uimanager.ReactShadowNode: int getScreenHeight()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isLayoutAnimationEnabled()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactRootView: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisPercent(float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendAccessibilityServiceChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF getDirectionAwareBorderInsets()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateDestroyTask$35(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.defaults.DefaultSoLoader: DefaultSoLoader()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitStart()
com.facebook.react.views.textinput.ReactTextChangedEvent$Companion: ReactTextChangedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerSlide(android.view.View,float)
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp valueOf(java.lang.String)
androidx.biometric.BiometricFragment: void authenticateWithFingerprint(androidx.core.hardware.fingerprint.FingerprintManagerCompat,android.content.Context)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.uimanager.style.RadialGradient: kotlin.Pair calculateEllipseRadius(float,float,float)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void getMHybridData$annotations()
com.facebook.react.uimanager.style.CornerRadii: com.facebook.react.uimanager.style.CornerRadii copy(float,float)
com.facebook.react.animated.NativeAnimatedNodesManager: void removeAnimatedEventFromView(int,java.lang.String,int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(float)
com.facebook.react.bridge.JavaOnlyArray$Companion: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager$5: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean isActionableForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$getResponseHandlers$p(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion: OnScrollDispatchHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(com.swmansion.worklets.WorkletsModule,long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.layoutReanimation.LayoutAnimations,boolean)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enablePropsUpdateReconciliationAndroid()
androidx.biometric.BiometricFragment$4: void onChanged(java.lang.Boolean)
androidx.biometric.BiometricFragment$Api29Impl: void setConfirmationRequired(android.hardware.biometrics.BiometricPrompt$Builder,boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener: void onLayout(android.view.ViewGroup)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableMap copyReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.LengthPercentage: boolean equals(java.lang.Object)
com.facebook.react.bridge.UiThreadUtil: android.os.Handler mainHandler_delegate$lambda$0()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void startAnimation(int,int,java.util.HashMap)
com.facebook.react.uimanager.DisplayMetricsHolder: void getWindowDisplayMetrics$annotations()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String getName()
com.facebook.react.views.scroll.ScrollEventType$Companion: ScrollEventType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.security.crypto.EncryptedSharedPreferences: android.content.SharedPreferences$Editor edit()
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: boolean isContentViewReady()
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int)
com.facebook.react.ReactActivity: void loadApp(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.soloader.OpenSourceMergedSoMapping: java.lang.String mapLibName(java.lang.String)
com.facebook.react.uimanager.ReactOverflowView: java.lang.String getOverflow()
com.facebook.hermes.intl.PlatformNumberFormatterICU: java.lang.String fieldToString(java.text.AttributedCharacterIterator$Attribute,double)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArrayString(java.lang.String)
com.facebook.hermes.intl.IntlTextUtils: IntlTextUtils()
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.views.image.ReactImageView: void setImageSource$ReactAndroid_release(com.facebook.react.views.imagehelper.ImageSource)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.uimanager.style.ColorEdges: int hashCode()
com.facebook.react.ReactDelegate: void loadApp(java.lang.String)
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: int getOpacity()
com.facebook.react.modules.network.ProgressRequestBody: okhttp3.MediaType contentType()
com.facebook.react.uimanager.style.BoxShadow: float getOffsetX()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.invertase.firebase.common.ReactNativeFirebaseModule: void removeEventListeningExecutor(java.lang.String)
com.oblador.keychain.KeychainModule: void getAllGenericPasswordServices(com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.RedBoxContentView: void init$lambda$3(com.facebook.react.devsupport.RedBoxContentView,android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String[] getAvailableLocales()
com.facebook.react.modules.core.JavaTimerManager: boolean hasActiveTimersInRange$ReactAndroid_release(long)
com.facebook.react.views.text.PreparedLayoutTextView$Companion: boolean access$isConfirmKey(com.facebook.react.views.text.PreparedLayoutTextView$Companion,int)
com.BV.LinearGradient.LinearGradientManager: void setStartPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactRootView: void simulateCheckForKeyboardForTesting()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: CompositeBackgroundDrawable(android.content.Context,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task forError(java.lang.Exception)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.facebook.react.bridge.WritableMap: void putLong(java.lang.String,long)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.modules.network.RequestBodyUtil: java.io.InputStream getDownloadFileInputStream(android.content.Context,android.net.Uri)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onDetachedFromWindow()
com.facebook.react.uimanager.UIManagerReanimatedHelper: boolean isOperationQueueEmpty(com.facebook.react.uimanager.UIImplementation)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.reactnativecommunity.cameraroll.CameraRollModule: boolean putPlayableDuration(android.content.ContentResolver,com.facebook.react.bridge.WritableMap,android.net.Uri,boolean,boolean)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task onSuccess(com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor)
com.facebook.react.bridge.UiThreadUtil: android.os.Handler getMainHandler()
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: void notifyAboutKeyboardChange()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean disableMainQueueSyncDispatchIOS()
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.modal.ReactModalHostView: void addView(android.view.View,int)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: void validateDirectEventNames(java.lang.String,java.util.Map)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableDestroyShadowTreeRevisionAsync()
androidx.fragment.app.FragmentActivity: void onResumeFragments()
com.facebook.react.animated.SpringAnimation$PhysicsState: boolean equals(java.lang.Object)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidth(float)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.core.JavaTimerManager$Timer: int getInterval()
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1: NativeAnimatedModule$startAnimatingNode$1(com.facebook.react.animated.NativeAnimatedModule,int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String customType()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.lang.String[] getAvailableLocales()
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactRoot: void onStage(int)
com.facebook.react.touch.JSResponderHandler: boolean onInterceptTouchEvent(android.view.ViewGroup,android.view.MotionEvent)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
androidx.biometric.FingerprintDialogFragment: int getThemedColorFor(int)
com.facebook.react.views.scroll.ReactScrollViewHelper: void updateFabricScrollState(android.view.ViewGroup,int,int)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void closeDatabase()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $values()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void beginMarkers(java.lang.String)
com.facebook.react.viewmanagers.RNSSearchBarManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useAlwaysAvailableJSErrorHandling()
com.facebook.jni.CppSystemErrorException: int getErrorCode()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.oblador.keychain.PrefsStorage: PrefsStorage(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.internal.span.ReactForegroundColorSpan: ReactForegroundColorSpan(int)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String getFile()
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue$lambda$2(int,com.facebook.react.animated.NativeAnimatedModule,double,double)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCarrierSync()
com.facebook.react.uimanager.RootView: void onChildEndedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer getHeightMeasureSpec()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()
com.facebook.hermes.intl.JSObjects: java.lang.Object Null()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean canChildScrollUp()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean incorporateMaxLinesDuringAndroidLayout()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackground(com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] $values()
com.facebook.react.uimanager.JSPointerDispatcher: boolean isAnyoneListeningForBubblingEvent(java.util.List,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,com.facebook.react.uimanager.events.PointerEventHelper$EVENT)
com.facebook.react.ReactRootView: void onDetachedFromWindow()
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.lang.String getFabricComponentName(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.common.SurfaceDelegate createSurfaceDelegate(java.lang.String)
androidx.biometric.BiometricFragment$Api28Impl: void setDescription(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.hermes.intl.LocaleObjectAndroid: void ensureParsedLocaleIdentifier()
androidx.biometric.BiometricPrompt$AuthenticationCallback: void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.devsupport.interfaces.PackagerStatusCallback: void onPackagerStatusFetched(boolean)
androidx.biometric.CryptoObjectUtils$Api23Impl: void setEncryptionPaddingPKCS7(android.security.keystore.KeyGenParameterSpec$Builder)
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: void execute()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableDoubleMeasurementFixAndroid()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.facebook.react.runtime.ReactHostImpl: void attachSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.facebook.react.interfaces.fabric.ReactSurface: android.view.ViewGroup getView()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenHeight()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void install$lambda$1(com.swmansion.gesturehandler.react.RNGestureHandlerModule)
com.oblador.keychain.cipherStorage.CipherStorageBase: void copy(java.io.InputStream,java.io.OutputStream)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void showInternal(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeLanguageSubtag()
com.facebook.react.common.ReactConstants: ReactConstants()
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset$lambda$2(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int,int,int)
com.facebook.react.modules.i18nmanager.I18nUtil: I18nUtil()
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.SynchronousEvent: java.lang.String getEventName()
com.facebook.react.shell.MainReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ScrollEvent$Companion: ScrollEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.progressbar.ProgressBarContainerView: ProgressBarContainerView(android.content.Context)
com.facebook.react.views.text.DefaultStyleValuesUtil: int getDefaultTextColorHighlight(android.content.Context)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderWidth(android.view.View,float)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: InterpolationAnimatedNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.BridgelessReactContext: boolean hasActiveCatalystInstance()
com.reactnativecommunity.cameraroll.CameraRollModule: void deleteMediaFiles(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: MatrixMathHelper$MatrixDecompositionContext$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerStart(java.lang.String,java.lang.String)
com.facebook.react.animated.SpringAnimation$PhysicsState: SpringAnimation$PhysicsState(double,double)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: int getResourceDrawableId(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.NativeMap _init_$lambda$0()
com.facebook.react.uimanager.UIImplementation$1: UIImplementation$1(com.facebook.react.uimanager.UIImplementation,com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.modules.core.PermissionAwareActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: void onDecrypt(com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult,java.lang.Throwable)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$2: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.ReactRootView: boolean isDispatcherReady()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
androidx.fragment.app.Fragment: void performPause()
com.facebook.react.uimanager.ReactRoot: java.lang.String getSurfaceID()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean getIsReducedMotion()
com.facebook.react.uimanager.MatrixMathHelper: double v3Dot(double[],double[])
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.facebook.react.viewmanagers.AndroidHorizontalScrollContentViewManagerInterface: void setRemoveClippedSubviews(android.view.View,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)
com.facebook.crypto.cipher.NativeGCMCipher: int nativeGetCipherBlockSize()
com.facebook.react.views.scroll.ReactScrollView: void setContentOffset(com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.facebook.react.common.assets.ReactFontManager: com.facebook.react.common.assets.ReactFontManager access$get_instance$cp()
com.facebook.react.runtime.ReactSurfaceImpl$Companion: float access$getFontScale(com.facebook.react.runtime.ReactSurfaceImpl$Companion,android.content.Context)
com.facebook.react.bridge.ReadableArrayBuilderKt: com.facebook.react.bridge.ReadableArray buildReadableArray(kotlin.jvm.functions.Function1)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.drawerlayout.widget.DrawerLayout: void onAttachedToWindow()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean dispatchUpdatesWillChangeLayout(float,float)
com.facebook.react.uimanager.style.LogicalEdge$START: int toSpacingType()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.image.ReactImageView: void maybeUpdateViewFromRequest(boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean fuseboxNetworkInspectionEnabled()
androidx.appcompat.widget.AppCompatTextView: void access$701(androidx.appcompat.widget.AppCompatTextView,int[],int)
com.facebook.react.animated.NativeAnimatedNodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
androidx.drawerlayout.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.biometric.R: R()
com.facebook.react.devsupport.ChangeBundleLocationDialog: void show$lambda$1(android.widget.EditText,java.lang.String,android.view.View)
com.facebook.react.ReactInstanceManager: com.facebook.react.uimanager.ViewManager createViewManager(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setPosition(int,float)
androidx.security.crypto.MasterKeys: boolean keyExists(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.swmansion.reanimated.CopiedEvent: java.lang.String getEventName()
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.react.modules.clipboard.ClipboardModule$Companion: ClipboardModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenViewManager: void removeView(com.swmansion.rnscreens.Screen,android.view.View)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] $values()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.String getAccessedFeatureFlags$ReactAndroid_release()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.react.uimanager.style.ColorStopUtils: java.util.List processColorTransitionHints(com.facebook.react.uimanager.style.ProcessedColorStop[])
com.facebook.react.modules.dialog.AlertFragment$Companion: boolean isAppCompatTheme(android.content.Context)
com.facebook.react.uimanager.Spacing: float getRaw(int)
com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion: DrawerSlideEvent$Companion()
com.swmansion.reanimated.ReanimatedUIManagerFactory: com.facebook.react.uimanager.UIManagerModule create(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.biometric.BiometricViewModel: java.lang.CharSequence getSubtitle()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.animated.AnimatedNode getNodeById(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void clearAnimationConfigRecursive(android.view.View)
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinWidthPercent(float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.animated.AnimatedNode: void onAttachedToNode$ReactAndroid_release(com.facebook.react.animated.AnimatedNode)
com.swmansion.reanimated.MapUtils: MapUtils()
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$1: void onNotification(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: ReactScrollViewCommandHelper$ScrollToEndCommandData(boolean)
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion: LayoutUpdateAnimation$Companion()
com.oblador.keychain.PrefsStorage: java.lang.String getKeyForCipherStorage(java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] getEdgeColors()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$decrementPendingJSCalls$5()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int colorFromAlphaAndRGBComponents(float,float)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: ReactNativeFirebaseUtilsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNode: void setStyleHeightAuto()
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.swmansion.rnscreens.CustomToolbar: boolean getShouldApplyTopInset()
com.facebook.react.BaseReactPackage$ModuleHolderProvider: com.facebook.react.bridge.NativeModule get()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.views.text.ReactFontManager: ReactFontManager(com.facebook.react.common.assets.ReactFontManager,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.runtime.ReactHostImpl: void startAttachedSurfaces(java.lang.String,com.facebook.react.runtime.ReactInstance)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.facebook.react.uimanager.events.TouchEvent: androidx.core.util.Pools$SynchronizedPool access$getEVENTS_POOL$cp()
com.facebook.react.common.assets.ReactFontManager$AssetFontFamily: android.graphics.Typeface getTypefaceForStyle(int)
com.facebook.react.modules.network.HeaderUtil$Companion: java.lang.String stripHeaderName(java.lang.String)
com.facebook.react.uimanager.style.OutlineStyle: OutlineStyle(java.lang.String,int)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.ReactInstanceManager: void addReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: void lambda$static$1(javax.crypto.Cipher,java.security.Key,java.io.InputStream)
com.facebook.react.uimanager.events.PointerEvent: PointerEvent()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
com.imagepicker.ImagePickerModule: void launchCamera(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableCustomFocusSearchOnClippedElementsAndroid()
com.facebook.react.uimanager.ReactShadowNodeImpl: float getFlex()
com.facebook.react.uimanager.ShadowNodeRegistry: void addNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.style.RadialGradient$Companion: RadialGradient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.TouchTargetHelper: TouchTargetHelper()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: void onEmojiCompatInitializedForSwitchText()
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.react.runtime.ReactHostImpl$ReactInstanceCalback: void then(com.facebook.react.runtime.ReactInstance)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String getName()
com.facebook.hermes.intl.DateTimeFormat: boolean isLocaleIdType(java.lang.String)
com.facebook.react.modules.fresco.ImageCacheControl: ImageCacheControl(java.lang.String,int)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.facebook.react.defaults.DefaultReactHostDelegate: java.lang.String getJsMainModulePath()
com.facebook.react.runtime.ReactHostInspectorTarget: void close()
com.facebook.react.jstasks.HeadlessJsTaskContext: HeadlessJsTaskContext(com.facebook.react.bridge.ReactContext,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: CipherStorageBase$IV()
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void applyTransformation(float,android.view.animation.Transformation)
com.facebook.react.views.view.ViewGroupClickEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.packagerconnection.RequestHandler: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.uimanager.RootViewManager$Companion: RootViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerModule$2: UIManagerModule$2(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStatusBarColor(android.view.View,java.lang.Integer)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: java.lang.String toString()
androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFixForParentTagDuringReparenting()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: void retryAuthentication()
com.facebook.react.views.text.ReactRawTextManager$Companion: ReactRawTextManager$Companion()
com.facebook.react.views.text.ReactTextView: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: void dangerouslyReset()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.BV.LinearGradient.LinearGradientView: void setStartPoint(com.facebook.react.bridge.ReadableArray)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.oblador.keychain.cipherStorage.CipherStorageBase: javax.crypto.Cipher getCachedInstance()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReloadTask$29(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createDropShadowEffect$default(com.facebook.react.uimanager.FilterHelper,float,float,float,int,android.graphics.RenderEffect,int,java.lang.Object)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getPreferredContentInsetStartWithNavigation()
com.facebook.react.ReactInstanceManager$2: com.facebook.react.interfaces.TaskInterface loadBundle(com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.bridge.ReadableMapBuilder: void put(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: void execute()
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: void execute()
com.facebook.react.animated.NativeAnimatedNodesManager: void onEventDispatch$lambda$3(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event)
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeValue$1: NativeAnimatedModule$setAnimatedNodeValue$1(com.facebook.react.animated.NativeAnimatedModule,int,double)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.worklets.WorkletsModule: void invalidateCpp()
com.facebook.react.uimanager.ReactShadowNode: void setDefaultPadding(int,float)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingTop()
com.facebook.react.internal.AndroidChoreographerProvider$AndroidChoreographer: void removeFrameCallback(android.view.Choreographer$FrameCallback)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener: void onViewFound(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIImplementation: int resolveRootTagFromReactTag(int)
androidx.biometric.BiometricPrompt: void cancelAuthentication()
androidx.biometric.BiometricManager$DefaultInjector: boolean isDeviceSecurable()
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setAnimated(android.view.View,boolean)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,java.lang.String)
androidx.biometric.BiometricFragment$1: void onChanged(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.uimanager.LengthPercentage$Companion: LengthPercentage$Companion()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPosition(int,float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void navigationTabChanged(android.view.View,android.view.View)
com.facebook.react.animated.PropsAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtual()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.devsupport.ReleaseDevSupportManager: boolean getDevSupportEnabled()
com.facebook.react.animated.AnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void dispatchAllEvents()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setHintTextColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,boolean)
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: LayoutShadowNode$MutableYogaValue()
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTLAllowed(android.content.Context)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.util.List getMapBufferList(int)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.ReactPackageHelper: java.lang.Iterable getNativeModuleIterator(com.facebook.react.ReactPackage,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: UIViewOperationQueue$DispatchUIFrameCallback(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int)
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedBundleFromNetworkLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnativejni_common_so()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String toString()
com.facebook.hermes.intl.UnicodeExtensionKeys$4: UnicodeExtensionKeys$4()
androidx.appcompat.app.AppCompatActivity: void onStop()
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.HeadlessJsTaskService$Companion: HeadlessJsTaskService$Companion()
com.facebook.react.ReactActivity: ReactActivity()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType[] values()
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: boolean hasNextKey()
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setCurrency(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay)
com.facebook.react.uimanager.ReactStylesDiffMap: java.util.Map toMap()
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.module.model.ReactModuleInfo: java.lang.String className()
com.rnbiometrics.ReactNativeBiometrics: boolean doesBiometricKeyExist()
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context,int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer getLineNumber()
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setHideNavigationBar(android.view.View,boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.facebook.react.common.ClearableSynchronizedPool: boolean release(java.lang.Object)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtualAnchor()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void flingAndSnap(int)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setBorderStyle(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.facebook.react.ReactHost: void onHostPause()
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.biometric.CancellationSignalProvider: CancellationSignalProvider(androidx.biometric.CancellationSignalProvider$Injector)
com.facebook.react.MemoryPressureRouter: void dispatchMemoryPressure(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable ensureCompositeBackgroundDrawable(android.view.View)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.facebook.react.modules.websocket.WebSocketModule$Companion: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
com.google.android.material.button.MaterialButton: int getTextHeight()
com.facebook.drawee.drawable.ForwardingDrawable: void getTransformedBounds(android.graphics.RectF)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void setReleaseLevel(com.facebook.react.common.ReleaseLevel)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: java.util.Map getEagerViewManagerMap()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: short access$readUnsignedShort-BwKQO78(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean incorporateMaxLinesDuringAndroidLayout()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.facebook.react.views.scroll.ReactScrollView$1: void run()
com.nozbe.watermelondb.WMDatabaseBridge: com.facebook.react.bridge.WritableArray unsafeGetLocalSynchronously(int,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getIncremental(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.BorderDrawable: int getBorderColor(com.facebook.react.uimanager.style.LogicalEdge)
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String getName()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void setAlpha(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.hermes.intl.JSObjects: java.lang.Object Undefined()
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener getOnRequestCloseListener()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onSizeChanged(int,int,int,int)
androidx.fragment.app.Fragment: void setNextTransition(int)
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerFromResolver(java.lang.String)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: long skip(long)
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.RequestBody: boolean isOneShot()
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.lang.String getDefaultCalendarName(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.runtime.internal.bolts.Task: boolean waitForCompletion(long,java.util.concurrent.TimeUnit)
com.facebook.react.ReactActivityDelegate$1: ReactActivityDelegate$1(com.facebook.react.ReactActivityDelegate,android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle,boolean)
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate: UnimplementedNativeViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: java.lang.String getSkeleonSymbol()
com.facebook.react.common.mapbuffer.MapBuffer: java.util.List getMapBufferList(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean getBoolean(int)
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: KeyboardWorkletWrapper(com.facebook.jni.HybridData)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.drawee.drawable.ForwardingDrawable: void setColorFilter(android.graphics.ColorFilter)
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setProgress$ReactAndroid_release(double)
com.facebook.react.fabric.DevToolsReactPerfLogger$Companion: boolean access$isFabricCommitMarker(com.facebook.react.fabric.DevToolsReactPerfLogger$Companion,com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.modules.network.NetworkingModule$Companion: void access$applyCustomBuilder(com.facebook.react.modules.network.NetworkingModule$Companion,okhttp3.OkHttpClient$Builder)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void updateProps(int,java.util.Map)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForView(int)
com.facebook.react.uimanager.PixelUtil: float toDIPFromPixel(float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent$Companion: ReactTextInputEndEditingEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: void dispatch(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener: void onSuccess()
com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler: okhttp3.RequestBody toRequestBody(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] $values()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicWidth()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.ReactNativeHost: java.lang.String getJSBundleFile()
com.swmansion.rnscreens.Screen: void getNavigationBarColor$annotations()
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: void setCancelled()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.views.safeareaview.ReactSafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setReanimatedNativeHierarchyManager(com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager)
com.facebook.react.fabric.FabricUIManager: java.lang.Integer findNextFocusableElement(int,int,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: TurboModuleManager$ModuleHolder()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: java.lang.String toString()
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle[] $values()
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.View)
com.facebook.react.devsupport.ReactInstanceDevHelper: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.facebook.react.modules.blob.BlobModule$networkingResponseHandler$1: BlobModule$networkingResponseHandler$1(com.facebook.react.modules.blob.BlobModule)
com.facebook.react.runtime.ReactInstance: long getJavaScriptContext()
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReloadTask$32(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean prepareSharedTransition(java.util.List,boolean)
com.swmansion.rnscreens.NativeScreensModuleSpec: NativeScreensModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.ReactClippingViewGroup: boolean getRemoveClippedSubviews()
com.facebook.hermes.intl.IntlTextUtils: boolean isASCIIDigit(char)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: java.lang.String toString()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useTurboModuleInterop()
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: void run()
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void endCreatingModule()
com.facebook.react.bridge.ReactContext: void onHostDestroyImpl()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void hasPermission(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.modules.debug.DevMenuModule: void reload$lambda$0(com.facebook.react.modules.debug.DevMenuModule)
com.swmansion.worklets.WorkletsMessageQueueThreadBase: WorkletsMessageQueueThreadBase()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
com.facebook.react.animated.InterpolationAnimatedNode: InterpolationAnimatedNode(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.style.ComputedBorderRadius: ComputedBorderRadius()
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int getStart()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitchShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.events.EventEmitterImpl$Companion: EventEmitterImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(double)
com.oblador.keychain.KeychainModule: java.lang.String getSecurityRulesOrDefault(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.swmansion.reanimated.NodesManager: void startUpdatingOnAnimationFrame()
com.swmansion.rnscreens.Screen: int getSheetInitialDetentIndex()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String getName()
com.facebook.react.ReactRootView: void dispatchDraw(android.graphics.Canvas)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.security.crypto.MasterKeys: android.security.keystore.KeyGenParameterSpec createAES256GCMKeyGenParameterSpec(java.lang.String)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: int interpolateColor(double,double[],int[])
androidx.activity.ComponentActivity: void reportFullyDrawn()
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$backPressedCallback$1: void handleOnBackPressed()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: AsyncStorageModule$5(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String getEventName()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,java.lang.String,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.common.mapbuffer.MapBuffer$Companion: kotlin.ranges.IntRange getKEY_RANGE$ReactAndroid_release()
com.facebook.react.runtime.BridgelessCatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.animated.AnimatedNodeWithUpdateableConfig: void onUpdateConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactEditText: void setSettingTextFromState(boolean)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
com.facebook.react.views.text.ReactTextView: boolean hasOverlappingRendering()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostInspectorTarget getOrCreateReactHostInspectorTarget()
com.facebook.react.uimanager.BaseViewManager: void setClickCapture(android.view.View,boolean)
com.facebook.react.runtime.internal.bolts.Task: java.lang.Object getResult()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didMountItems(java.util.List)
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion: org.json.JSONObject access$stackFrameToJson(com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion,com.facebook.react.devsupport.interfaces.StackFrame)
com.facebook.react.views.textinput.ReactEditText: java.util.concurrent.CopyOnWriteArrayList access$getListeners$p(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightTraceUpdates(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactRootView: boolean isRootViewTagSet()
com.facebook.react.common.DebugServerException: java.lang.String access$getGENERIC_ERROR_MESSAGE$cp()
com.facebook.react.uimanager.style.BorderColors: boolean equals-impl(java.lang.Integer[],java.lang.Object)
androidx.fragment.app.Fragment: void performResume()
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String decryptBytes(java.security.Key,byte[],com.oblador.keychain.cipherStorage.CipherStorageBase$DecryptBytesHandler)
com.facebook.react.devsupport.DevSupportManagerBase: void setLastErrorCookie(int)
com.facebook.react.views.text.PreparedLayoutTextView: void clearSelection()
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getJSAppBundleName()
com.facebook.react.animated.TrackingAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$batch$5(com.facebook.react.bridge.ReadableArray,com.nozbe.watermelondb.WMDatabaseDriver)
androidx.biometric.BiometricManager: int canAuthenticateWithFingerprint()
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: UIViewOperationQueue$FindTargetForTouchOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback)
com.facebook.react.ReactAndroidHWInputDeviceHelper$Companion: ReactAndroidHWInputDeviceHelper$Companion()
androidx.activity.ComponentActivity: void onTrimMemory(int)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.react.views.textinput.ReactEditText: void addTextChangedListener(android.text.TextWatcher)
com.facebook.react.jstasks.HeadlessJsTaskContext$Companion: HeadlessJsTaskContext$Companion()
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
androidx.biometric.CryptoObjectUtils$Api28Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(javax.crypto.Cipher)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean updateRuntimeShadowNodeReferencesOnCommit()
com.facebook.react.uimanager.YogaNodePool: YogaNodePool()
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder$Companion: TurboModuleManager$ModuleHolder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String getStyle()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.facebook.react.CoreModulesPackage$1: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.react.views.textinput.ReactEditText: void onDraw(android.graphics.Canvas)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.facebook.react.bridge.CatalystInstanceImpl: void unregisterFromInspector()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.View,android.view.View,int)
com.nozbe.watermelondb.WMDatabaseDriver: java.lang.String getLocal(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] access$getPagesNative(com.facebook.react.bridge.Inspector)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.PackageList: android.app.Application getApplication()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: void run()
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: void getItem(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.runtime.ReactHostImpl: boolean isInstanceInitialized()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion: java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate$Companion: TurboModuleManagerDelegate$Companion()
com.facebook.react.animated.ValueAnimatedNode: void flattenOffset()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.uimanager.style.LinearGradient$Direction: LinearGradient$Direction()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.fragment.app.Fragment: int getTargetRequestCode()
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: boolean enableFabricRenderer()
com.facebook.react.fabric.FabricUIManagerBinding: void drainPreallocateViewsQueue()
com.facebook.react.packagerconnection.RequestHandler: void onNotification(java.lang.Object)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void adjustPositionForContentChangeRTL(int,int,int,int)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener: void onAnimationEnd()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$Companion: AccessibilityInfoModule$Companion()
com.facebook.react.jstasks.HeadlessJsTaskContext: void scheduleTaskTimeout(int,long)
androidx.fragment.app.DialogFragment: boolean onHasView()
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$sendMessage$9(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.modules.websocket.WebSocketModule$connect$2: WebSocketModule$connect$2(com.facebook.react.modules.websocket.WebSocketModule,int)
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
com.facebook.react.uimanager.style.OutlineStyle: kotlin.enums.EnumEntries getEntries()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.react.soloader.OpenSourceMergedSoMapping: void invokeJniOnload(java.lang.String)
com.swmansion.worklets.AndroidUIScheduler: void triggerUI()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: void run(android.view.View)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.facebook.react.views.textinput.ReactEditText: boolean onKeyUp(int,android.view.KeyEvent)
com.learnium.RNDeviceInfo.RNDeviceModule: void isBatteryCharging(com.facebook.react.bridge.Promise)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.swmansion.worklets.WorkletsModule: com.swmansion.worklets.AndroidUIScheduler getAndroidUIScheduler()
com.facebook.react.uimanager.events.FabricEventDispatcher$Companion: FabricEventDispatcher$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.BiometricManager: androidx.biometric.BiometricManager from(android.content.Context)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean isLayoutAnimationEnabled()
com.facebook.react.views.text.TextTransform$Companion: java.lang.String applyNonNull(java.lang.String,com.facebook.react.views.text.TextTransform)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.runtime.internal.bolts.Executors: Executors()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemManufacturer(com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.DevServerHelper$openInspectorConnection$1: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.nozbe.watermelondb.WMDatabase: com.nozbe.watermelondb.WMDatabase getInstance(java.lang.String,android.content.Context,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$GradientSize getSize()
com.facebook.react.views.view.ReactViewGroup$1: void run()
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.views.view.ReactViewManager$Companion: ReactViewManager$Companion()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor accessorProvider$lambda$0()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setDefaultPadding(int,float)
com.facebook.react.modules.blob.BlobModule: double access$getLastModifiedFromUri(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.uimanager.BackgroundStyleApplicator: android.graphics.Path createPaddingBoxPath(android.view.View,com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable,android.graphics.RectF,android.graphics.RectF)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setGapPercent(float)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray access$getLayoutHandlers$p(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1: LayoutAnimationController$applyLayoutUpdate$1(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,int)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.nativeProxy.EventHandler: EventHandler(com.facebook.jni.HybridData)
com.facebook.react.ReactDelegate: void onHostDestroy()
com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void clearAndCloseDatabase()
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] $values()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.uimanager.JSPointerDispatcher$1: void doFrame(long)
com.oblador.keychain.R: R()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeNativeChildAt(int)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getAffectedLayoutNodesCount()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean commonTestFlag()
com.facebook.react.HeadlessJsTaskService: void createReactContextAndScheduleTask(com.facebook.react.jstasks.HeadlessJsTaskConfig)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent$Companion: ReactTextInputKeyPressEvent$Companion()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.view.View getHostView()
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: void run()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.facebook.react.runtime.ReactHostImpl: boolean isSurfaceWithModuleNameAttached(java.lang.String)
com.swmansion.reanimated.ReanimatedPackage: java.util.Map lambda$getReactModuleInfoProvider$0(java.util.Map)
com.facebook.react.uimanager.drawable.BorderDrawable: void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.rnbiometrics.ReactNativeBiometrics: void deleteKeys(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion: ReactHorizontalScrollContainerViewManager$Companion()
com.swmansion.reanimated.NodesManager$1: void runGuarded()
com.facebook.react.views.view.ReactDrawableHelper: int getAttrId(android.content.Context,java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.facebook.react.views.scroll.ReactScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isDeviceDebugEnabled()
com.facebook.react.uimanager.ReactRoot: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.NativeKind getNativeKind()
com.swmansion.rnscreens.Screen: void setSheetExpandsWhenScrolledToEdge(boolean)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: AsyncStorageModule$6(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: int getRetries()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void preallocateView(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setFlexBasis(float)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createDropShadowEffect(float,float,float,int,android.graphics.RenderEffect)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void resume()
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.runtime.JSRuntimeFactory getJsRuntimeFactory()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void setTextView(android.widget.TextView)
com.rnbiometrics.BuildConfig: BuildConfig()
com.facebook.react.devsupport.DevServerHelper$openInspectorConnection$1: java.lang.Void doInBackground(java.lang.Void[])
com.facebook.react.runtime.ReactHostImplDevHelper: void destroyRootView(android.view.View)
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent obtain(int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didMountItems(java.util.List)
androidx.biometric.BiometricViewModel: boolean isAwaitingResult()
com.facebook.react.bridge.JavaOnlyMap$Companion: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFabricLogs()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setBorderWidth(com.facebook.react.views.text.PreparedLayoutTextView,int,float)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.facebook.react.devsupport.DevInternalSettings$Companion: DevInternalSettings$Companion()
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: NativeAnimatedModule$ConcurrentOperationQueue(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String getName()
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.uimanager.ReactShadowNode: void setPadding(int,float)
com.facebook.drawee.drawable.ForwardingDrawable: void getTransform(android.graphics.Matrix)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper getInstance()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.style.OutlineStyle getOutlineStyle(android.view.View)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: boolean isKeyboardAnimation(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.ReactRootView: void onMeasure(int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.runtime.BridgelessCatalystInstance: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.nozbe.watermelondb.WMDatabaseBridge: void provideSyncJson(int,java.lang.String,com.facebook.react.bridge.Promise)
androidx.biometric.BiometricFragment: void dismiss()
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,int,int,int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.animated.ValueAnimatedNode: void extractOffset()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableFixForParentTagDuringReparenting()
com.facebook.hermes.intl.ILocaleObject: com.facebook.hermes.intl.ILocaleObject cloneObject()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.modal.ReactModalHostView: android.view.View getChildAt(int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase$Companion: CxxModuleWrapperBase$Companion()
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key generateKey(android.security.keystore.KeyGenParameterSpec)
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: void setGlobalHookSettings(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: ReactTextInputFocusEvent(int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchEventsRunnable$lambda$0(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.hermes.intl.LanguageTagsGenerated: LanguageTagsGenerated()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder addCxxReactPackage(kotlin.jvm.functions.Function1)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTitleFontSize(android.view.View,int)
com.facebook.react.uimanager.style.BackgroundImageLayer$Companion: BackgroundImageLayer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: boolean hasNext()
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1: ImageLoaderModule$prefetchImage$prefetchSubscriber$1(com.facebook.react.modules.image.ImageLoaderModule,int,com.facebook.react.bridge.Promise)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getNativeParent()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.packagerconnection.JSPackagerClient: void onMessage(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setPackagerLocationCustomizer(com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void flushOperations()
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.react.uimanager.MatrixMathHelper: MatrixMathHelper()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.safeareaview.ReactSafeAreaView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.jni.HybridData$Destructor: void destruct()
com.facebook.react.views.text.internal.span.ReactOpacitySpan: void updateDrawState(android.text.TextPaint)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android: boolean useTurboModules()
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec: boolean match(int,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean incorporateMaxLinesDuringAndroidLayout()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomStart(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManager(int)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: java.lang.String getEventName()
com.reactnativecommunity.cameraroll.CameraRollModule: void getPhotoByInternalID(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.LocaleObjectAndroid: java.util.Locale getLocale()
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: ReactModalHostView$showOrUpdate$1(kotlin.jvm.functions.Function0,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: IPlatformNumberFormatter$CompactDisplay(java.lang.String,int)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableBridgelessArchitecture()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueConfigureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.network.ProgressRequestBody: okio.Sink outputStreamSink(okio.BufferedSink)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $values()
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean$lambda$1(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ScrollEvent$Companion: com.facebook.react.views.scroll.ScrollEvent obtain(int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.ResponseBody: java.io.InputStream byteStream()
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.uimanager.events.Event: java.lang.String getEventName()
androidx.biometric.AuthenticationCallbackProvider$Listener: AuthenticationCallbackProvider$Listener()
com.facebook.react.uimanager.style.ComputedBorderRadius: boolean hasRoundedBorders()
com.oblador.keychain.KeychainModule: com.oblador.keychain.cipherStorage.CipherStorage getCipherStorageForCurrentAPILevel(boolean)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didFailWithError(java.lang.Integer,java.lang.String)
com.facebook.react.uimanager.ReactRootViewTagGenerator: ReactRootViewTagGenerator()
com.facebook.react.views.modal.ReactModalHostView: void onDetachedFromWindow()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.facebook.react.bridge.Inspector: java.util.List getPages()
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData getAuthenticationResult()
androidx.biometric.AuthenticationCallbackProvider$1: void onAuthenticationHelp(int,java.lang.CharSequence)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.facebook.hermes.instrumentation.HermesMemoryDumper: java.lang.String getInternalStorage()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void setDurationMs(int)
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int getTotalFrames()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String format(double)
com.facebook.react.animated.NativeAnimatedNodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.facebook.react.uimanager.ReactShadowNode: void calculateLayout()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String,boolean)
androidx.biometric.BiometricFragment$7: BiometricFragment$7(androidx.biometric.BiometricFragment)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean disableMainQueueSyncDispatchIOS()
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] $values()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.biometric.R$layout: R$layout()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateDestroyTask$36(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
com.facebook.react.devsupport.ReleaseDevSupportManager: void setAdditionalOptionForPackager(java.lang.String,java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean checkIfTopScreenHasHeader(android.view.ViewGroup)
com.swmansion.rnscreens.ScreenFooterManager: ScreenFooterManager()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.facebook.react.MemoryPressureRouter: void onLowMemory()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setVisible(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.runtime.internal.bolts.Task$Companion: void completeAfterTask(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task,java.util.concurrent.Executor)
com.facebook.react.views.textinput.ReactEditText$Companion: boolean sameTextForSpan(android.text.Editable,android.text.SpannableStringBuilder,int,int)
com.facebook.react.TurboReactPackage: TurboReactPackage()
com.facebook.react.uimanager.style.LogicalEdge$BOTTOM: int toSpacingType()
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF computeBorderInsets()
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: java.util.List drainQueueIntoList(long)
com.facebook.react.uimanager.RootView: void handleException(java.lang.Throwable)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface stopSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeShadowEnabled(com.swmansion.rnscreens.Screen,boolean)
com.nozbe.watermelondb.WMDatabaseDriver: void lambda$batch$0(com.facebook.react.bridge.ReadableArray,java.util.List,java.util.List)
com.facebook.react.fabric.FabricSoLoader: FabricSoLoader()
com.facebook.hermes.intl.ParsedLocaleIdentifier: ParsedLocaleIdentifier()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutBase(com.facebook.react.uimanager.ReactShadowNode)
androidx.biometric.BiometricViewModel: void setPromptInfo(androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.react.uimanager.events.Event$Companion: Event$Companion()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setColumnGapPercent(float)
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.biometric.BiometricFragment$Api30Impl: BiometricFragment$Api30Impl()
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
com.facebook.react.ReactRootView: void removeOnGlobalLayoutListener()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: int getId()
com.facebook.react.uimanager.UIBlock: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: void hidePausedInDebuggerOverlay$lambda$4(com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: java.lang.String toString()
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostPause()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getReactPackageTurboModuleManagerDelegateBuilder()
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableNativeArray)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.viewmanagers.AndroidHorizontalScrollContentViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getTurboJavaModule(java.lang.String)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setHeaderIconColor(android.view.View,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void closeDrawer(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.nio.channels.FileChannel getChannel()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.style.RadialGradient$Shape: RadialGradient$Shape(java.lang.String,int)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float getBlurRadius()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReloadTask$31(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setEnabled(android.view.View,boolean)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sendAccessibilityEvent(int,int)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase: void updateLayout(int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.runtime.JSRuntimeFactory,boolean,java.util.List)
com.facebook.react.runtime.ReactLifecycleStateManager: void moveToOnHostPause(com.facebook.react.bridge.ReactContext,android.app.Activity)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArray(org.json.JSONArray)
com.swmansion.reanimated.ReaCompatibility: void registerFabricEventListener(com.swmansion.reanimated.NodesManager)
com.facebook.react.bridge.ColorPropConverter: boolean supportWideGamut()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean animatedShouldSignalBatch()
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface start()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.swmansion.rnscreens.ModalScreenViewManager: ModalScreenViewManager()
com.facebook.react.views.scroll.ReactScrollViewHelper: void addScrollListener(com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: java.lang.String getSkeleonSymbol()
com.facebook.react.views.text.PreparedLayoutTextViewManager: int getChildCount(com.facebook.react.views.text.PreparedLayoutTextView)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void updateLayoutCommon(int,int,int,int,int,int)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorage: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult decrypt(java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] values()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
androidx.biometric.BiometricViewModel: boolean isDelayingPrompt()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void maybeInit()
com.facebook.react.fabric.mounting.MountingManager: void clearJSResponder()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.ReactShadowNode: void setLayoutDirection(com.facebook.yoga.YogaDirection)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.style.ProcessedColorStop: ProcessedColorStop(java.lang.Integer,java.lang.Float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.ReactInstance: void unregisterFromInspector()
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: ReactTextInputKeyPressEvent(int,java.lang.String)
com.facebook.react.internal.AndroidChoreographerProvider: AndroidChoreographerProvider()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.uimanager.ReactClippingViewGroup: void getClippingRect(android.graphics.Rect)
com.facebook.react.views.textinput.ReactEditText: void setBorderColor(int,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void viewDidLayout(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollToPreservingMomentum(int,int)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$0()
com.facebook.react.uimanager.style.Overflow: Overflow(java.lang.String,int)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void onFocusChanged(android.view.View)
com.facebook.react.devsupport.DebugOverlayController$Companion: DebugOverlayController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.common.MapBuilder$Builder: java.util.Map build()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadEnd()
com.facebook.react.uimanager.events.Event: com.facebook.react.bridge.WritableMap internal_getEventData$ReactAndroid_release()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean incorporateMaxLinesDuringAndroidLayout()
com.facebook.react.views.text.PreparedLayoutTextViewManager: boolean needsCustomLayoutForChildren()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.facebook.react.common.mapbuffer.MapBuffer$Entry: int getKey()
com.facebook.react.devsupport.DevServerHelper: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,okhttp3.Request$Builder)
com.facebook.react.module.model.ReactModuleInfo$Companion: ReactModuleInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.pgsqlite.SQLitePlugin: void closeAllOpenDatabases()
com.facebook.react.devsupport.interfaces.StackFrame: int getColumn()
com.facebook.react.animated.NativeAnimatedNodesManager: void updateNodes(java.util.List)
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: FileIoHandler$TtlFileInputStream(java.lang.String)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerProvider: boolean hasOnePlusBiometricBug()
com.oblador.keychain.KeychainModule: java.lang.String getSpecificStorageOrDefault(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.modules.core.TimingModule$Companion: TimingModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1(android.view.ViewGroup)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.react.packagerconnection.FileIoHandler$2: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getHeight()
androidx.biometric.BiometricViewModel: boolean isIgnoringCancel()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPowerState(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.SwitchCompat: void toggle()
com.facebook.react.devsupport.DevSupportManagerBase$showDevOptionsDialog$adapter$1: boolean isEnabled(int)
com.facebook.react.ReactNativeApplicationEntryPoint: ReactNativeApplicationEntryPoint()
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: void access$901(androidx.appcompat.widget.AppCompatTextView,android.view.textclassifier.TextClassifier)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void maybeDispatchBatchedEvents()
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.packagerconnection.PackagerConnectionSettings getPackagerConnectionSettings()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackTitleFontSize(android.view.View,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateViewProp(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.Object)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.facebook.drawee.drawable.ForwardingDrawable: boolean onStateChange(int[])
com.swmansion.rnscreens.Screen: void setSheetCornerRadius(float)
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle valueOf(java.lang.String)
com.facebook.react.devsupport.DevServerHelper: boolean getDevMode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.nozbe.watermelondb.WMDatabase: void lambda$unsafeDestroyEverything$2()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$getMimeTypeFromUri(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.BV.LinearGradient.LinearGradientManager: void setAngleCenter(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getTurboModulesEnabled$annotations()
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.packagerconnection.JSPackagerClient: JSPackagerClient(java.lang.String,com.facebook.react.packagerconnection.PackagerConnectionSettings,java.util.Map,com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: void write(byte[])
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.facebook.react.devsupport.DevSupportManagerBase: java.util.Map access$getCustomPackagerCommandHandlers$p(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: JavaTimerManager$IdleFrameCallback(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
androidx.biometric.KeyguardUtils$Api23Impl: boolean isDeviceSecure(android.app.KeyguardManager)
com.facebook.drawee.view.DraweeView: void doDetach()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.Fragment: int getExitAnim()
com.facebook.react.views.text.TextAttributes: void setLineHeight(float)
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: NetworkingModule$wrapRequestBodyWithProgressEmitter$1(com.facebook.react.bridge.ReactApplicationContext,int)
com.facebook.react.views.image.MultiPostprocessor$Companion: MultiPostprocessor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.DevServerHelper$BundleType: DevServerHelper$BundleType(java.lang.String,int,java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void onHostDestroy()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: DefaultNewArchitectureEntryPoint()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.DevServerHelper getDevServerHelper()
com.facebook.react.runtime.ReactHostImpl$CreationResult: ReactHostImpl$CreationResult(com.facebook.react.runtime.ReactInstance,com.facebook.react.bridge.ReactContext,boolean)
com.facebook.react.HeadlessJsTaskService: void startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map,java.util.Map,java.util.Map,java.util.Map)
com.facebook.react.devsupport.DevSupportManagerBase: void setAdditionalOptionForPackager(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.ReactRootView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean applicationHasRtlSupport(android.content.Context)
com.facebook.react.fabric.SynchronousEvent: SynchronousEvent(int,int,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$13(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForViewEnforced(int)
com.facebook.react.devsupport.DevInternalSettings: void setFpsDebugEnabled(boolean)
com.facebook.react.ReactRootView: void handleException(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.facebook.react.uimanager.ReactAxOrderHelper: void setCustomAccessibilityFocusOrder(android.view.View)
com.facebook.react.devsupport.DevSupportManagerBase: void toggleElementInspector()
androidx.biometric.BiometricPrompt: androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity)
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.modules.blob.BlobModule$networkingUriHandler$1: BlobModule$networkingUriHandler$1(com.facebook.react.modules.blob.BlobModule)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.uimanager.JSPointerDispatcher: com.facebook.react.uimanager.events.PointerEvent$PointerEventState createEventState(int,android.view.MotionEvent)
com.facebook.react.bridge.DynamicFromMap: void access$setMap$p(com.facebook.react.bridge.DynamicFromMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec getEventAnimationDriverMatchSpec()
com.facebook.react.devsupport.FpsView$Companion: FpsView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableMap getPhysicalPixelsWritableMap(android.util.DisplayMetrics,double)
com.facebook.react.ReactRootView: boolean onInterceptHoverEvent(android.view.MotionEvent)
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
com.facebook.react.uimanager.events.Event: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.biometric.BiometricFragment: void showFingerprintDialogForAuthentication()
com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult: CipherStorage$EncryptionResult(byte[],byte[],java.lang.String)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer put(int,int)
com.facebook.react.fabric.ComponentFactory$Companion: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: ViewManagersPropertyCache$DynamicPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.facebook.react.devsupport.DevSupportManagerBase: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.TextAttributes: float getMaxFontSizeMultiplier()
com.facebook.react.views.scroll.ReactScrollView: boolean executeKeyEvent(android.view.KeyEvent)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData isAuthenticationFailurePending()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$1: void close()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.CharSequence toString$lambda$5(com.facebook.react.common.mapbuffer.MapBuffer$Entry)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.react.uimanager.style.ColorEdges: ColorEdges()
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForKeyboardEventsLegacy()
com.facebook.react.modules.core.PermissionAwareActivity: boolean shouldShowRequestPermissionRationale(java.lang.String)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager getPausedInDebuggerOverlayManager()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useRawPropsJsiValue()
okio.ForwardingSource: java.lang.String toString()
androidx.fragment.app.DialogFragment: void onStop()
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
com.facebook.react.modules.network.ResponseUtil: void onRequestError(com.facebook.react.bridge.ReactApplicationContext,int,java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.ThemedReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] values()
com.facebook.react.common.MapBuilder: com.facebook.react.common.MapBuilder$Builder builder()
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule$ResponseHandler: boolean supports(java.lang.String)
com.facebook.react.modules.network.HeaderUtil$Companion: HeaderUtil$Companion()
com.facebook.react.jstasks.HeadlessJsTaskContext$Companion: com.facebook.react.jstasks.HeadlessJsTaskContext getInstance(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.style.LogicalEdge$VERTICAL: LogicalEdge$VERTICAL(java.lang.String,int)
com.facebook.react.ReactFragment: com.facebook.react.ReactFragment newInstance(java.lang.String,android.os.Bundle,java.lang.Boolean)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.views.image.ReactImageDownloadListener: void onRelease(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder addCxxReactPackage(kotlin.jvm.functions.Function0)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean disableMountItemReorderingAndroid()
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
com.facebook.react.packagerconnection.FileIoHandler: boolean run$lambda$1$lambda$0(java.util.Map$Entry)
com.swmansion.reanimated.ReanimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.facebook.react.common.ClassFinder: ClassFinder()
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget getOrCreateInspectorTarget()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata[] values()
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.facebook.react.fabric.FabricUIManagerBinding: void setPixelDensity(float)
com.facebook.react.modules.network.ForwardingCookieHandler: void clearCookies$lambda$0(com.facebook.react.bridge.Callback,java.lang.Boolean)
com.facebook.react.defaults.DefaultReactNativeHost$getUIManagerProvider$1$viewManagerRegistry$1: java.util.Collection getViewManagerNames()
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: void onProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.modules.core.ReactChoreographer: void access$setChoreographer$cp(com.facebook.react.modules.core.ReactChoreographer)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$8(com.facebook.react.devsupport.DevSupportManagerBase)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(double,boolean)
androidx.biometric.BiometricViewModel: androidx.lifecycle.LiveData isFingerprintDialogCancelPending()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isEmulatorSync()
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: void setNodeTag(int)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.oblador.keychain.cipherStorage.CipherStorage: boolean supportsSecureHardware()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: void remove()
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: TextInlineViewPlaceholderSpan(int,int,int)
com.facebook.react.common.MapBuilder: MapBuilder()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableDoubleMeasurementFixAndroid()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useFabricInterop()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(org.json.JSONArray)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSerialNumberSync()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useFabricInterop()
com.facebook.react.views.drawer.events.DrawerSlideEvent: DrawerSlideEvent(int,int,float)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setDescription(java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(double,double,double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableCustomFocusSearchOnClippedElementsAndroid()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.TextTransformKt: java.lang.String applyTextTransform(java.lang.String,com.facebook.react.views.text.TextTransform)
androidx.biometric.BiometricFragment: void showBiometricPromptForAuthentication()
com.facebook.react.animated.NativeAnimatedModule$1: NativeAnimatedModule$1(com.facebook.react.animated.NativeAnimatedModule,com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.facebook.hermes.intl.IPlatformCollator: com.facebook.hermes.intl.IPlatformCollator setIgnorePunctuation(boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.reflect.Method[] getMethodsFromModule(com.facebook.react.bridge.NativeModule)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void lambda$updateWindowDecor$0(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.fragment.app.Fragment: void onResume()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherListener: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task continueWithTask(com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setDeliveryMetricsExportToBigQuery(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.FabricEventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: java.lang.String buildKeySelection(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void doSnapshotForTopScreenViews(android.view.ViewGroup)
com.facebook.react.uimanager.drawable.BorderDrawable: int getOpacity()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setupTransitionContainer()
com.facebook.react.runtime.ReactHostImpl$2: java.lang.Void then(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSMainModulePath(java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule$Companion: DeviceEventManagerModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.DebugOverlayController: DebugOverlayController(com.facebook.react.bridge.ReactContext)
com.facebook.react.ReactActivityDelegate: void onCreate(android.os.Bundle)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.uimanager.events.Event: int getSurfaceId()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
androidx.biometric.BiometricViewModel: void setAuthenticationError(androidx.biometric.BiometricErrorData)
com.facebook.react.modules.network.ReactCookieJarContainer: void removeCookieJar()
com.facebook.react.packagerconnection.FileIoHandler: int access$addOpenFile(com.facebook.react.packagerconnection.FileIoHandler,java.lang.String)
com.facebook.hermes.intl.JSObjects: java.lang.Object newString()
com.facebook.react.uimanager.FloatUtil: boolean floatsEqual(float,float)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItemForInterop(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostView: void onAttachedToWindow()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setDevLoadingViewManager(com.facebook.react.devsupport.interfaces.DevLoadingViewManager)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int registerSensor(int,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.react.uimanager.ComponentNameResolverBinding: void install(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isIdle()
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: void createContentView(java.lang.String)
com.facebook.hermes.intl.LocaleIdentifier: java.lang.String replaceRegionSubtagIfNeeded(java.lang.StringBuffer)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.modules.network.ReactCookieJarContainer: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$show$2: void onCreate(android.os.Bundle)
com.facebook.react.views.scroll.ReactScrollViewHelper: void updateStateOnScrollChanged(android.view.ViewGroup,float,float)
com.facebook.react.fabric.mounting.MountItemDispatcher: void executeOrEnqueue(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$1: void onReactContextInitialized(com.facebook.react.bridge.ReactContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: SharedTransitionManager$PrepareConfigCleanupTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: void getMHybridData$annotations()
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.defaults.DefaultComponentsRegistry: void register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: ContentSizeChangeEvent(int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setAndroidUIScheduler(com.swmansion.worklets.AndroidUIScheduler)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.uimanager.util.ReactFindViewUtil: ReactFindViewUtil()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.bridge.BridgeSoLoader: void staticInit()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollView: void updateClippingRect(java.util.Set)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableBridgelessArchitecture()
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo build()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStatusBarStyle(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.DevLoadingViewManager getDevLoadingViewManager()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component9()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean incorporateMaxLinesDuringAndroidLayout()
com.facebook.react.runtime.BridgelessReactContext: BridgelessReactContext(android.content.Context,com.facebook.react.runtime.ReactHostImpl)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.JSEngineResolutionAlgorithm getJSEngineResolutionAlgorithm()
androidx.drawerlayout.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()
com.oblador.keychain.PrefsStorage: byte[] getBytes(java.lang.String)
androidx.biometric.BiometricManager: int canAuthenticate(int)
com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.events.Event$Companion: Event$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: void loadNetworkResource(java.lang.String,com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: com.google.crypto.tink.KeyTemplate getKeyTemplate()
com.facebook.react.runtime.hermes.HermesInstance$Companion: HermesInstance$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.oblador.keychain.DeviceAvailability: DeviceAvailability()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.facebook.react.animated.ValueAnimatedNode: java.lang.Object getAnimatedObject()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: OpacityAnimation(android.view.View,float,float)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTransactionEndDuration()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$getNameFromUri(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void setWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeUri(android.content.Context)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Keyword: RadialGradient$GradientSize$Keyword(com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
com.facebook.react.runtime.internal.bolts.Task$Companion: void completeImmediately(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task,java.util.concurrent.Executor)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getConcurrentReactEnabled$annotations()
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: void onAnimationFrame(double)
com.facebook.react.modules.dialog.AlertFragment$Companion: AlertFragment$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow[] values()
com.facebook.react.uimanager.events.TouchEventType: java.lang.String getJsName()
com.facebook.react.ReactActivityDelegate: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.animated.ColorAnimatedNode: int getColor()
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.facebook.react.modules.network.RequestBodyUtil: java.io.InputStream getFileInputStream(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier access$001(androidx.appcompat.widget.AppCompatEditText)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchEvent$Companion: ReactSwitchEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.FabricUIManagerBinding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.crypto.cipher.NativeGCMCipher$STATE: com.facebook.crypto.cipher.NativeGCMCipher$STATE valueOf(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: void setPausedInDebuggerMessage(java.lang.String)
com.facebook.react.bridge.NativeMap: NativeMap()
com.facebook.react.common.SurfaceDelegate: boolean isContentViewReady()
com.facebook.react.bridge.DynamicFromMap$Companion$pool$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.runtime.CoreReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider fallbackForMissingClass()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
com.facebook.react.bridge.ReactContext: boolean hasReactInstance()
com.facebook.react.views.view.ViewGroupClickEvent: ViewGroupClickEvent(int)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel[] $values()
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.lang.String fieldToString(java.text.AttributedCharacterIterator$Attribute,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.biometric.BiometricFragment$3: BiometricFragment$3(androidx.biometric.BiometricFragment)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage get(com.facebook.react.uimanager.style.BorderRadiusProp)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.fabric.SurfaceHandlerBinding,android.content.Context,android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableCppPropsIteratorSetter()
com.facebook.react.uimanager.ReactStylesDiffMap: float getFloat(java.lang.String,float)
com.facebook.react.LazyReactPackage$1: LazyReactPackage$1(com.facebook.react.LazyReactPackage,java.util.List,java.util.Map)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.ReactInstanceManager: void onUserLeaveHint(android.app.Activity)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void progressLayoutAnimation(int,java.util.Map,boolean)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void onTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.ReactRootView: void dispatchJSPointerEvent(android.view.MotionEvent,boolean)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.facebook.react.bridge.ReadableMapBuilder: void put(java.lang.String,long)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent$Companion: ReactTextInputSubmitEditingEvent$Companion()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.textinput.ReactTextInputManager$Companion: void access$checkPasswordType(com.facebook.react.views.textinput.ReactTextInputManager$Companion,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.ReactInstanceManager: void moveToBeforeCreateLifecycleState()
com.facebook.react.viewmanagers.RNGestureHandlerRootViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getEndStart()
androidx.security.crypto.MasterKey$Builder: MasterKey$Builder(android.content.Context,java.lang.String)
androidx.fragment.app.Fragment: void performDetach()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNodeToNode(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,android.content.res.AssetManager)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.common.SystemClock: long currentTimeMillis()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.uimanager.Spacing: float get(int)
com.facebook.react.uimanager.ThemedReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useTurboModules()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: java.lang.String getEventName()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] localTypeArray_delegate$lambda$1(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.devsupport.DebugOverlayController$Companion: boolean permissionCheck(android.content.Context)
com.facebook.react.viewmanagers.AndroidHorizontalScrollContentViewManagerDelegate: AndroidHorizontalScrollContentViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: void execute()
com.facebook.react.runtime.ReactInstance$Companion: java.util.Map createConstants(java.util.List,java.util.Map)
com.facebook.react.devsupport.DevInternalSettings: boolean isJSDevModeEnabled()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void getProperties(java.util.Map)
org.pgsqlite.SQLitePlugin: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,int,org.pgsqlite.CallbackContext)
com.facebook.react.common.SystemClock: SystemClock()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Boolean lambda$hasPermission$6()
com.oblador.keychain.cipherStorage.CipherStorage: int getMinSupportedApiLevel()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object getCallerContext()
org.pgsqlite.SQLitePlugin: void attach(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$subscribeToTopic$10(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.textinput.ReactEditText: ReactEditText(android.content.Context)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setSize(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.facebook.react.common.mapbuffer.MapBuffer$Entry: double getDoubleValue()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSerialNumber(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.textinput.ReactEditText: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setFractionDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge fromSpacingType(int)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.animated.InterpolationAnimatedNode$Companion: java.lang.String interpolateString(java.lang.String,double,double[],double[][],java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int access$401(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.modules.dialog.DialogModule$Companion: DialogModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
com.facebook.react.views.text.ReactTextView: void setBreakStrategy(int)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.facebook.react.uimanager.drawable.BorderDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int,boolean)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addTargetConfig(java.util.HashMap)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(com.swmansion.rnscreens.Screen,float)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableType getTypeNative()
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: boolean isAsyncStorageDatabaseCreated(android.content.Context)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFingerprint(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager$Companion: void access$updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactTextInputManager$Companion,com.facebook.react.views.textinput.ReactEditText,int,int)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.biometric.FingerprintDialogFragment: void onCancel(android.content.DialogInterface)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void updateWindowDecor(boolean)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void onDraw$lambda$1(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,int)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.DevSupportManagerFactory getDevSupportManagerFactory()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean isLegacyModule(java.lang.String)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hoistNativeChildren()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessReactContext getOrCreateReactContext()
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.bridge.ReadableArray getArrayProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: java.lang.String toString()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.oblador.keychain.KeychainModule: com.oblador.keychain.cipherStorage.CipherStorage getCipherStorageForCurrentAPILevel()
com.facebook.react.uimanager.events.Event$eventAnimationDriverMatchSpec$1: boolean match(int,java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightFitContentJNI(long)
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: CustomStyleSpan$Companion()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPadding(int,float)
androidx.biometric.BiometricFragment$StopIgnoringCancelRunnable: void run()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getJSMessageQueueThread()
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsableChildren(boolean)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setReplaceAnimation(android.view.View,java.lang.String)
com.facebook.react.uimanager.drawable.OutlineDrawable: OutlineDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,int,float,com.facebook.react.uimanager.style.OutlineStyle,float)
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: ViewManagersPropertyCache$MapPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
androidx.biometric.CancellationSignalProvider: androidx.core.os.CancellationSignal getFingerprintCancellationSignal()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
com.facebook.react.ReactInstanceManager: void attachRootView(com.facebook.react.uimanager.ReactRoot)
com.facebook.react.views.image.ReactImageView: void maybeUpdateView()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.ReactRootView: void onChildEndedNativeGesture(android.view.View,android.view.MotionEvent)
androidx.biometric.BiometricViewModel$CallbackListener: void onError(int,java.lang.CharSequence)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger: void executeAssert$default(com.facebook.react.common.annotations.internal.LegacyArchitectureLogger,java.lang.String,com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel,int,java.lang.Object)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: boolean willChangeBounds()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineOffset(android.view.View,float)
com.facebook.react.uimanager.events.EventDispatcherImpl: void stopFrameCallback()
com.facebook.react.uimanager.style.LogicalEdge$TOP: int toSpacingType()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData getHybridData()
com.facebook.react.modules.core.ReactChoreographer: void postFrameCallbackOnChoreographer()
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float getSpreadDistance()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: boolean isValid$ReactAndroid_release()
com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate: SafeAreaViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.modules.common.ModuleDataCleaner: ModuleDataCleaner()
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.biometric.BiometricViewModel: void resetClientCallback()
com.facebook.hermes.intl.JSObjects$UndefinedObject: JSObjects$UndefinedObject()
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: ContentSizeChangeEvent(int,int,int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerOpened(android.view.View)
com.facebook.react.bridge.NativeArray: NativeArray()
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.react.runtime.ReactInstance: void stopSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: IPlatformNumberFormatter$UnitDisplay(java.lang.String,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
androidx.biometric.BiometricViewModel: void setDelayingPrompt(boolean)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
com.facebook.react.animated.SpringAnimation$PhysicsState: double getVelocity()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.uimanager.ReactShadowNode: int getScreenX()
com.swmansion.rnscreens.SearchBarManager: void setTintColor(android.view.View,java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.UIManagerListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.text.internal.span.ReactClickableSpan: int getFocusBgColor()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType valueOf(java.lang.String)
com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView createRootView()
com.facebook.react.animated.NativeAnimatedNodesManager: void getValue(int,com.facebook.react.bridge.Callback)
com.nozbe.watermelondb.WMDatabaseDriver: com.facebook.react.bridge.WritableArray cachedQuery(java.lang.String,java.lang.String,java.lang.Object[])
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
androidx.appcompat.app.AppCompatActivity: void onStart()
com.reactnativecommunity.asyncstorage.SerialExecutor$1: void run()
androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject unwrapFromFingerprintManager(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void focus(android.view.View)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: java.lang.String toString()
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.UIManagerProvider getUIManagerProvider()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.swmansion.reanimated.BorderRadiiDrawableUtils: float getRadiusForCorner(android.view.View,com.facebook.react.uimanager.style.BorderRadiusProp,float)
com.facebook.react.uimanager.BaseViewManager: void setClick(android.view.View,boolean)
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void onDismiss(android.content.DialogInterface)
com.facebook.react.fabric.FabricUIManager$4: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.bridge.BaseJavaModule: void setEventEmitterCallback(com.facebook.react.bridge.CxxCallbackImpl)
com.facebook.react.views.text.internal.span.ReactClickableSpan: ReactClickableSpan(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean hasAnimationForTag(int,int)
com.facebook.react.defaults.DefaultReactNativeHost: boolean isNewArchEnabled()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.react.runtime.BridgelessCatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.common.DebugServerException$Companion: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableDestroyShadowTreeRevisionAsync()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
com.facebook.react.views.text.TextAttributeProps: void setIncludeFontPadding(boolean)
com.swmansion.reanimated.sensor.ReanimatedSensor: boolean initialize()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdateSeen()
com.facebook.react.views.text.TextAttributeProps: void setLineHeight(float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean getViewExists(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$6()
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void stop()
com.oblador.keychain.KeychainModule: void getSecurityLevel(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: void override(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: long getLast()
com.facebook.react.uimanager.drawable.BackgroundDrawable: int getOpacity()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.hermes.intl.IPlatformCollator: java.lang.String[] getAvailableLocales()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported64BitAbis(com.facebook.react.bridge.Promise)
com.oblador.keychain.exceptions.CryptoFailedException: CryptoFailedException(java.lang.String,java.lang.Throwable)
com.facebook.react.jscexecutor.JSCExecutor$Companion: void loadLibrary()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method getMethod()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.facebook.common.time.MonotonicNanoClock: long now()
com.swmansion.rnscreens.SearchBarManager: void setText(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void removeView(android.view.View,android.view.ViewGroup)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.learnium.RNDeviceInfo.RNDeviceModule: void getPreviewSdkInt(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.uimanager.ViewManagersPropertyCache: com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter createPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,java.lang.Class)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
com.facebook.react.uimanager.ReactClippingViewGroupHelper: void calculateClippingRect(android.view.View,android.graphics.Rect)
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: void updateMeasureState(android.text.TextPaint)
com.facebook.react.uimanager.events.PointerEvent: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.modules.network.NetworkingModule$Companion: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
androidx.security.crypto.EncryptedSharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String getReanimatedJavaVersion()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String decryptBytes(java.security.Key,byte[],com.oblador.keychain.cipherStorage.CipherStorageBase$DecryptBytesHandler)
com.facebook.react.devsupport.ReleaseDevSupportManager: void hideRedboxDialog()
com.facebook.react.modules.network.ReactCookieJarContainer: void setCookieJar(okhttp3.CookieJar)
com.facebook.react.uimanager.BaseViewManager: void setTransformOrigin(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void checkDuplicateSharedTag(int,int)
com.facebook.react.uimanager.LengthPercentageType: kotlin.enums.EnumEntries getEntries()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBaseOsSync()
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.util.List)
com.facebook.react.uimanager.style.LinearGradient: java.util.List getColorStops()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt: long getLastEventBetweenTimestamps(java.util.ArrayList,long,long)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$getViewHeight$p(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
androidx.biometric.BiometricViewModel: androidx.biometric.AuthenticationCallbackProvider getAuthenticationCallbackProvider()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String getDefaultAliasServiceName()
com.nozbe.watermelondb.WMDatabaseBridge: com.facebook.react.bridge.WritableArray getRandomBytes(int)
com.facebook.react.views.textinput.ReactEditText: boolean isSecureText()
com.reactnativecommunity.netinfo.NetInfoModule: NetInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightElements(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray()
com.facebook.react.animated.SubtractionAnimatedNode: void update$ReactAndroid_release()
com.facebook.react.devsupport.BundleDownloader$Companion: void populateBundleInfo(java.lang.String,okhttp3.Headers,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long getTimeStamp()
com.facebook.react.animated.StyleAnimatedNode: StyleAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: boolean addEventEmitters$lambda$3(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ThemedReactContext,android.widget.TextView,int,android.view.KeyEvent)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean equals(java.lang.Object)
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: java.lang.String getValue()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColorInteger(java.lang.Object,android.content.Context)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.facebook.react.bridge.ReadableNativeArray$Companion: ReadableNativeArray$Companion()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void assertNodeSupportedWithoutOptimizer(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.events.EventDispatcherImpl: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.views.image.ImageResizeMethod: ImageResizeMethod(java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean fuseboxEnabledRelease()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSaturateEffect(float,android.graphics.RenderEffect)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$hasPermission$7(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.swmansion.reanimated.NodesManager: void registerEventHandler(com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.biometric.BiometricViewModel: void setAuthenticationHelpMessage(java.lang.CharSequence)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$500(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendHighTextContrastChangeEvent()
com.facebook.react.packagerconnection.ReconnectingWebSocket$Companion: ReconnectingWebSocket$Companion()
com.facebook.react.common.futures.SimpleSettableFuture: void setException(java.lang.Exception)
com.facebook.hermes.intl.ILocaleObject: void setUnicodeExtensions(java.lang.String,java.util.ArrayList)
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackground()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableDoubleMeasurementFixAndroid()
com.facebook.react.ReactInstanceManager$2: android.view.View createRootView(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: EventDispatcherImpl$1()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid(java.util.List)
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: DestroyUnmountedViewMountItem(int,int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.facebook.react.devsupport.DevSupportManagerBase: void setHotModuleReplacementEnabled$lambda$24(com.facebook.react.devsupport.DevSupportManagerBase,boolean)
com.swmansion.rnscreens.SearchBarManager: void setCancelButtonText(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.uimanager.style.ColorEdges: int getLeft()
com.facebook.react.ReactActivityDelegate: boolean onKeyUp(int,android.view.KeyEvent)
androidx.biometric.CryptoObjectUtils$Api28Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(java.security.Signature)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: NativeMethodCallInvokerHolderImpl()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromRole(com.facebook.react.uimanager.ReactAccessibilityDelegate$Role)
com.facebook.react.views.textinput.ReactTextContentSizeWatcher: ReactTextContentSizeWatcher(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.devsupport.DevServerHelper$Companion: java.lang.String access$getSHA256(com.facebook.react.devsupport.DevServerHelper$Companion,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactEditText: void manageSpans(android.text.SpannableStringBuilder)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor()
com.facebook.react.views.textinput.ReactEditText: void setSettingTextFromJS(boolean)
androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.ErrorType getLastErrorType()
com.facebook.react.jscexecutor.JSCExecutorFactory: JSCExecutorFactory(java.lang.String,java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String getName()
com.facebook.react.bridge.DynamicNative: DynamicNative()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setMinIntergerDigits(int)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderStyle(java.lang.String)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt: void cleanUp(java.util.ArrayList,long)
com.facebook.react.jstasks.HeadlessJsTaskConfig: boolean isAllowedInForeground()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isBluetoothHeadphonesConnectedSync()
com.facebook.react.devsupport.DevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager,boolean)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: boolean isValid$ReactAndroid_release()
com.facebook.react.views.scroll.ReactScrollView: void flashScrollIndicators()
com.facebook.react.views.scroll.ScrollEvent: java.lang.String getEventName()
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.bridge.ReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.facebook.react.ReactHost: void onWindowFocusChange(boolean)
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void lambda$onBatchComplete$0(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.devsupport.DevSupportManagerBase: void toggleElementInspector$lambda$26(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getOriginalMessage()
com.facebook.react.modules.image.ImageLoaderModule$getSize$dataSubscriber$1: void onFailureImpl(com.facebook.datasource.DataSource)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.biometric.FingerprintDialogFragment$Api26Impl: int getColorErrorAttr()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.facebook.react.uimanager.ThemedReactContext: void destroy()
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.ReactInstanceManager: void moveReactContextToCurrentLifecycleState()
com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdates(int)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String getName()
com.swmansion.rnscreens.Screen: void setSheetLargestUndimmedDetentIndex(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.views.drawer.events.DrawerClosedEvent: java.lang.String getEventName()
com.facebook.react.ReactActivityDelegate: void onPause()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: kotlin.enums.EnumEntries getEntries()
com.facebook.hermes.intl.IPlatformCollator: com.facebook.hermes.intl.IPlatformCollator setSensitivity(com.facebook.hermes.intl.IPlatformCollator$Sensitivity)
com.facebook.react.ReactInstanceManager: void onBackPressed()
com.oblador.keychain.cipherStorage.CipherStorageBase: android.security.keystore.KeyInfo getKeyInfo(java.security.Key)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.ReactInstanceManager: void lambda$runCreateReactContextOnNewThread$0()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.swmansion.rnscreens.Screen: boolean getShouldTriggerPostponedTransitionAfterLayout()
com.facebook.react.viewmanagers.RNSScreenStackManagerDelegate: RNSScreenStackManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.drawee.drawable.ForwardingDrawable: void draw(android.graphics.Canvas)
com.facebook.react.modules.network.ResponseUtil: void onRequestSuccess(com.facebook.react.bridge.ReactApplicationContext,int)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getDrawable()
com.facebook.react.animated.ColorAnimatedNode$Companion: android.content.Context access$getContextHelper(com.facebook.react.animated.ColorAnimatedNode$Companion,com.facebook.react.animated.AnimatedNode)
com.facebook.react.uimanager.events.Event: int internal_getEventCategory$ReactAndroid_release()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$highTextContrastObserver$1: void onChange(boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int getId()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.ReactInstanceManager: void lambda$setupReactContext$5()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion: ReactSwipeRefreshLayout$Companion()
androidx.drawerlayout.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.drawer.ReactDrawerLayout$1: ReactDrawerLayout$1()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.common.mapbuffer.MapBuffer: com.facebook.react.common.mapbuffer.MapBuffer getMapBuffer(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: LayoutAnimationType(java.lang.String,int)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: long getItemId(int)
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$6(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] values()
com.facebook.react.fabric.FabricUIManager$1: FabricUIManager$1(com.facebook.react.fabric.FabricUIManager)
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
com.oblador.keychain.decryptionHandler.DecryptionResultHandler: void onDecrypt(com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult,java.lang.Throwable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableViewRecyclingForView()
com.nozbe.watermelondb.WMDatabaseBridge: void unsafeResetDatabase(int,java.lang.String,int,com.facebook.react.bridge.Promise)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.facebook.react.uimanager.UIImplementation: void onHostPause()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.util.Set convertProps(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.runtime.JSRuntimeFactory: JSRuntimeFactory(com.facebook.jni.HybridData)
com.facebook.react.uimanager.annotations.ReactProp: double defaultDouble()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String get_url$ReactAndroid_release()
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.bridge.DynamicNative: boolean asBoolean()
androidx.security.crypto.EncryptedSharedPreferences: android.content.SharedPreferences create(java.lang.String,java.lang.String,android.content.Context,androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme,androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme)
com.facebook.react.fabric.FabricUIManagerBinding: void unregister()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitDuration()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.HeadlessJsTaskService$Companion: HeadlessJsTaskService$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactInstanceManager: void detachRootViewFromInstance(com.facebook.react.uimanager.ReactRoot,com.facebook.react.bridge.ReactContext)
com.facebook.react.devsupport.DevServerHelper$closePackagerConnection$1: java.lang.Void doInBackground(java.lang.Void[])
com.facebook.react.devsupport.DevInternalSettings: void setStartSamplingProfilerOnInit(boolean)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: ReactTextInputSelectionEvent(int,int,int)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.learnium.RNDeviceInfo.RNDeviceModule: void getMaxMemory(com.facebook.react.bridge.Promise)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableIOSViewClipToPaddingBox()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: void stopSurface(int)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest fromUri(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.security.crypto.EncryptedSharedPreferences$Editor: boolean commit()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextUpdate$Companion: ReactTextUpdate$Companion()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: boolean isBatchEmpty()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: WritableMapBuffer$MapBufferEntry(com.facebook.react.common.mapbuffer.WritableMapBuffer,int)
com.facebook.react.modules.core.JavaTimerManager$Timer: void setTargetTime(long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setFontSize(com.facebook.react.views.text.ReactTextView,float)
com.facebook.react.uimanager.ReactPointerEventsView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.react.uimanager.ViewDefaults: ViewDefaults()
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: java.util.Map getHeaders(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
androidx.biometric.BiometricViewModel: int getCanceledFrom()
com.facebook.react.ReactHost: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: DefaultDevLoadingViewImplementation(com.facebook.react.devsupport.ReactInstanceDevHelper)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] $values()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.facebook.jni.HybridData getHybridData()
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void onDetachedFromWindow()
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle[] values()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.facebook.react.views.textinput.ReactTextInputFocusEvent: ReactTextInputFocusEvent(int)
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setPresentationStyle(android.view.View,java.lang.String)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ThemedReactContext: boolean isBridgeless()
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeShadowEnabled(android.view.View,boolean)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: ReactTextViewAccessibilityDelegate$AccessibilityLinks(android.text.Spanned)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void start$default(com.facebook.react.modules.debug.FpsDebugFrameCallback,double,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: float getMinSize(int)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int getEnd()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: int getMinIndexForVisible()
com.facebook.hermes.BuildConfig: BuildConfig()
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$NeedsSetup: WMDatabaseDriver$SchemaCompatibility$NeedsSetup()
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void setTraceUpdates(java.util.List)
com.facebook.react.uimanager.style.BoxShadow: float component2()
androidx.core.view.WindowInsetsCompat$BuilderImpl34: WindowInsetsCompat$BuilderImpl34(androidx.core.view.WindowInsetsCompat)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.text.AttributedCharacterIterator formatToParts(double)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
androidx.biometric.BiometricManager$Api29Impl: java.lang.reflect.Method getCanAuthenticateWithCryptoMethod()
com.facebook.react.modules.network.OkHttpClientFactory: okhttp3.OkHttpClient createNewNetworkModuleClient()
com.facebook.react.uimanager.IllegalViewOperationException: IllegalViewOperationException(java.lang.String)
org.pgsqlite.SQLitePlugin: boolean execute(java.lang.String,com.facebook.react.bridge.ReadableMap,org.pgsqlite.CallbackContext)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStyleWidth()
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata valueOf(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignSelf(com.facebook.yoga.YogaAlign)
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] values()
com.oblador.keychain.PrefsStorage: java.lang.String getKeyForUsername(java.lang.String)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.facebook.react.runtime.ReactSurfaceView: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: ViewManagerPropertyUpdater$FallbackShadowNodeSetter(java.lang.Class)
androidx.biometric.BiometricPrompt$AuthenticationResult: BiometricPrompt$AuthenticationResult(androidx.biometric.BiometricPrompt$CryptoObject,int)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$16()
com.facebook.react.modules.appstate.AppStateModule$Companion: AppStateModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: void execute()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopRightRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffStart()
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.facebook.react.views.textinput.ReactEditText$Companion: boolean getDEBUG_MODE()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setPlaceholder(android.view.View,java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchEvent: ReactSwitchEvent(int,int,boolean)
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.devsupport.interfaces.RedBoxHandler getRedBoxHandler()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.modules.fresco.FrescoModule$Companion: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.modules.network.ForwardingCookieHandler$Companion: boolean access$isCookieHeader(com.facebook.react.modules.network.ForwardingCookieHandler$Companion,java.lang.String)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.swmansion.reanimated.keyboard.Keyboard: void onAnimationEnd()
com.facebook.react.views.text.internal.span.ReactOpacitySpan: ReactOpacitySpan(float)
com.facebook.react.views.textinput.ReactEditText$Companion: ReactEditText$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.facebook.react.uimanager.UIImplementation: java.util.Map getProfiledBatchPerfCounters()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.uimanager.TouchTargetHelper: boolean isTouchPointInViewWithOverflowInset(float,float,android.view.View)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.runtime.ReactInstance$loadJSBundle$1: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getExecutor()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$DataType access$dataType(com.facebook.react.common.mapbuffer.WritableMapBuffer,java.lang.Object,int)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
com.facebook.react.views.safeareaview.ReactSafeAreaView: void setStateWrapper$ReactAndroid_release(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.network.OkHttpCompat: com.facebook.react.modules.network.CookieJarContainer getCookieJarContainer(okhttp3.OkHttpClient)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.CanvasUtil: void fetchOrderMethods()
okhttp3.ResponseBody: void close()
com.facebook.react.devsupport.interfaces.DevSupportManager: android.util.Pair processErrorCustomizers(android.util.Pair)
com.facebook.react.uimanager.style.RadialGradient: kotlin.Pair radiusToCorner(float,float,float,float,com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.facebook.react.uimanager.TransformHelper$helperMatrix$1: TransformHelper$helperMatrix$1()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: BaseLayoutAnimation()
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect,java.util.Set)
com.facebook.react.ReactActivityDelegate: void setReactSurface(com.facebook.react.interfaces.fabric.ReactSurface)
com.facebook.react.views.textinput.ReactEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.react.uimanager.events.TouchEventType$Companion: TouchEventType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.NativeAnimatedModule$addAnimatedEventToView$1: NativeAnimatedModule$addAnimatedEventToView$1(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType toScaleType(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onChildEndedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.uimanager.MatrixMathHelper: void multiplyInto(double[],double[],double[])
com.nozbe.watermelondb.WMDatabase: void execute(java.lang.String,java.lang.Object[])
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: java.lang.String getEntityPrefix(java.lang.String)
com.facebook.react.modules.devtoolsruntimesettings.Settings: void setRecordChangeDescriptions(boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.common.ModuleDataCleaner$Cleanable: void clearSensitiveData()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: double access$readDoubleValue(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$Companion: AccessibilityInfoModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.learnium.RNDeviceInfo.RNDeviceModule: void getPhoneNumber(com.facebook.react.bridge.Promise)
com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion: DrawerClosedEvent$Companion()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.bridge.WritableMap createEventDataSource()
com.facebook.react.fabric.FabricUIManagerBinding: void stopSurfaceWithSurfaceHandler(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueLayoutUpdateFinished(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
com.facebook.react.views.text.TextLayoutManager: int nextAttachmentMetrics(android.text.Layout,android.text.Spanned,float,int,int,com.facebook.react.views.text.TextLayoutManager$AttachmentMetrics)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: AsyncStorageErrorUtil()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getOrCreateReactInstanceTask()
com.facebook.react.modules.intent.IntentModule: java.util.List access$getPendingOpenURLPromises$p(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.views.text.ReactFontManager$Companion: ReactFontManager$Companion()
com.facebook.react.ReactDelegate: boolean onNewIntent(android.content.Intent)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setText(android.view.View,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setRole(com.facebook.react.uimanager.ReactAccessibilityDelegate$Role)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setEnd(int)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
androidx.fragment.app.DialogFragment: boolean isCancelable()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: com.facebook.crypto.Entity createPasswordEntity(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setNumberOfLines(int)
com.facebook.react.R$integer: R$integer()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.PathEffect getPathEffect(com.facebook.react.uimanager.style.OutlineStyle,float)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void isWiredHeadphonesConnected(com.facebook.react.bridge.Promise)
com.facebook.react.ReactInstanceManager$2: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
com.facebook.react.devsupport.BundleDownloader: void access$setDownloadBundleFromURLCall$p(com.facebook.react.devsupport.BundleDownloader,okhttp3.Call)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void sortViewsByTags(java.util.List)
com.facebook.hermes.intl.LocaleMatcher: android.icu.util.ULocale bestFitBestAvailableLocale(com.facebook.hermes.intl.ILocaleObject)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItems(long)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int getSurfaceId()
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setNegativeButtonText(java.lang.CharSequence)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setFlexGrow(float)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: UIViewOperationQueue$MeasureOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: PreparedLayoutTextView$TextSelection(int,int,android.graphics.Path)
com.facebook.react.devsupport.DevInternalSettings: DevInternalSettings(android.content.Context,com.facebook.react.devsupport.DevInternalSettings$Listener)
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.imagepipeline.request.ImageRequest: int getDelayMs()
com.facebook.react.ReactInstanceManager: void recreateReactContextInBackgroundInner()
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule$Companion: ReactDevToolsSettingsManagerModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component4()
com.facebook.react.animated.NativeAnimatedModule$removeAnimatedEventFromView$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: void show()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.fbreact.specs.NativeAppearanceSpec: void setColorScheme(java.lang.String)
com.facebook.react.uimanager.style.BackgroundImageLayer: android.graphics.Shader getShader(android.graphics.Rect)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.facebook.react.uimanager.drawable.BorderDrawable: void setAlpha(int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean hasAnimationForTag(int,int)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.facebook.react.views.scroll.ReactScrollView: void draw(android.graphics.Canvas)
com.facebook.react.uimanager.UIImplementation: void updateNodeSize(int,int,int)
com.facebook.react.uimanager.UIViewOperationQueue$UIOperation: void execute()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path getInnerClipPathForBorderRadius()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String getName()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion: AnimatedPropertyType$Companion()
com.facebook.react.devsupport.ReleaseDevSupportManager: void startInspector()
com.mkuczera.RNReactNativeHapticFeedbackModule: java.lang.String getName()
com.swmansion.reanimated.NodesManager$3: NodesManager$3(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,boolean,java.util.concurrent.Semaphore,java.util.Queue)
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$2: DevServerHelper$openPackagerConnection$1$doInBackground$2(com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopRight(com.facebook.react.uimanager.LengthPercentage)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.rnscreens.ScreenFooter: com.facebook.react.bridge.ReactContext getReactContext()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: ReanimatedNativeHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.InterpolationAnimatedNode: void onDetachedFromNode$ReactAndroid_release(com.facebook.react.animated.AnimatedNode)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.biometric.KeyguardUtils: KeyguardUtils()
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableAccessibilityOrder()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.facebook.react.views.textinput.ReactTextInputShadowNode$Companion: ReactTextInputShadowNode$Companion()
com.facebook.react.views.text.TextAttributeProps: int getBackgroundColor()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(com.th3rdwave.safeareacontext.SafeAreaViewEdges)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onViewsRemoval(int[])
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.devsupport.DefaultDevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void deleteView(int)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt: boolean hasEventBetweenTimestamps(java.util.ArrayList,long,long)
androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion: TurboModuleManager$Companion()
com.facebook.react.uimanager.UIManagerModule: void sweepActiveTouchForTag(int,int)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
com.facebook.react.views.modal.ShowEvent: ShowEvent(int)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.facebook.react.uimanager.events.TouchEvent: boolean canCoalesce()
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
com.facebook.react.animated.NativeAnimatedModule$dropAnimatedNode$1: NativeAnimatedModule$dropAnimatedNode$1(com.facebook.react.animated.NativeAnimatedModule,int)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setConfirmationRequired(boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void startInspector()
com.facebook.react.bridge.JavaModuleWrapper$Companion: JavaModuleWrapper$Companion()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: UIViewOperationQueue$UpdateLayoutOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
androidx.activity.OnBackPressedCallback: void handleOnBackProgressed(androidx.activity.BackEventCompat)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenX()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: OutsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderRadiusStyle,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$2()
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate: ActivityIndicatorViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: DrawerOpenedEvent(int,int)
com.facebook.react.viewmanagers.RNSScreenStackHeaderSubviewManagerInterface: void setType(android.view.View,java.lang.String)
androidx.biometric.BiometricViewModel$NegativeButtonListener: BiometricViewModel$NegativeButtonListener(androidx.biometric.BiometricViewModel)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.facebook.react.views.text.TextAttributeProps: int getTextShadowColor()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableCustomFocusSearchOnClippedElementsAndroid()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: com.facebook.react.common.mapbuffer.MapBuffer$Entry next()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: FabricUIManager$MountItemDispatchListener$1(com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.internal.interop.InteropEvent: java.lang.String getEventName()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: int getCurrencyDigits(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.biometric.BiometricViewModel: void setNegativeButtonPressPending(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean updateRuntimeShadowNodeReferencesOnCommit()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateExtraData(int,java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion: ReactNetworkImageRequest$Companion()
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
com.nozbe.watermelondb.WMDatabase: void execute(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unregisterSensor(int)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isDevicePreferredLanguageRTL()
com.facebook.react.views.view.ViewGroupClickEvent$Companion: ViewGroupClickEvent$Companion()
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getScreenDisplayMetrics()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(android.view.View,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: ViewManagersPropertyCache$IntPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getBottomLeft()
com.facebook.react.views.imagehelper.MultiSourceHelper: MultiSourceHelper()
com.facebook.react.util.JSStackTrace: JSStackTrace()
com.facebook.react.animated.NativeAnimatedNodesManager$Companion: NativeAnimatedNodesManager$Companion()
com.facebook.react.ReactInstanceManager: void lambda$setupReactContext$3(com.facebook.react.ReactInstanceEventListener[],com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.HeadlessJsTaskService: HeadlessJsTaskService()
com.facebook.react.bridge.UIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.swmansion.reanimated.NodesManager: void updateProps(int,java.util.Map)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onData(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$removeRequest(com.facebook.react.modules.image.ImageLoaderModule,int)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableAccessibilityOrder()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.bridge.ReadableMapBuilder: void putArray(java.lang.String,kotlin.jvm.functions.Function1)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useShadowNodeStateOnClone()
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
com.facebook.react.module.annotations.ReactModule: boolean needsEagerInit()
androidx.biometric.BiometricViewModel: void setAuthenticationResult(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.PackageList: PackageList(android.app.Application,com.facebook.react.shell.MainPackageConfig)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion: FrescoBasedReactTextInlineImageViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableLayoutAnimationsOnIOS()
com.facebook.react.ReactActivity: void onNewIntent(android.content.Intent)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.modules.network.ProgressRequestBody: com.facebook.react.modules.network.ProgressListener access$getProgressListener$p(com.facebook.react.modules.network.ProgressRequestBody)
com.facebook.react.common.assets.ReactFontManager$Companion: android.graphics.Typeface createAssetTypeface(java.lang.String,int,android.content.res.AssetManager)
com.facebook.react.runtime.JSTimerExecutor: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setFlexBasisAuto()
com.facebook.react.views.text.PreparedLayoutTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getTurboLegacyCxxModule(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents$lambda$7(com.facebook.react.modules.core.JavaTimerManager,boolean)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitleFontSize(android.view.View,int)
com.facebook.react.uimanager.ReactShadowNode: void setOverflow(com.facebook.yoga.YogaOverflow)
com.facebook.react.bridge.DynamicNative: boolean isNull()
com.facebook.react.ReactInstanceManager: void onNewIntent(android.content.Intent)
com.facebook.react.views.drawer.ReactDrawerLayout$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.oblador.keychain.KeychainModuleBuilder: com.oblador.keychain.KeychainModuleBuilder withoutWarmUp()
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.request.ImageRequest$RequestLevel computeRequestLevel(com.facebook.react.modules.fresco.ImageCacheControl)
com.swmansion.reanimated.keyboard.Keyboard: void onAnimationStart()
com.facebook.react.viewmanagers.DebuggingOverlayManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: java.lang.String getString(int)
com.facebook.react.bridge.GuardedRunnable: void run()
com.learnium.RNDeviceInfo.RNDeviceModule: void initialize()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.facebook.react.devsupport.RedBoxContentView: RedBoxContentView(android.content.Context,com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.devsupport.interfaces.RedBoxHandler)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: MatrixMathHelper$MatrixDecompositionContext()
com.facebook.react.bridge.Inspector$Companion: java.util.List getPages()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.uimanager.style.CornerRadii: CornerRadii(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.interfaces.TaskInterface stop()
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: com.facebook.jni.HybridData access$initHybridDefaultConfig(com.facebook.hermes.reactexecutor.HermesExecutor$Companion,boolean,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void updateLastErrorInfo(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.interfaces.ErrorType)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.nozbe.watermelondb.WMDatabaseDriver: void migrate(com.nozbe.watermelondb.utils.MigrationSet)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.views.textinput.ReactEditText: java.lang.String access$getTAG$p(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.views.text.DefaultStyleValuesUtil: DefaultStyleValuesUtil()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.swmansion.reanimated.NativeProxy: void invalidate()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int fastBorderCompatibleColorOrZero(int,int,int,int,int,int,int,int)
androidx.biometric.BiometricPrompt$PromptInfo: BiometricPrompt$PromptInfo(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,int)
com.swmansion.reanimated.NodesManager: boolean isAnimationRunning()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.react.devsupport.DevSupportManagerBase: void registerErrorCustomizer(com.facebook.react.devsupport.interfaces.ErrorCustomizer)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.SharedPreferences getRNDISharedPreferences(android.content.Context)
com.facebook.react.views.text.internal.span.CustomStyleSpan: CustomStyleSpan(int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void subscribeToTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getAlpha()
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.facebook.react.fabric.FabricUIManager: void initialize()
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.devsupport.DoubleTapReloadRecognizer: void didDoubleTapR$lambda$0(com.facebook.react.devsupport.DoubleTapReloadRecognizer)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIImplementation: ReanimatedUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: void setNextEntry(java.util.Map$Entry)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int,java.util.Set)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enablePreparedTextLayout()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: MessageQueueThreadSpec$Companion()
com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler: boolean supports(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: AbstractLayoutAnimation()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.facebook.react.views.text.PreparedLayoutTextView: void setSelection(android.text.style.ClickableSpan)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Keyword: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType getKeyword()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBuildIdSync()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.reactnativecommunity.netinfo.NetInfoModule: void getCurrentState(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableNativeCSSParsing()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.text.TextAttributes: float getEffectiveLineHeight()
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: ReactEditTextInputConnectionWrapper(android.view.inputmethod.InputConnection,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: boolean areAllItemsEnabled()
com.rnbiometrics.ReactNativeBiometrics: void biometricKeysExist(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule$3: UIManagerModule$3(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,int,int)
com.facebook.react.views.text.internal.span.ReactClickableSpan: boolean isKeyboardFocused()
com.facebook.react.uimanager.UIViewOperationQueue: void pauseFrameCallback()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void maybeRestartAnimationWithNewLayout(android.view.View)
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1: void execute$lambda$0(int,com.facebook.react.animated.NativeAnimatedModule,double,double)
androidx.lifecycle.ViewModel: void addCloseable(java.io.Closeable)
com.facebook.react.devsupport.DevSupportManagerBase: void setFpsDebugEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodeToView$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean component7()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.fabric.ReactSurface createSurface(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.facebook.react.devsupport.ReleaseDevSupportManager: void hidePausedInDebuggerOverlay()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPreviewSdkIntSync()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.facebook.react.fabric.FabricUIManagerProviderImpl: FabricUIManagerProviderImpl(com.facebook.react.fabric.ComponentFactory,com.facebook.react.uimanager.ViewManagerRegistry)
com.oblador.keychain.SecurityLevel: boolean satisfiesSafetyThreshold(com.oblador.keychain.SecurityLevel)
com.facebook.react.devsupport.interfaces.ErrorCustomizer: android.util.Pair customizeErrorInfo(android.util.Pair)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Object[])
androidx.fragment.app.Fragment: android.view.View getFocusedView()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: com.facebook.react.common.ReleaseLevel getReleaseLevel()
com.facebook.react.views.modal.ReactModalHostView: void setNavigationBarTranslucent(boolean)
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactActivity getReactActivity()
com.facebook.react.uimanager.ViewGroupManager$Companion: ViewGroupManager$Companion()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onTrimMemory(int)
com.facebook.react.views.scroll.ScrollEvent$Companion: com.facebook.react.views.scroll.ScrollEvent obtain(int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderColor(android.view.View,com.facebook.react.uimanager.style.LogicalEdge,java.lang.Integer)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void receiveCommand(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.facebook.react.ReactInstanceManager: void logOnDestroy()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.swmansion.reanimated.ReanimatedModule: void lambda$initialize$3(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isFpsDebugEnabled()
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.facebook.react.views.text.PreparedLayoutTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.biometric.BiometricFragment: void onAuthenticationFailed()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int getChildDrawingOrder$lambda$0(android.view.View,android.view.View)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.List getHitPathForActivePointer()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isViewChildOfScreen(android.view.View,android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getAndroidIdSync()
com.facebook.react.ReactDelegate: void onHostPause()
androidx.biometric.BiometricViewModel: void setFingerprintDialogPreviousState(int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.shell.MainPackageConfig: MainPackageConfig(com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStyleHeight()
com.swmansion.rnscreens.Screen: void setShouldTriggerPostponedTransitionAfterLayout(boolean)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getLayoutParent()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isNestedScrollingEnabled()
androidx.fragment.app.Fragment: void onPause()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.swmansion.rnscreens.Screen: void setSheetElevation(float)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean isLayoutAnimationDisabled()
com.facebook.react.uimanager.ReactShadowNode: int getNativeChildCount()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.DevSupportManagerBase: void showSplitBundleDevLoadingView(java.lang.String)
com.reactnativecommunity.netinfo.NetInfoModule: void invalidate()
com.facebook.react.runtime.CoreReactPackage: CoreReactPackage(com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void onGlobalLayout()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostImpl$CreationResult lambda$getOrCreateReactInstanceTask$22(com.facebook.react.runtime.internal.bolts.Task)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidKeyError(java.lang.String)
androidx.security.crypto.MasterKey$Builder: MasterKey$Builder(android.content.Context)
com.facebook.react.devsupport.RedBoxContentView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode removeChildAt(int)
com.facebook.react.ReactActivityDelegate$1: com.facebook.react.ReactRootView createRootView()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$8()
com.facebook.react.uimanager.JSTouchDispatcher: void onChildEndedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: ReactEditText$InternalKeyListener()
com.facebook.react.modules.core.PermissionListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: int getScrollEventThrottle()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.facebook.react.modules.dialog.AlertFragment: void onDismiss(android.content.DialogInterface)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.modules.network.NetworkingModule$Companion: NetworkingModule$Companion()
com.nozbe.watermelondb.WMDatabase: java.util.ArrayList getAllTables()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void enableCleaningForViewTag(int)
com.facebook.react.runtime.internal.bolts.Task: Task()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String toString()
com.facebook.fresco.ui.common.ImageRenderingInfra: com.facebook.fresco.ui.common.ImageRenderingInfra[] values()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.facebook.react.common.assets.ReactFontManager: void setTypeface(java.lang.String,int,android.graphics.Typeface)
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,int,android.content.res.AssetManager)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSheetElevation(com.swmansion.rnscreens.Screen,int)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: TabNavigatorObserver$OnAttachStateChangeListener(com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver)
com.facebook.react.views.modal.ReactModalHostView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage getRight()
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: AsyncLocalStorageUtil()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: void cancel()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setPausedInDebuggerOverlayManager(com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
com.facebook.react.devsupport.DevServerHelper: void openInspectorConnection()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void reset()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,int,java.lang.String,int,int)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: ReactNativeFeatureFlagsLocalAccessor()
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.drawee.drawable.ForwardingDrawable: void getRootBounds(android.graphics.RectF)
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isCanceled()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult innerEncryptedCredentials(java.lang.String,java.lang.String,java.lang.String,com.oblador.keychain.SecurityLevel)
com.facebook.react.ReactRootView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useShadowNodeStateOnClone()
androidx.biometric.BiometricViewModel: void setClientCallback(androidx.biometric.BiometricPrompt$AuthenticationCallback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableFabricRenderer()
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isExtensionSingleton()
com.facebook.react.uimanager.ReactShadowNode: boolean isLayoutOnly()
androidx.appcompat.widget.AppCompatTextView: void access$1001(androidx.appcompat.widget.AppCompatTextView,int)
com.swmansion.rnscreens.Screen: void setSheetClosesOnTouchOutside(boolean)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.ReactActivityDelegate: void onDestroy()
com.facebook.react.bridge.CatalystInstance: void setFabricUIManager(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void getProperties(java.util.Map)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void resetCurrentContext(com.facebook.react.bridge.ReactContext)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent$Companion: ReactTextInputSubmitEditingEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setFractionDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int access$readIntValue(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.bridge.ReadableArrayBuilder: void add(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState valueOf(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.NativeMap _init_$lambda$1(com.facebook.react.runtime.ReactInstance,java.util.Map,java.lang.String)
com.facebook.react.animated.ColorAnimatedNode$Companion: ColorAnimatedNode$Companion()
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.react.uimanager.ReactRoot: int getUIManagerType()
com.facebook.react.uimanager.LayoutShadowNode: void setInsetBlock(int,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.PointerEvents: boolean canBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void hideInternal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: com.facebook.react.ReactPackageTurboModuleManagerDelegate build()
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.PointerEvents$Companion: com.facebook.react.uimanager.PointerEvents parsePointerEvents(java.lang.String)
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: boolean hasNext()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.text.TextLayoutManager: int getTextJustificationMode(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setObscureBackground(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: ReactTextViewAccessibilityDelegate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: boolean getBooleanValue()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean shouldNotifyOnLayout()
com.swmansion.reanimated.MapUtils: java.lang.String getString(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrameGuarded(long)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List getOuterShadows()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.DevSupportManagerBase$showDevOptionsDialog$adapter$1: boolean areAllItemsEnabled()
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableNetworkEventReporting()
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: DialogModule$AlertFragmentListener(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactShadowNode: java.lang.String getHierarchyInfo()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey buildOnM()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.text.internal.span.SetSpanOperation: void execute(android.text.SpannableStringBuilder,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignContent(com.facebook.yoga.YogaAlign)
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: IPlatformCollator$CaseFirst(java.lang.String,int)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromFile(java.lang.String,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void isHeadphonesConnected(com.facebook.react.bridge.Promise)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$waitThenCallGetOrCreateReactInstanceTaskWithRetries$20(int,int,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createShadowNode(java.lang.String)
com.facebook.react.uimanager.events.TouchEvent: float getViewY()
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.String getKey()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean animatedShouldSignalBatch()
com.facebook.react.modules.i18nmanager.I18nUtil$Companion: com.facebook.react.modules.i18nmanager.I18nUtil DEPRECATED$getInstance()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isInvertColorsEnabledValue()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.MapBuffer$DataType getType()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderTopLeftRadius(float)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
androidx.security.crypto.MasterKeys: MasterKeys()
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String getSignature()
com.swmansion.rnscreens.Screen: void setNavigationBarTranslucent(java.lang.Boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enablePropsUpdateReconciliationAndroid()
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(java.lang.String,com.facebook.react.bridge.WritableMap,long)
com.facebook.react.views.scroll.ReactScrollView: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.fabric.FabricUIManager: void sweepActiveTouchForTag(int,int)
com.facebook.hermes.intl.LocaleObjectAndroid: java.lang.Object getLocaleWithoutExtensions()
com.facebook.react.views.scroll.ReactScrollViewHelper: void addLayoutChangeListener(com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter: void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object)
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.facebook.react.runtime.ReactHostImplDevHelper: android.app.Activity getCurrentActivity()
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache: ViewManagersPropertyCache()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.util.Map$Entry next()
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient createClient(android.content.Context)
com.facebook.react.viewmanagers.RNSScreenContainerManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.biometric.BiometricFragment$Api21Impl: BiometricFragment$Api21Impl()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.network.NetworkingModule$Companion: com.facebook.react.bridge.WritableMap access$translateHeaders(com.facebook.react.modules.network.NetworkingModule$Companion,okhttp3.Headers)
com.facebook.react.ReactInstanceManager: java.util.List getPackages()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useRawPropsJsiValue()
com.facebook.react.bridge.DimensionPropConverter$Companion: DimensionPropConverter$Companion()
com.swmansion.rnscreens.ScreenFooterManager: com.swmansion.rnscreens.ScreenFooter createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.DimensionPropConverter$Companion: DimensionPropConverter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSaturateEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.uimanager.drawable.BorderDrawable: BorderDrawable(android.content.Context,com.facebook.react.uimanager.Spacing,com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderStyle)
com.facebook.react.fabric.FabricUIManager: void lambda$static$0(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.packagerconnection.JSPackagerClient: void onMessage(okio.ByteString)
com.facebook.react.modules.devtoolsruntimesettings.Settings: Settings()
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useRawPropsJsiValue()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.learnium.RNDeviceInfo.RNDeviceModule: void getTags(com.facebook.react.bridge.Promise)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion: ReactUnimplementedViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion: ReactHorizontalScrollContainerViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.internal.bolts.Task$Companion: void access$completeAfterTask(com.facebook.react.runtime.internal.bolts.Task$Companion,com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task,java.util.concurrent.Executor)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.crypto.cipher.NativeGCMCipher: int nativeDecryptInit(byte[],byte[])
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void maybePost()
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: java.util.Collection getViewManagerNames()
com.swmansion.rnscreens.Screen: void setSheetInitialDetentIndex(int)
androidx.security.crypto.MasterKeys: java.lang.String getOrCreate(android.security.keystore.KeyGenParameterSpec)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable getOriginalBackground()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderWidth(int,float)
com.facebook.react.uimanager.PixelUtil: float pxToDp(float)
com.facebook.react.uimanager.UIConstantsProviderBinding$DefaultEventTypesProvider: com.facebook.react.bridge.NativeMap getDefaultEventTypes()
com.facebook.react.modules.network.ProgressResponseBody: ProgressResponseBody(okhttp3.ResponseBody,com.facebook.react.modules.network.ProgressListener)
androidx.security.crypto.EncryptedSharedPreferences: java.util.Map getAll()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int readIntValue(int)
com.swmansion.rnscreens.SearchBarManager: void setObscureBackground(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: void onVirtualViewKeyboardFocusChanged(int,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findClosestReactAncestor(android.view.View)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: NoopEventHandler()
com.facebook.react.bridge.JSONArguments: JSONArguments()
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getCounter(com.facebook.react.bridge.ReactMarkerConstants)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.animated.NativeAnimatedNodesManager: java.util.Set getTagsOfConnectedNodes$ReactAndroid_release(int,java.lang.String)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.swmansion.worklets.WorkletsModule: com.facebook.jni.HybridData initHybrid(long,java.lang.String,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.worklets.AndroidUIScheduler)
com.facebook.react.uimanager.UIImplementation: void notifyOnBeforeLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int,int)
com.facebook.react.animated.ColorAnimatedNode$Companion: android.content.Context getContextHelper(com.facebook.react.animated.AnimatedNode)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: boolean ensureDatabase()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.hermes.instrumentation.HermesMemoryDumper: java.lang.String getId()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.AppBarLayout: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeBackground()
com.facebook.react.common.mapbuffer.WritableMapBuffer: int getInt(int)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.BlendModeHelper: boolean needsIsolatedLayer(android.view.ViewGroup)
com.nozbe.watermelondb.WMDatabaseDriver: WMDatabaseDriver(android.content.Context,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setOpacity(float)
com.facebook.react.views.view.WindowUtilKt: void setStatusBarTranslucency(android.view.Window,boolean)
com.facebook.react.runtime.ReactHostImpl: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setProgress(android.view.View,double)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getBorderColor(int)
com.facebook.react.views.text.PreparedLayoutTextViewManager: com.facebook.react.views.text.PreparedLayoutTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.PreparedLayoutTextView)
com.facebook.react.views.text.ReactTextView: ReactTextView(android.content.Context)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: void raiseSoftException(java.lang.String,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useAlwaysAvailableJSErrorHandling()
com.facebook.react.views.text.ReactTextShadowNode: void markUpdated()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.react.uimanager.TouchTargetHelper: int getTouchTargetForView(android.view.View,float,float)
com.facebook.react.uimanager.events.Event: boolean isInitialized()
com.facebook.react.internal.interop.InteropEvent: java.lang.String eventName()
com.facebook.react.bridge.ReadableNativeArray: int access$getJniPassCounter$cp()
com.facebook.react.views.textinput.ReactTextInputTextWatcher: void afterTextChanged(android.text.Editable)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getFontFamily()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path getPaddingBoxPath()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task makeVoid()
com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion: OnScrollDispatchHelper$Companion()
com.facebook.drawee.view.DraweeView: void onAttach()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.ResponseBody: java.io.Reader charStream()
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
com.facebook.react.common.mapbuffer.MapBuffer$Entry: long getLongValue()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: ReactNativeFirebaseAppModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType valueOf(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void transitionLayoutOnlyViewToNativeView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void blur(android.view.View)
com.facebook.react.uimanager.events.PointerEvent: void init(java.lang.String,int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,short)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer(com.facebook.react.internal.ChoreographerProvider)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor clear()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getOrCreateViewManagerDelegate()
com.nozbe.watermelondb.BuildConfig: BuildConfig()
com.facebook.react.animated.AnimationDriver: void resetConfig(com.facebook.react.bridge.ReadableMap)
androidx.biometric.BiometricPrompt: void authenticateInternal(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)
com.facebook.react.views.textinput.ReactTextInputLocalData: ReactTextInputLocalData(android.widget.EditText)
com.facebook.react.uimanager.events.EventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.uimanager.ReactShadowNodeImpl: void dirty()
com.facebook.react.uimanager.TransformHelper: double convertToRadians(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.zoontek.rnpermissions.RNPermissionsModule: void request(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.JSTouchDispatcher: void markActiveTouchForTag(int,int,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setAlpha(int)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: double interpolate(double,double[],double[],java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightAuto()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int getDelayMs()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewShadows(java.util.List,java.util.List)
com.facebook.react.uimanager.UIImplementation: void removeLayoutUpdateListener()
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: javax.crypto.spec.IvParameterSpec readIv(byte[])
com.facebook.react.animated.NativeAnimatedModule$flattenAnimatedNodeOffset$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int,boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void setMaximumSize(long)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.OutlineDrawable ensureOutlineDrawable(android.view.View)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode$Companion: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void reconnect()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: void cancelPresentedAuthentication()
androidx.biometric.BiometricViewModel$NegativeButtonListener: void onClick(android.content.DialogInterface,int)
com.facebook.react.uimanager.UIViewOperationQueue: UIViewOperationQueue(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager,int)
com.facebook.react.bridge.DynamicNative: double asDouble()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setDisabled(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: ReactQueueConfigurationSpec$Companion()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.uimanager.style.LogicalEdge$BOTTOM: LogicalEdge$BOTTOM(java.lang.String,int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManagerBuilder getBaseReactInstanceManagerBuilder()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer getWidthMeasureSpec()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.interop.InteropModuleRegistry: InteropModuleRegistry()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper$Companion: ReactEditTextInputConnectionWrapper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createGrayscaleEffect(float,android.graphics.RenderEffect)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
com.facebook.react.uimanager.LengthPercentage: LengthPercentage(float,com.facebook.react.uimanager.LengthPercentageType)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void requestDisallowInterceptTouchEvent(boolean)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.cameraroll.CameraRollModule: void addListener(java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setColors(com.facebook.react.bridge.ReadableArray)
com.facebook.react.packagerconnection.JSPackagerClient: java.lang.String access$getTAG$cp()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useNativeViewConfigsInBridgelessMode()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void lambda$addScreenListener$0(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage getTop()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.ReactHost: void invalidate()
com.facebook.react.bridge.BridgeReactContext: void raiseCatalystInstanceMissingException()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedSplitBundleFromNetworkLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.nozbe.watermelondb.WMDatabaseBridge: void query(int,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: void requestReadWritePermission(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.modules.devloading.DevLoadingModule: DevLoadingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: CompositeBackgroundDrawable$Companion()
com.facebook.react.uimanager.ReactClippingViewGroup: void updateClippingRect()
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.facebook.react.uimanager.events.PointerEvent: void addModifierKeyData(com.facebook.react.bridge.WritableMap,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.module.annotations.ReactModule: boolean canOverrideExistingModule()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.io.IOException access$makeExceptionFromResponse(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,java.lang.String,okhttp3.Response)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setRole(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getTurboModulesEnabled()
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] $values()
com.nozbe.watermelondb.WMDatabaseDriver: void lambda$unsafeResetDatabase$2(com.nozbe.watermelondb.utils.Schema)
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.facebook.react.runtime.internal.bolts.Executors$UIThreadExecutor: Executors$UIThreadExecutor()
com.facebook.react.uimanager.events.EventDispatcherImpl: void maybePostFrameCallbackFromNonUI()
com.facebook.react.devsupport.RedBoxContentView: void init$lambda$2(com.facebook.react.devsupport.RedBoxContentView,android.view.View)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: int getRetries()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getName()
com.oblador.keychain.KeychainModule: void resetGenericPassword(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.cameraroll.CameraRollModule: void putLocationInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,boolean,int,android.content.ContentResolver)
com.facebook.react.jstasks.LinearCountingRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy update()
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$10$lambda$9(com.facebook.react.devsupport.DevSupportManagerBase,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void viewDidLayout(android.view.View)
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.bridge.JSBundleLoader getJsBundleLoader()
androidx.appcompat.widget.AppCompatEditText: boolean isEmojiCompatEnabled()
com.facebook.react.fabric.events.EventBeatManager$Companion: EventBeatManager$Companion()
com.facebook.react.views.scroll.ReactScrollViewHelper: void smoothScrollTo(android.view.ViewGroup,int,int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.security.crypto.EncryptedSharedPreferences: EncryptedSharedPreferences(java.lang.String,java.lang.String,android.content.SharedPreferences,com.google.crypto.tink.Aead,com.google.crypto.tink.DeterministicAead)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevLoadingViewForRemoteJSEnabled()
com.facebook.hermes.intl.IPlatformNumberFormatter: java.lang.String getDefaultNumberingSystem(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacityOld(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp valueOf(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: void onSuccess()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: void getPhotoThumbnail(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: void onChunkComplete(java.util.Map,okio.Buffer,boolean)
com.facebook.react.uimanager.MatrixMathHelper: void multiplyVectorByMatrix(double[],double[],double[])
com.facebook.react.views.text.ReactTextShadowNode: boolean hoistNativeChildren()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.DevSupportManagerBase: void setDevSupportEnabled(boolean)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.FabricEnabledHeaderConfigViewGroup: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedTransition(java.util.List,int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.facebook.react.JSEngineResolutionAlgorithm: JSEngineResolutionAlgorithm(java.lang.String,int)
com.facebook.react.fabric.SynchronousEvent: com.facebook.react.fabric.SynchronousEvent copy$default(com.facebook.react.fabric.SynchronousEvent,int,int,java.lang.String,int,java.lang.Object)
com.swmansion.reanimated.NodesManager: void postOnAnimation(com.swmansion.reanimated.NodesManager$OnAnimationFrame)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRowGap(float)
com.facebook.react.modules.websocket.WebSocketModule: void access$notifyWebSocketFailed(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] $values()
com.facebook.react.ReactActivityDelegate: boolean isWideColorGamutEnabled()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult encrypt(java.lang.String,java.lang.String,java.lang.String,com.oblador.keychain.SecurityLevel)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent$Companion: ReactTextInputEndEditingEvent$Companion()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object getAndReset()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.facebook.react.devsupport.MultipartStreamReader$ChunkListener: void onChunkComplete(java.util.Map,okio.Buffer,boolean)
com.facebook.react.animated.NativeAnimatedModule$1: void doFrameGuarded(long)
com.facebook.react.uimanager.style.CornerRadii: float component2()
com.facebook.react.ReactInstanceManager: void createReactContextInBackground()
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setRequestStrongBoxBacked(boolean)
com.facebook.react.uimanager.events.FabricEventDispatcher: void invalidate()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator(float)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
com.facebook.hermes.intl.Constants: Constants()
androidx.security.crypto.EncryptedSharedPreferences: int getInt(java.lang.String,int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: TextInlineImageSpan()
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int getTotalExpectedFrames()
com.facebook.react.bridge.BridgeReactContext: void handleException(java.lang.Exception)
com.facebook.react.modules.dialog.DialogModule$Companion: void getACTION_DISMISSED$ReactAndroid_release$annotations()
com.facebook.react.packagerconnection.NotificationOnlyHandler: void onNotification(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.PlatformNumberFormatterICU: java.text.AttributedCharacterIterator formatToParts(double)
com.facebook.react.viewmanagers.RNSScreenManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findStack(android.view.View)
com.facebook.react.uimanager.style.ColorEdges: int getRight()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrixColorFilter parseColorMatrixFilters(com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: int getPopExitAnim()
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.security.crypto.EncryptedSharedPreferences$Editor: EncryptedSharedPreferences$Editor(androidx.security.crypto.EncryptedSharedPreferences,android.content.SharedPreferences$Editor)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
androidx.biometric.BiometricFragment$10: void run()
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: int getCount()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void invalidate()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion: SwipeRefreshLayoutManager$Companion()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableMap getExtraData()
com.facebook.react.modules.dialog.AlertFragment$Companion: android.app.Dialog createAppDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener)
com.facebook.react.runtime.BridgelessReactContext: boolean isBridgeless()
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
com.facebook.react.uimanager.JSPointerDispatcher: com.facebook.react.uimanager.events.PointerEvent$PointerEventState normalizeToRoot(com.facebook.react.uimanager.events.PointerEvent$PointerEventState,float,float)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$show$2: RedBoxDialogSurfaceDelegate$show$2(android.app.Activity,com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate,int)
com.facebook.hermes.intl.LocaleIdentifier: boolean handleExtensions(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag,boolean,com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.animated.InterpolationAnimatedNode$Companion: int[] access$fromIntArray(com.facebook.react.animated.InterpolationAnimatedNode$Companion,com.facebook.react.bridge.ReadableArray)
androidx.biometric.BiometricFragment: int getDismissDialogDelay()
com.facebook.react.bridge.WritableNativeArray: void initHybrid()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setViewClassName(java.lang.String)
com.facebook.datasource.BaseDataSubscriber: void onProgressUpdate(com.facebook.datasource.DataSource)
com.facebook.jni.DestructorThread$1: void run()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.devsupport.DevSupportManagerBase: void setPackagerLocationCustomizer(com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.ShadowNodeRegistry: int getRootTag(int)
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PathEffect getPathEffect(com.facebook.react.uimanager.style.BorderStyle,float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableCppPropsIteratorSetter()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.facebook.react.runtime.ReactHostImplDevHelper: com.facebook.react.bridge.ReactContext getCurrentReactContext()
androidx.biometric.BiometricPrompt: BiometricPrompt(androidx.fragment.app.Fragment,androidx.biometric.BiometricPrompt$AuthenticationCallback)
com.oblador.vectoricons.VectorIconsModule: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void doFrameGuarded(long)
com.facebook.react.modules.websocket.WebSocketModule$ContentHandler: void onMessage(java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.facebook.react.ReactInstanceManager$1: void invokeDefaultOnBackPressed()
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.modules.core.JavaTimerManager: JavaTimerManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.JavaScriptTimerExecutor,com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.zoontek.rnpermissions.RNPermissionsModule: void shouldShowRequestRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.DevSupportManagerBase$showDevOptionsDialog$adapter$1: DevSupportManagerBase$showDevOptionsDialog$adapter$1(android.app.Activity,java.util.Set,java.lang.String[])
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableFontScaleChangesUpdatingLayout()
com.facebook.react.uimanager.UIImplementation$1: void run()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.FpsListener: boolean isEnabled()
com.facebook.react.views.image.ReactCallerContextFactory: java.lang.Object getOrCreateCallerContext(java.lang.String,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task waitThenCallGetOrCreateReactInstanceTask()
com.facebook.react.ReactHost: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeRegisterSharedView(android.view.View)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.biometric.FingerprintDialogFragment$1: FingerprintDialogFragment$1(androidx.biometric.FingerprintDialogFragment)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.facebook.react.common.ShakeDetector: void recordShake(long)
com.facebook.react.runtime.BridgelessCatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.crypto.CryptoConfig: com.facebook.crypto.CryptoConfig[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacitySync()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int getColumn()
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String,int)
com.facebook.react.runtime.ReactSurfaceImpl$Companion: ReactSurfaceImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.BoxShadow: BoxShadow(float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.swmansion.reanimated.NodesManager: float[] measure(int)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.facebook.react.uimanager.style.BackgroundImageLayer: BackgroundImageLayer(com.facebook.react.uimanager.style.Gradient)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.react.internal.interop.InteropEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.modules.core.JavaScriptTimerExecutor: void callTimers(com.facebook.react.bridge.WritableArray)
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: TransformAnimatedNode$AnimatedTransformConfig(com.facebook.react.animated.TransformAnimatedNode)
com.facebook.react.fabric.mounting.MountingManager: void attachRootView(int,android.view.View,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.concurrent.Executor access$getCancellationExecutor$p(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBlurEffect(android.view.View,java.lang.String)
com.facebook.react.uimanager.style.LogicalEdge$START: LogicalEdge$START(java.lang.String,int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: void setPath(android.graphics.Path)
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax[] values()
com.facebook.react.devsupport.interfaces.DevSupportManager: void destroyRootView(android.view.View)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void handleKeyEvent(android.view.KeyEvent)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: CxxInspectorPackagerConnection$WebSocketDelegate(com.facebook.jni.HybridData)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleForceViewToBeNonLayoutOnly(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: void assertType(com.facebook.react.common.mapbuffer.MapBuffer$DataType)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.react.views.text.internal.span.ReactStrikethroughSpan: ReactStrikethroughSpan()
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
com.facebook.react.fabric.FabricUIManager$2: int getSurfaceId()
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: UIViewOperationQueue$MeasureInWindowOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)
com.facebook.react.devsupport.ReleaseDevSupportManager: void registerErrorCustomizer(com.facebook.react.devsupport.interfaces.ErrorCustomizer)
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void invalidate()
com.facebook.react.modules.network.ProgressResponseBody$source$1: ProgressResponseBody$source$1(okio.Source,com.facebook.react.modules.network.ProgressResponseBody)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void updateState(int,int)
com.facebook.react.uimanager.ReactShadowNode: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRowGapPercent(float)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.swmansion.reanimated.ReanimatedModule: boolean installTurboModule()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: CipherStorageKeystoreRsaEcb()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarTranslucent(android.view.View,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState setFinalAnimatedPositionScroll(int,int)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State valueOf(java.lang.String)
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes$Companion: NativeAnimatedModule$BatchExecutionOpCodes$Companion()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.facebook.react.jscexecutor.JSCExecutorFactory: void startSamplingProfiler()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,long)
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
com.swmansion.rnscreens.ScreenContentWrapper: com.swmansion.rnscreens.ScreenContentWrapper$OnLayoutCallback getDelegate$react_native_screens_release()
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager access$getInstance$cp()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: LayoutAnimations(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.JSPointerDispatcher: android.view.MotionEvent convertMotionToRootFrame(android.view.View,android.view.MotionEvent)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getComponentStack()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: ReactScrollViewAccessibilityDelegate()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isHeadphonesConnectedSync()
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation$Companion: DefaultDevLoadingViewImplementation$Companion()
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateZ(double[],double)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.facebook.react.runtime.ReactSurfaceImpl$Companion: ReactSurfaceImpl$Companion()
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.BorderRadiusStyle copy$default(com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,int,java.lang.Object)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.text.ReactTextUpdate: com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,int,int,int)
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel[] values()
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.devsupport.BundleDownloader: okhttp3.Call access$getDownloadBundleFromURLCall$p(com.facebook.react.devsupport.BundleDownloader)
com.facebook.react.bridge.JavaModuleWrapper$Companion: JavaModuleWrapper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerPosition(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.internal.bolts.Task$Companion: Task$Companion()
com.facebook.react.runtime.ReactHostImpl: void onHostDestroy()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableSynchronousStateUpdates()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getAdbReverseTcpCommand(android.content.Context)
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: void onProgress(long,long,boolean)
com.facebook.react.animated.AdditionAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float,float)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean disableMainQueueSyncDispatchIOS()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactActivity: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.facebook.react.packagerconnection.JSPackagerClient: JSPackagerClient(java.lang.String,com.facebook.react.packagerconnection.PackagerConnectionSettings,java.util.Map,com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: OpacityAnimation$OpacityAnimationListener(android.view.View)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.facebook.react.runtime.ReactInstance: void handleMemoryPressureJs(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updatePadding()
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageSync()
com.facebook.react.uimanager.JSPointerDispatcher: short getCoalescingKey()
com.facebook.react.devsupport.ReleaseDevSupportManager: boolean hasUpToDateJSBundleInCache()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setPadding(com.facebook.react.views.text.PreparedLayoutTextView,int,int,int,int)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.BundleDownloader$Companion: void access$populateBundleInfo(com.facebook.react.devsupport.BundleDownloader$Companion,java.lang.String,okhttp3.Headers,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.NativeModuleRegistryBuilder: void processPackage(com.facebook.react.ReactPackage)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onMessage(okhttp3.WebSocket,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.devsupport.DevServerHelper: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
com.swmansion.reanimated.NodesManager$2: NodesManager$2(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.ReactContext)
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: ReactInstance$BridgelessViewManagerResolver(java.util.List,com.facebook.react.runtime.BridgelessReactContext)
com.facebook.react.runtime.ReactSurfaceImpl: void updateLayoutSpecs$ReactAndroid_release(int,int,int,int)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] $values()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void reset()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.facebook.react.devsupport.LogBoxModule$Companion: LogBoxModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.TouchEvent$Companion: TouchEvent$Companion()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getScreenCoordinatesByPointerId()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent obtain(int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.animated.NativeAnimatedNodesManager: void setAnimatedNodeOffset(int,double)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void access$setEnabled$cp(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: SendAccessibilityEventMountItem(int,int,int)
com.facebook.react.ReactDelegate: void unloadApp()
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: ReactTextInputBlurEvent(int,int)
com.facebook.react.bridge.ReadableMapBuilder: void putMap(java.lang.String,kotlin.jvm.functions.Function1)
com.facebook.react.runtime.BindingsInstaller$Companion: BindingsInstaller$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long,int)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.scroll.ReactScrollViewHelper: void registerFlingAnimator(android.view.ViewGroup)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.modules.core.JavaTimerManager: void clearFrameCallback()
com.swmansion.rnscreens.ScreensModule: int[] startTransition(java.lang.Integer)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorage: java.util.Set getAllKeys()
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.facebook.react.animated.NativeAnimatedModule$createAnimatedNode$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.List getStack()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFontScaleChangesUpdatingLayout()
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
com.facebook.react.uimanager.style.LogicalEdge: LogicalEdge(java.lang.String,int)
com.facebook.react.animated.MultiplicationAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.modules.network.RequestBodyUtil: com.facebook.react.modules.network.ProgressRequestBody createProgressRequest(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
com.facebook.react.uimanager.JSTouchDispatcher: void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.bridge.ReactContext)
com.facebook.crypto.cipher.NativeGCMCipher: int nativeUpdateAad(byte[],int)
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge[] values()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)
com.facebook.react.animated.NativeAnimatedModule$startAnimatingNode$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: void override(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setUnits(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay)
com.facebook.react.modules.fresco.FrescoModule$Companion: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.JSPointerDispatcher: void onChildEndedNativeGesture()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void unsubscribeFromTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
androidx.biometric.BiometricViewModel$CallbackListener: void onHelp(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: java.lang.String getEventName()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: DefaultTurboModuleManagerDelegate(com.facebook.react.bridge.ReactApplicationContext,java.util.List,java.util.List,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface start()
com.facebook.react.ReactFragment$Builder: com.facebook.react.ReactFragment$Builder setComponentName(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
com.facebook.hermes.intl.PlatformCollatorICU: PlatformCollatorICU()
com.facebook.react.modules.core.ExceptionsManagerModule$Companion: ExceptionsManagerModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.learnium.RNDeviceInfo.RNDeviceModule: int getApiLevelSync()
com.facebook.react.devsupport.DevServerHelper$closeInspectorConnection$1: DevServerHelper$closeInspectorConnection$1(com.facebook.react.devsupport.DevServerHelper)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.facebook.react.devsupport.interfaces.DevSupportManager: void setHotModuleReplacementEnabled(boolean)
com.facebook.drawee.drawable.ForwardingDrawable: boolean isStateful()
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.facebook.react.devsupport.interfaces.ErrorType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.module.model.ReactModuleInfo$Companion: ReactModuleInfo$Companion()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.animated.InterpolationAnimatedNode: void onAttachedToNode$ReactAndroid_release(com.facebook.react.animated.AnimatedNode)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.ReactNativeHost: java.util.List getPackages()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.swmansion.rnscreens.Screen: void setFooter(com.swmansion.rnscreens.ScreenFooter)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] $values()
com.facebook.react.views.textinput.ReactTextInputBlurEvent: boolean canCoalesce()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.CharSequence override$lambda$0(java.lang.String)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColor(android.content.Context)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenFooterManager: java.lang.String getName()
com.facebook.react.modules.websocket.WebSocketModule$connect$2: void onClosed(okhttp3.WebSocket,int,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: EventDispatcherImpl$ScheduleDispatchFrameCallback$1(com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
com.facebook.react.jstasks.HeadlessJsTaskContext: void retryTask$lambda$3(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: void removeListeners(double)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: java.util.List getComponents()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
androidx.biometric.BiometricPrompt$AuthenticationCallback: BiometricPrompt$AuthenticationCallback()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerConnected()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableEagerRootViewAttachment()
com.facebook.react.modules.sound.SoundManagerModule$Companion: SoundManagerModule$Companion()
com.facebook.react.modules.network.NetworkingModule: void access$removeRequest(com.facebook.react.modules.network.NetworkingModule,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.facebook.react.views.image.MultiPostprocessor$Companion: com.facebook.imagepipeline.request.Postprocessor from(java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollAndSnap(int)
com.facebook.react.modules.dialog.AlertFragment$Companion: android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener)
com.facebook.react.devsupport.DevSupportManagerBase: void access$reportBundleLoadingFailure(com.facebook.react.devsupport.DevSupportManagerBase,java.lang.Exception)
com.facebook.react.devsupport.DevSupportManagerBase: void hideDevOptionsDialog()
com.facebook.hermes.intl.PlatformNumberFormatterICU: android.icu.util.MeasureUnit parseUnit(java.lang.String)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setRippleRadius(android.view.View,int)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.devsupport.BridgelessDevSupportManager: BridgelessDevSupportManager(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: java.lang.String toString()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.react.views.textinput.ReactEditText: int clampToTextLength(int)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
com.facebook.react.uimanager.LengthPercentage$Companion: com.facebook.react.uimanager.LengthPercentage setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$15()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: void throwIfNoCryptoAvailable()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$2()
com.facebook.react.ReactInstanceManager: void onHostPause()
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] $values()
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: ViewManagerPropertyUpdater$FallbackViewManagerSetter(java.lang.Class)
org.pgsqlite.SQLitePlugin: com.facebook.react.bridge.WritableMap executeSqlStatementQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,com.facebook.react.bridge.ReadableArray,org.pgsqlite.CallbackContext)
com.facebook.react.animated.AnimatedNode$Companion: AnimatedNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.nozbe.watermelondb.WMDatabaseBridge: void lambda$invalidate$9()
com.facebook.react.uimanager.ReactShadowNode: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.LayoutDirectionUtil: LayoutDirectionUtil()
com.facebook.react.runtime.ReactHostInspectorTarget$UIThreadConditionalSyncExecutor: ReactHostInspectorTarget$UIThreadConditionalSyncExecutor()
com.facebook.react.bridge.DynamicFromMap: boolean _get_isNull_$lambda$0(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.biometric.CryptoObjectUtils$Api23Impl: android.security.keystore.KeyGenParameterSpec$Builder createKeyGenParameterSpecBuilder(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.BV.LinearGradient.LinearGradientManager: void setEndPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getLastButtonState()
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: boolean trySetError(java.lang.Exception)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.NodesManager: void enqueueUpdateViewOnNativeThread(int,com.facebook.react.bridge.WritableMap,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.fabric.SurfaceHandlerBinding getSurfaceHandler()
com.facebook.react.devsupport.interfaces.BundleLoadCallback: void onSuccess()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: UIViewOperationQueue$DispatchCommandOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.jscexecutor.JSCExecutor: void loadLibrary()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: boolean isLayoutOnlyAndCollapsable(com.facebook.react.uimanager.ReactStylesDiffMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setBorderRadius(com.facebook.react.views.text.PreparedLayoutTextView,int,float)
androidx.biometric.BiometricFragment$Api28Impl: android.hardware.biometrics.BiometricPrompt$Builder createPromptBuilder(android.content.Context)
com.facebook.react.views.view.ReactDrawableHelper: int getColor(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void initialize()
androidx.fragment.app.Fragment: java.lang.String generateActivityResultKey()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.uimanager.IViewManagerWithChildren: boolean needsCustomLayoutForChildren()
com.facebook.react.uimanager.OnLayoutEvent: void init(int,int,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollViewHelper: android.view.View findNextFocusableView(android.view.ViewGroup,android.view.View,int,boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.facebook.react.devsupport.DevSupportManagerBase: android.util.Pair processErrorCustomizers(android.util.Pair)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: ViewManagersPropertyCache$BoxedIntPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode removeChildAt(int)
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextAttributeProps fromReadableMap(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.ReactPackageLogger: void endProcessPackage()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.facebook.react.uimanager.ReactShadowNode: void setFlexShrink(float)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isBatteryChargingSync()
com.google.android.material.chip.Chip: void setLines(int)
com.facebook.react.modules.blob.BlobModule$Companion: BlobModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.inspector.InspectorNetworkHelper$loadNetworkResource$1: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
androidx.security.crypto.MasterKey$KeyScheme: MasterKey$KeyScheme(java.lang.String,int)
com.facebook.react.views.swiperefresh.RefreshEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.ReactShadowNode: void setRowGapPercent(float)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.facebook.react.ReactRootView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.react.runtime.ReactHostInspectorTarget: void getMHybridData$annotations()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void setHotModuleReplacementEnabled(boolean)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.swmansion.reanimated.NodesManager$3: void runGuarded()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.facebook.react.animated.AnimatedNode: void onDetachedFromNode$ReactAndroid_release(com.facebook.react.animated.AnimatedNode)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: ReactScrollViewCommandHelper()
com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation: void onLayoutUpdate(int,int,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.facebook.react.uimanager.BaseViewManager$1: void onChildViewRemoved(android.view.View,android.view.View)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: boolean markSupported()
com.facebook.react.uimanager.UIViewOperationQueue: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.modal.ReactModalHostView: void syncSystemBarsVisibility$default(com.facebook.react.views.modal.ReactModalHostView,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsControllerCompat,java.util.List,int,java.lang.Object)
com.nozbe.watermelondb.WMDatabase: void transaction(com.nozbe.watermelondb.WMDatabase$TransactionFunction)
com.facebook.react.fabric.LongStreamingStats: void add(long)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.animated.NativeAnimatedNodesManager: void startAnimatingNode(int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType: com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.biometric.CancellationSignalProvider$1: android.os.CancellationSignal getBiometricCancellationSignal()
com.facebook.react.uimanager.ReanimatedUIImplementation: ReanimatedUIImplementation(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.events.EventDispatcher,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.uimanager.drawable.BoxShadowBorderRadiusKt: float adjustRadiusForSpread(float,float)
com.swmansion.reanimated.NativeProxy: void performOperations()
com.facebook.react.common.network.OkHttpCallUtil: void cancelTag(okhttp3.OkHttpClient,java.lang.Object)
com.facebook.react.jscexecutor.JSCExecutor: JSCExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: ReactScrollViewCommandHelper$ScrollToCommandData(int,int,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getMetroHostPropValue()
com.nozbe.watermelondb.WMDatabase: com.nozbe.watermelondb.WMDatabase getInstance(java.lang.String,android.content.Context)
com.facebook.react.runtime.ReactHostImpl: void stopAttachedSurfaces(java.lang.String,com.facebook.react.runtime.ReactInstance)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.facebook.react.runtime.ReactHostImpl: void onConfigurationChanged(android.content.Context)
com.facebook.hermes.intl.LocaleObjectAndroid: com.facebook.hermes.intl.ILocaleObject createFromLocaleId(java.lang.String)
androidx.security.crypto.EncryptedSharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion: RedBoxContentView$OpenStackFrameTask$Companion()
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow[] $values()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setAnimating$ReactAndroid_release(boolean)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.app.Activity getCurrentActivity()
com.facebook.react.fabric.mounting.MountItemDispatcher: void addMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
androidx.biometric.BiometricManager$Injector: android.hardware.biometrics.BiometricManager getBiometricManager()
com.facebook.react.defaults.DefaultReactHost: void invalidate$ReactAndroid_release()
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void isPackagerRunning$lambda$22(com.facebook.react.devsupport.DevSupportManagerBase,com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.facebook.react.uimanager.UIManagerModule: void invalidate()
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: void setPosition(int)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: boolean isInLayout()
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodeFromView$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
okhttp3.RequestBody: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
com.facebook.react.bridge.BridgeSoLoader: boolean isInitialized()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.Postprocessor getPostprocessor()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes valueOf(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
com.facebook.hermes.intl.OptionHelpers: java.lang.Object DefaultNumberOption(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.drawee.view.DraweeView: boolean onTouchEvent(android.view.MotionEvent)
androidx.fragment.app.DialogFragment: android.app.Dialog access$000(androidx.fragment.app.DialogFragment)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setSignDisplay(com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.views.text.PreparedLayoutTextView: int getTextOffsetAt(int,int)
com.swmansion.reanimated.ReanimatedModule: void lambda$willDispatchViewUpdates$5(java.util.ArrayList,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.ReactActivity: com.facebook.react.ReactDelegate getReactDelegate()
com.facebook.react.animated.NativeAnimatedModule: void access$decrementInFlightAnimationsForViewTag(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.fabric.mounting.MountingManager: void sendAccessibilityEvent(int,int,int)
com.facebook.react.uimanager.style.RadialGradient: kotlin.Pair calculateRadius(float,float,float,float)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.hermes.intl.LocaleIdentifier: void parseOtherExtensions(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.ParsedLocaleIdentifier,char)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: android.view.View getTabNavigator(android.view.View)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] $values()
com.facebook.react.views.text.PreparedLayoutTextViewManager: java.lang.String getName()
com.facebook.react.jstasks.NoRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy copy()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setInputType(android.view.View,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useOptimizedEventBatchingOnAndroid()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableMainQueueModulesOnIOS()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessReactContext lambda$getOrCreateReactContext$19()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.swmansion.reanimated.BorderRadiiDrawableUtils: com.swmansion.reanimated.ReactNativeUtils$BorderRadii getBorderRadii(android.view.View)
com.facebook.react.views.textinput.ReactTextChangedEvent: ReactTextChangedEvent(int,java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android: boolean enableBridgelessArchitecture()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void getVisibleVirtualViews(java.util.List)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.facebook.react.devsupport.BundleDownloader$Companion: boolean access$storePlainJSInFile(com.facebook.react.devsupport.BundleDownloader$Companion,okio.BufferedSource,java.io.File)
com.facebook.react.modules.network.NetworkingModule$Companion: NetworkingModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.LocaleObjectAndroid: java.util.HashMap getUnicodeExtensions()
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.facebook.react.devsupport.PackagerStatusCheck$Companion: java.lang.String createPackagerStatusURL(java.lang.String)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,java.lang.Throwable)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.facebook.hermes.intl.LocaleObjectAndroid: com.facebook.hermes.intl.ILocaleObject createDefault()
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.facebook.react.views.text.ReactTextViewManager: void updateViewAccessibility(com.facebook.react.views.text.ReactTextView)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasStateDescription(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.AppCompatTextView: int access$201(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleAspectRatio(float)
com.facebook.react.uimanager.style.ColorEdges: boolean equals(java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: ReactNativeFeatureFlagsCxxInterop()
com.facebook.react.modules.blob.BlobCollector: void install$lambda$0(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule)
com.facebook.react.uimanager.Spacing: Spacing(com.facebook.react.uimanager.Spacing)
com.facebook.react.modules.debug.DevMenuModule: void setHotLoadingEnabled(boolean)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
com.facebook.react.jstasks.HeadlessJsTaskContext: void startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig,int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void clearAnimationConfig(int)
androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)
androidx.biometric.BiometricFragment: void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: void onPackagerDevMenuCommand()
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: void runGuarded()
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: boolean isRunningOnStockEmulator()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitLayoutEvent(android.view.ViewGroup)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDirty()
com.google.android.material.internal.ClippableRoundedCornerLayout: float getCornerRadius()
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.facebook.react.views.scroll.ReactScrollViewHelper: int resolveAbsoluteDirection(int,boolean,int)
com.facebook.react.runtime.ReactInstance$loadJSBundle$1: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: int getVirtualViewAt(float,float)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int,int)
com.facebook.react.modules.network.CookieJarContainer: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager startSurface(int,com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.modal.ReactModalHostView: void updateSystemAppearance()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.facebook.react.animated.InterpolationAnimatedNode$Companion: double[][] access$fromStringPattern(com.facebook.react.animated.InterpolationAnimatedNode$Companion,com.facebook.react.bridge.ReadableArray)
org.pgsqlite.SQLitePlugin: void backgroundExecuteSqlBatch(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.PreparedLayoutTextView$Companion: boolean isDirectionKey(int)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: com.facebook.react.bridge.ModuleHolder next()
com.facebook.hermes.intl.LocaleObject: com.facebook.hermes.intl.ILocaleObject createDefault()
com.facebook.react.modules.toast.ToastModule: void showWithGravity$lambda$1(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setIntrinsicContentSize()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.uimanager.annotations.ReactPropGroup$Companion: ReactPropGroup$Companion()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewFeedbackUnderlay(android.graphics.drawable.Drawable)
com.facebook.react.devsupport.DevServerHelper$Companion: DevServerHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.facebook.react.bridge.CxxModuleWrapper$Companion: CxxModuleWrapper$Companion()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: ReadableNativeMap$entryIterator$1$1(java.lang.String[],java.lang.Object[])
com.facebook.react.views.imagehelper.ImageSource$Companion: ImageSource$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactInstanceManager: void setUseFallbackBundle(boolean)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink getLinkBySpanPos(int,int)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.views.image.ImageResizeMethod: kotlin.enums.EnumEntries getEntries()
com.swmansion.rnscreens.SearchBarManager: void blur(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.facebook.react.animated.TransformAnimatedNode: void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap getHeaders()
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.view.ReactViewGroup: boolean customDrawOrderDisabled()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: ReactModalHostView$DialogRootViewGroup(android.content.Context)
com.facebook.react.DebugCorePackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.bridge.JavaOnlyMap convertProcessedError$ReactAndroid_release(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError)
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactRootView createRootView()
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void doFrame(long)
org.pgsqlite.SQLitePlugin$Action: org.pgsqlite.SQLitePlugin$Action valueOf(java.lang.String)
com.facebook.react.views.scroll.ScrollEventType: java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.uimanager.ReactShadowNode: int getChildCount()
com.facebook.react.internal.ChoreographerProvider: com.facebook.react.internal.ChoreographerProvider$Choreographer getChoreographer()
com.oblador.keychain.cipherStorage.CipherStorageBase: com.oblador.keychain.cipherStorage.CipherStorageBase setKeyStore(java.security.KeyStore)
com.facebook.react.runtime.ReactHostImpl: void moveToHostDestroy(com.facebook.react.bridge.ReactContext)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setHideBackButton(android.view.View,boolean)
com.facebook.react.fabric.FabricUIManagerBinding$Companion: FabricUIManagerBinding$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.facebook.react.jscexecutor.JSCExecutor: java.lang.String getName()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.facebook.react.views.text.ReactTextShadowNode: android.text.Layout measureSpannedText(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String createInvokeExceptionMessage(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void smoothScrollAndSnap(int)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink getLinkById(int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setChoreographerProvider(com.facebook.react.internal.ChoreographerProvider)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.biometric.R$attr: R$attr()
androidx.biometric.BiometricFragment: void showFingerprintErrorMessage(java.lang.CharSequence)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableNewBackgroundAndBorderDrawables()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setHideShadow(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueClearJSResponder()
androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.views.text.ReactTextUpdate$Companion: com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,int,int,int)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: com.facebook.react.ReactPackageTurboModuleManagerDelegate build(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableLayoutAnimationsOnIOS()
com.facebook.react.uimanager.UIViewOperationQueue$1: void run()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.drawable.BorderDrawable: void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.SpringAnimation$Companion: SpringAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObject(org.json.JSONObject)
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getNumJSFrames()
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme valueOf(java.lang.String)
com.facebook.react.modules.blob.BlobProvider$Companion: BlobProvider$Companion()
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)
androidx.biometric.ErrorUtils: boolean isLockoutError(int)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorage$CipherResult: CipherStorage$CipherResult(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$createReactInstanceUnwrapper$28(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.runtime.internal.bolts.Task,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.reanimated.Utils: java.lang.String simplifyStringNumbersList(java.lang.String)
com.facebook.react.ReactActivity: void onPause()
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.facebook.react.runtime.ReactHostDelegate: java.util.List getReactPackages()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackTitleVisible(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String getName()
androidx.biometric.FingerprintDialogFragment: void resetDialog()
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod: java.lang.String getType()
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration valueOf(java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void updatePath()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setRequireActivity(boolean)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.bridge.JavaOnlyArray$Companion: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer component3()
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
com.reactnativecommunity.cameraroll.CameraRollModule: void putPageInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isFinished()
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.facebook.react.uimanager.ReactZIndexedViewGroup: void updateDrawingOrder()
com.facebook.react.uimanager.ReactRoot: void runApplication()
com.facebook.react.animated.AnimatedNode: void removeChild$ReactAndroid_release(com.facebook.react.animated.AnimatedNode)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.nozbe.watermelondb.WMDatabase: void setUserVersion(int)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: StackTraceHelper$StackFrameImpl(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)
com.facebook.react.devsupport.BundleDownloader$BundleInfo: void setFilesChangedCount$ReactAndroid_release(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$getLocal$7(java.lang.String,com.nozbe.watermelondb.WMDatabaseDriver)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: int subscribeForKeyboardUpdates(com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper,boolean,boolean)
com.facebook.react.jscexecutor.JSCExecutor$Companion: JSCExecutor$Companion()
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$DataType dataType(java.lang.Object,int)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerClosed(android.view.View)
com.facebook.react.animated.NativeAnimatedModule$restoreDefaultValues$1: NativeAnimatedModule$restoreDefaultValues$1(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: InterpolatorType(java.lang.String,int)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.facebook.react.views.textinput.ReactEditText: void setContainsImages(boolean)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
com.facebook.react.interfaces.fabric.ReactSurface: java.lang.String getModuleName()
com.facebook.react.modules.image.ImageLoaderModule$getSizeWithHeaders$dataSubscriber$1: void onFailureImpl(com.facebook.datasource.DataSource)
com.facebook.react.packagerconnection.ReconnectingWebSocket: ReconnectingWebSocket(java.lang.String,com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback,com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onLowMemory()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: AnimatedPropertyType(java.lang.String,int)
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl[] values()
com.facebook.react.modules.network.RequestBodyUtil$create$1: void writeTo(okio.BufferedSink)
androidx.security.crypto.EncryptedFile: java.io.FileOutputStream openFileOutput()
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.facebook.react.animated.NativeAnimatedModule$extractAnimatedNodeOffset$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.ComputedBorderRadius ensureNoOverlap(com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,float,float)
com.facebook.react.views.safeareaview.ReactSafeAreaView: androidx.core.view.WindowInsetsCompat onAttachedToWindow$lambda$0(com.facebook.react.views.safeareaview.ReactSafeAreaView,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: void show$lambda$2$lambda$1(com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.facebook.react.uimanager.OnLayoutEvent: int getHeight$ReactAndroid_release()
com.facebook.react.views.text.TextAttributeProps: float getOpacity()
com.facebook.drawee.drawable.ForwardingDrawable: void getParentTransform(android.graphics.Matrix)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setColor(int)
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.ReactHostImpl,java.util.concurrent.Executor)
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.text.AttributedCharacterIterator formatToParts(double)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setTouchSoundDisabled(android.view.View,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache: java.lang.ThreadLocal createThreadLocalArray(int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomLeft()
com.nozbe.watermelondb.WMDatabaseBridge: void count(int,java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$TypeImpl34: int toPlatformType(int)
com.swmansion.reanimated.NodesManager: void handleEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void navigationTabChanged(android.view.View,android.view.View)
com.facebook.react.devsupport.ReleaseDevSupportManager: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.text.PreparedLayoutTextView: java.lang.Integer getSelectionColor()
com.facebook.react.uimanager.style.ComputedBorderRadius: java.lang.String toString()
com.facebook.crypto.CryptoConfig: com.facebook.crypto.CryptoConfig valueOf(java.lang.String)
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface: void setAnimating(android.view.View,boolean)
com.facebook.react.uimanager.LengthPercentage: int hashCode()
com.facebook.react.modules.dialog.DialogTitle: void onMeasure(int,int)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: boolean isBiometrySupported()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceMountingManager(int,int)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: void startAuthentication()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationRepeat(android.view.animation.Animation)
com.facebook.react.views.scroll.ReactScrollView: void scrollToPreservingMomentum(int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
androidx.fragment.app.Fragment: void performDestroyView()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopStart()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: UIViewOperationQueue$ViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.facebook.react.runtime.BridgelessReactContext: boolean hasCatalystInstance()
com.facebook.react.devsupport.BundleDownloader$Companion: BundleDownloader$Companion()
com.swmansion.reanimated.NativeProxy$1: NativeProxy$1(java.lang.ref.WeakReference)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.devsupport.BridgeDevSupportManager: BridgeDevSupportManager(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
com.reactnativecommunity.asyncstorage.AsyncStoragePackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.modules.appearance.AppearanceModule$Companion: AppearanceModule$Companion()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.facebook.react.ReactInstanceManager$3: void lambda$onPackagerStatusFetched$0(boolean)
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: void resetDelegate(android.view.View,boolean,int)
com.facebook.react.ReactNativeHost$1: ReactNativeHost$1(com.facebook.react.ReactNativeHost)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getUiMessageQueueThread()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
com.facebook.react.views.modal.ReactModalHostView: void showOrUpdate()
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.facebook.react.NativeModuleRegistryBuilder$Companion: NativeModuleRegistryBuilder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasStateWrapper: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.common.SurfaceDelegate: boolean isShowing()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManager,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useAlwaysAvailableJSErrorHandling()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,java.lang.Throwable)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: double interpolate(double,double,double,double,double,java.lang.String,java.lang.String)
com.facebook.react.fabric.LongStreamingStats: LongStreamingStats()
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_START: int toSpacingType()
com.facebook.react.bridge.CxxModuleWrapperBase$Companion: CxxModuleWrapperBase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.BaseReactPackage: BaseReactPackage()
com.facebook.react.views.textinput.ReactTextInputManager$Companion: com.facebook.react.uimanager.events.EventDispatcher access$getEventDispatcher(com.facebook.react.views.textinput.ReactTextInputManager$Companion,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.modules.network.ProgressResponseBody: long access$getTotalBytesRead$p(com.facebook.react.modules.network.ProgressResponseBody)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeChildCount()
com.facebook.react.animated.NativeAnimatedModule$updateAnimatedNodeConfig$1: NativeAnimatedModule$updateAnimatedNodeConfig$1(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.BaseReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
androidx.biometric.R$anim: R$anim()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setDeliveryMetricsExportToBigQuery$13(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.defaults.DefaultReactNativeHost: DefaultReactNativeHost(android.app.Application)
com.facebook.react.runtime.internal.bolts.Task$Companion: com.facebook.react.runtime.internal.bolts.Task cancelled()
com.facebook.react.bridge.DynamicFromMap$Companion$pool$1: DynamicFromMap$Companion$pool$1()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void setInputType(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData initHybrid()
com.facebook.imagepipeline.request.ImageRequest: void setCacheHashcode(boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: long getLong(int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopRight()
com.facebook.react.uimanager.style.LogicalEdge$VERTICAL: int toSpacingType()
com.facebook.react.ReactNativeHost: android.app.Application getApplication()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.facebook.react.uimanager.OnLayoutEvent: androidx.core.util.Pools$SynchronizedPool access$getEVENTS_POOL$cp()
com.facebook.react.views.textinput.ReactEditText: int getBorderColor(int)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$11()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.react.jstasks.HeadlessJsTaskContext: boolean retryTask(int)
com.reactnativecommunity.cameraroll.CameraRollModule: void removeListeners(double)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.oblador.keychain.cipherStorage.CipherStorageBase$Defaults: void lambda$static$0(javax.crypto.Cipher,java.security.Key,java.io.OutputStream)
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setStyleAttr(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void maybePostFromNonUI()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableBridgelessArchitecture()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.RedBoxHandler getRedBoxHandler()
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap access$getZIndexHash$cp()
com.facebook.react.devsupport.BundleDownloader$Companion: BundleDownloader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.ReactHostImpl: void addReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.views.text.internal.span.ReactBackgroundColorSpan: ReactBackgroundColorSpan(int)
com.facebook.react.ReactDelegate: com.facebook.react.ReactNativeHost getReactNativeHost()
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage copy$default(com.facebook.react.uimanager.LengthPercentage,float,com.facebook.react.uimanager.LengthPercentageType,int,java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: ReactModalHostView(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.drawee.view.GenericDraweeView: void inflateHierarchy(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.image.ScaleTypeStartInside$Companion: com.facebook.drawee.drawable.ScalingUtils$ScaleType getINSTANCE()
com.facebook.react.fabric.DevToolsReactPerfLogger$Companion: boolean isFabricCommitMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.react.fabric.DevToolsReactPerfLogger: void removeDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String getName()
com.facebook.react.views.image.ReactImageView: boolean hasMultipleSources()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: ReactHorizontalScrollContainerLegacyView(android.content.Context)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setGrouping(boolean)
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: void loadLibrary()
com.facebook.react.uimanager.PixelUtil: float dpToPx(long)
androidx.biometric.BiometricPrompt$CryptoObject: javax.crypto.Cipher getCipher()
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1: AuthenticationCallbackProvider$Api28Impl$1(androidx.biometric.AuthenticationCallbackProvider$Listener)
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: void execute()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan copy$default(com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan,android.text.TextPaint,int,java.lang.Object)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$7(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.CustomStyleSpan)
com.facebook.react.bridge.UiThreadUtil: boolean runOnUiThread(java.lang.Runnable)
com.facebook.react.modules.network.ForwardingCookieHandler: java.util.Map get(java.net.URI,java.util.Map)
com.facebook.react.views.text.ReactTextView: void onFinishTemporaryDetach()
com.facebook.react.modules.fresco.FrescoModule$Companion: com.facebook.imagepipeline.core.ImagePipelineConfig access$getDefaultConfig(com.facebook.react.modules.fresco.FrescoModule$Companion,com.facebook.react.bridge.ReactContext)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.views.scroll.ReactScrollView: void setOverflowInset(int,int,int,int)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean endBatchEdit()
com.swmansion.rnscreens.ScreenViewManager: void addView(com.swmansion.rnscreens.Screen,android.view.View,int)
com.facebook.react.uimanager.events.PointerEvent: java.lang.String getEventName()
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void progressLayoutAnimation(int,java.util.Map,boolean)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.hermes.intl.LocaleObjectICU: java.lang.String toCanonicalTagWithoutExtensions()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getMacAddress(com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer getInstance()
com.facebook.react.uimanager.style.Overflow$Companion: Overflow$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.image.ReactImageDownloadListener: void onIntermediateImageSet(java.lang.String,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getDevServerBundleURL(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.facebook.react.views.text.ReactFontManager: void addCustomFont(java.lang.String,android.graphics.Typeface)
com.facebook.react.devsupport.ReleaseDevSupportManager: android.view.View createRootView(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setBarTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: DrawerStateChangedEvent(int,int,int)
com.facebook.react.modules.blob.BlobModule$networkingUriHandler$1: com.facebook.react.bridge.WritableMap fetch(android.net.Uri)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule$connect$2: void onMessage(okhttp3.WebSocket,java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.facebook.react.ReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.swmansion.rnscreens.Screen: void getStatusBarColor$annotations()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleEmpty(boolean)
com.facebook.react.views.switchview.ReactSwitchShadowNode: ReactSwitchShadowNode()
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object getOrThrow(long,java.util.concurrent.TimeUnit)
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setSignDisplay(com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.bridge.ReadableMap getHeaders$ReactAndroid_release()
com.facebook.react.uimanager.ViewManagerRegistry: void onLowMemory()
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
androidx.biometric.BiometricManager$Injector: boolean isDeviceSecurable()
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagForTouch(float,float,android.view.ViewGroup)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.style.BoxShadow: float getOffsetY()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.uimanager.ReactRoot)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] $values()
com.facebook.react.modules.blob.FileReaderModule$Companion: FileReaderModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerTitle(int,java.lang.CharSequence)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void updatePathEffect(int)
com.google.android.gms.common.api.internal.zzb: zzb()
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: boolean isEnabled(int)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
com.facebook.react.uimanager.ReactShadowNode: float getLayoutWidth()
androidx.biometric.R$drawable: R$drawable()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation$Companion: AbstractLayoutAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String getW3CPointerType(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReloadTask$34(java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.fabric.FabricUIManager$5: int getSurfaceId()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isCameraPresentSync()
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1: AsyncStoragePackage$1(com.reactnativecommunity.asyncstorage.AsyncStoragePackage)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.facebook.react.uimanager.ViewAtIndex: ViewAtIndex(int,int)
com.facebook.react.HeadlessJsTaskService: android.os.IBinder onBind(android.content.Intent)
com.facebook.react.uimanager.JSPointerDispatcher: void incrementCoalescingKey()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String getName()
com.facebook.react.modules.vibration.VibrationModule$Companion: VibrationModule$Companion()
com.facebook.react.views.text.ReactTextView: int reactTagForTouch(float,float)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void addDevMenuOption()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.facebook.react.uimanager.events.FabricEventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostResume()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: boolean hasNext()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeightPercent(float)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void addFocusables(java.util.ArrayList,int,int)
com.facebook.react.uimanager.style.ColorEdges: int component1()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.ReactRootView: void setSurfaceConstraintsToScreenSize()
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.BorderColors: int hashCode()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableEagerRootViewAttachment()
com.facebook.react.fabric.SynchronousEvent: java.lang.String component3()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: ReactQueueConfigurationSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.DebugCorePackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: LogBoxDialogSurfaceDelegate(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.uimanager.style.BorderRadiusStyle: void setUniform(com.facebook.react.uimanager.LengthPercentage)
com.facebook.hermes.intl.IntlTextUtils: boolean isDigitAlphanum3(java.lang.CharSequence,int,int)
com.facebook.react.uimanager.style.RadialGradient: java.util.List getColorStops()
androidx.biometric.BiometricViewModel: int getFingerprintDialogPreviousState()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean useShadowNodeStateOnClone()
com.facebook.react.runtime.ReactSurfaceView: ReactSurfaceView(android.content.Context,com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: boolean isValid()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path getBorderBoxPath()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map getNativeProps(java.lang.Class,java.lang.Class)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerPosition$ReactAndroid_release(int)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$$inlined$Iterable$1: java.util.Iterator iterator()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
kotlin.properties.ObservableProperty: java.lang.String toString()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.Integer getLineNumber()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent()
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme[] values()
com.facebook.react.ReactRootView: void onAttachedToReactInstance()
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onNewIntent(android.content.Intent)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableCustomFocusSearchOnClippedElementsAndroid()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.facebook.react.ReactInstanceManager: void moveToBeforeResumeLifecycleState()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: ReactTextInputSubmitEditingEvent(int,int,java.lang.String)
com.facebook.react.bridge.ReactIgnorableMountingException$Companion: ReactIgnorableMountingException$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.BiometricFragment: void onStart()
com.facebook.react.modules.network.ProgressiveStringDecoder$Companion: ProgressiveStringDecoder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxHeight(float)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.views.text.TextAttributeProps: void setTextTransform(java.lang.String)
com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder: BindingsInstallerHolder(com.facebook.jni.HybridData)
com.facebook.react.views.image.ReactImageView: void updateCallerContext(java.lang.Object)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setDefaultHardwareBackBtnHandler(com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getSpringDamping(com.facebook.react.bridge.ReadableMap)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule _init_$lambda$1(com.facebook.react.internal.turbomodule.core.TurboModuleManager,java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.JSTimerExecutor createJSTimerExecutor()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.learnium.RNDeviceInfo.RNDeviceModule: void getHost(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
com.rnbiometrics.ReactNativeBiometrics: androidx.biometric.BiometricPrompt$PromptInfo getPromptInfo(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.facebook.react.views.view.ReactViewGroup: void recycleView()
com.facebook.react.views.textinput.ReactEditText: void setSelection(int,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.facebook.react.CoreModulesPackage: java.util.Map lambda$fallbackForMissingClass$0(java.util.Map)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.modules.devtoolsruntimesettings.Settings: boolean getShouldReloadAndProfile()
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void emitOrientationChanged(int)
com.facebook.react.views.modal.ReactModalHostView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.drawable.BorderDrawable: void drawRectangularBorders(android.graphics.Canvas)
com.facebook.react.devsupport.DevServerHelper: java.lang.String access$getPackageName$p(com.facebook.react.devsupport.DevServerHelper)
com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState: com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState[] values()
com.facebook.react.views.text.PreparedLayoutTextView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderRadius(android.view.View,com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.facebook.react.bridge.ReactContext: void destroy()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidResolutionForPlayServices()
com.oblador.keychain.KeychainModule: void setGenericPassword(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: CompositeBackgroundDrawable$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setHotModuleReplacementEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: java.util.Map getCommandsMap()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void cancelAnimationForTag(int)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View focusSearch(android.view.View,int)
androidx.security.crypto.EncryptedSharedPreferences: boolean getBoolean(java.lang.String,boolean)
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setTrackColorForTrue(android.view.View,java.lang.Integer)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] $values()
com.facebook.react.animated.NativeAnimatedModule$extractAnimatedNodeOffset$1: NativeAnimatedModule$extractAnimatedNodeOffset$1(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager createReactInstanceManager()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String toString()
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer(com.facebook.react.internal.ChoreographerProvider,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.facebook.react.uimanager.style.CornerRadii: float getVertical()
androidx.biometric.CancellationSignalProvider: android.os.CancellationSignal getBiometricCancellationSignal()
com.facebook.react.common.SurfaceDelegateFactory: com.facebook.react.common.SurfaceDelegate createSurfaceDelegate(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object,java.lang.String)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendGrayscaleModeChangeEvent()
com.facebook.react.bridge.DimensionPropConverter: DimensionPropConverter()
com.facebook.react.ReactInstanceManager$4: ReactInstanceManager$4(com.facebook.react.ReactInstanceManager,android.view.View)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] values()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeScriptSubtag()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getSourceMapUrl()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNode: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode)
androidx.biometric.BiometricManager$Injector: boolean isFingerprintHardwarePresent()
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
com.facebook.react.ReactInstanceManager$4: void onViewAttachedToWindow(android.view.View)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.devsupport.ReactInstanceDevHelper: void reload(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: MessageQueueThreadImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.LocaleObjectICU: com.facebook.hermes.intl.ILocaleObject createFromULocale(android.icu.util.ULocale)
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: int getScrollAnimationDuration()
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.facebook.react.module.annotations.ReactModule: boolean isCxxModule()
com.facebook.react.runtime.internal.bolts.Task$Companion: com.facebook.react.runtime.internal.bolts.TaskCompletionSource create$ReactAndroid_release()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion: FrescoBasedReactTextInlineImageViewManager$Companion()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.facebook.react.common.ClassFinder: java.lang.Class findClass(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.reactnativecommunity.cameraroll.CameraRollModule: void getAlbums(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.util.Map getConstants()
com.facebook.react.uimanager.ReactShadowNode: java.lang.Integer getWidthMeasureSpec()
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.facebook.imagepipeline.request.ImageRequest: java.lang.String toString()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: MaintainVisibleScrollPositionHelper(android.view.ViewGroup,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomLeftRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
com.facebook.react.ReactRootView: int getRootViewTag()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void deleteToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.annotations.ReactPropGroup: float defaultFloat()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setKeyScheme(androidx.security.crypto.MasterKey$KeyScheme)
androidx.biometric.BiometricFragment$3: void onChanged(java.lang.CharSequence)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.uimanager.ViewManagersPropertyCache$1: java.lang.Object initialValue()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.reactnativecommunity.netinfo.NetInfoModule: void removeListeners(java.lang.Integer)
com.facebook.react.views.text.internal.span.ShadowStyleSpan: int getColor()
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String getName()
androidx.biometric.BiometricPrompt: androidx.biometric.BiometricFragment findBiometricFragment(androidx.fragment.app.FragmentManager)
com.swmansion.rnscreens.stack.views.ScreensCoordinatorLayout: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineOffset(float)
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: ViewManagersPropertyCache$FloatPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,float)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean)
com.facebook.react.runtime.ReactSurfaceImpl: boolean isAttached$ReactAndroid_release()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.facebook.react.R$layout: R$layout()
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getDownloadedJSBundleFile()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewRecyclingForText()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.facebook.react.uimanager.ReactShadowNode: java.lang.String getViewClass()
com.facebook.react.uimanager.UIImplementation: void updateViewHierarchy()
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.swmansion.reanimated.NativeProxy: void invalidateCpp()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android: boolean enableFabricRenderer()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: boolean isFatal()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.os.Parcelable onSaveInstanceState()
com.swmansion.rnscreens.ScreenFooter: int getReactHeight()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutEnd()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: boolean isRunningOnGenymotion()
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithExceptionMap(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableBridgelessArchitecture()
com.facebook.react.uimanager.style.ColorEdges: ColorEdges(int,int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: ReactHorizontalScrollView$1(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JSBundleLoader getJsBundleLoader()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void recreateFlingAnimation(int,int)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion: java.util.List access$getMethodDescriptorsFromModule(com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion,com.facebook.react.bridge.NativeModule)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.devsupport.DevSupportManagerBase: void reload()
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: void setCurrent(int)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
com.facebook.react.devsupport.DevSupportManagerBase: void hideRedboxDialog()
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
com.facebook.react.MemoryPressureRouter: void addMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void onClick(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.runtime.BridgelessAtomicRef$Provider: java.lang.Object get()
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: long getLong(int)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.fragment.app.Fragment: boolean isRemoving()
com.facebook.react.uimanager.JSTouchDispatcher: void dispatchCancelEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion: RedBoxDialogSurfaceDelegate$Companion()
com.facebook.react.views.textinput.ReactEditText: void access$updateCachedSpannable(com.facebook.react.views.textinput.ReactEditText)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.ReactNativeHost: boolean getLazyViewManagersEnabled()
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.ReactShadowNode: boolean shouldNotifyOnLayout()
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: void onAuthenticationFailed()
com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManagerBuilder builder()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: void set_url$ReactAndroid_release(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void screenDidLayout(android.view.View)
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getChildCount()
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMaxSize(int)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasSystemFeatureSync(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.learnium.RNDeviceInfo.RNDeviceModule: double getLastUpdateTimeSync()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getFriendlyDeviceName()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
androidx.biometric.BiometricErrorData: boolean equals(java.lang.Object)
com.facebook.react.devsupport.DefaultDevSupportManagerFactory$Companion: DefaultDevSupportManagerFactory$Companion()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: boolean equals(java.lang.Object)
com.swmansion.reanimated.NativeMethodsHelper: NativeMethodsHelper()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setSurfaceDelegateFactory(com.facebook.react.common.SurfaceDelegateFactory)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMargin(int,float)
com.facebook.react.views.text.TextTransform$Companion: TextTransform$Companion()
com.facebook.react.animated.MultiplicationAnimatedNode: void update$ReactAndroid_release()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.facebook.react.uimanager.style.BorderColors: java.lang.String toString-impl(java.lang.Integer[])
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.runtime.BridgelessCatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.View,int)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.learnium.RNDeviceInfo.RNDeviceModule: float getFontScaleSync()
com.facebook.react.devsupport.DefaultDevSupportManagerFactory: DefaultDevSupportManagerFactory()
com.facebook.react.defaults.DefaultReactHostDelegate: DefaultReactHostDelegate(java.lang.String,com.facebook.react.bridge.JSBundleLoader,java.util.List,com.facebook.react.runtime.JSRuntimeFactory,com.facebook.react.runtime.BindingsInstaller,kotlin.jvm.functions.Function1,com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: boolean getRemoveClippedSubviews()
com.facebook.react.devsupport.DevServerHelper$closeInspectorConnection$1: java.lang.Void doInBackground(java.lang.Void[])
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: void unsubscribeFromKeyboardUpdates(int)
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: void execute()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: int read(byte[])
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.facebook.react.modules.blob.BlobProvider: BlobProvider()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isAirplaneModeSync()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setGrouping(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNewProps(java.util.Map,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.uimanager.ViewManager,java.lang.Integer,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager getReanimatedNativeHierarchyManager()
androidx.fragment.app.Fragment: void performDestroy()
com.facebook.react.animated.NativeAnimatedNodesManager: void stopListeningToAnimatedNodeValue(int)
androidx.biometric.BiometricViewModel$DefaultExecutor: void execute(java.lang.Runnable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodes$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.swmansion.rnscreens.ScreensModule: void invalidate()
com.facebook.react.devsupport.ReleaseDevSupportManager: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.swmansion.reanimated.NodesManager: void configureProps(java.util.Set,java.util.Set)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$Companion: RedBoxContentView$StackAdapter$Companion()
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.oblador.keychain.DeviceAvailability: boolean isIrisAuthAvailable(android.content.Context)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: IPlatformDateTimeFormatter$Hour(java.lang.String,int)
androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onProgressChange(int,int)
com.facebook.react.animated.TransformAnimatedNode: TransformAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.oblador.keychain.PrefsStorage: com.oblador.keychain.PrefsStorage$ResultSet getEncryptedEntry(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.facebook.react.views.textinput.ReactTextScrollWatcher: ReactTextScrollWatcher(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.DynamicFromArray: void access$setArray$p(com.facebook.react.bridge.DynamicFromArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.BundleDownloader: void processBundleResult(java.lang.String,int,okhttp3.Headers,okio.BufferedSource,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String getDefaultCalendarName(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.nozbe.watermelondb.WMDatabaseBridge: java.util.List getQueue(int)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener: void onScroll(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate2D(double[],double,double)
com.facebook.react.runtime.ReactHostImpl$2: java.lang.Object then(com.facebook.react.runtime.internal.bolts.Task)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.ThemedReactContext: boolean hasCatalystInstance()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType$Companion: RadialGradient$GradientSize$KeywordType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.common.mapbuffer.MapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$Entry entryAt(int)
com.reactnativecommunity.cameraroll.CameraRollModule: void putEdges(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,java.util.Set)
com.facebook.react.views.text.TextAttributeProps: int getJustificationMode(com.facebook.react.uimanager.ReactStylesDiffMap,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.util.RNLog: void w(com.facebook.react.bridge.ReactContext,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: boolean isYogaLeafNode()
com.facebook.react.views.scroll.ReactScrollView: void setBorderColor(int,java.lang.Integer)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: void copyFile(java.io.FileInputStream,java.io.FileOutputStream)
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleX(double[],double)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: boolean isValid$ReactAndroid_release()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.ComputedBorderRadius copy$default(com.facebook.react.uimanager.style.ComputedBorderRadius,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,int,java.lang.Object)
com.facebook.react.ReactInstanceManager$3: void onPackagerStatusFetched(boolean)
com.facebook.react.views.textinput.ReactTextInputShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.hermes.intl.NumberFormat: java.lang.String normalizeCurrencyCode(java.lang.String)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setNavigationBarTranslucent(android.view.View,boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: android.content.Context getApplicationContext()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult: CipherStorage$DecryptionResult(java.lang.String,java.lang.String)
androidx.biometric.BiometricFragment: void onActivityResult(int,int,android.content.Intent)
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: NativeCameraRollPermissionModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.CookieJarContainer: void removeCookieJar()
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask$Companion: org.json.JSONObject stackFrameToJson(com.facebook.react.devsupport.interfaces.StackFrame)
com.swmansion.reanimated.CopiedEvent: int getTargetTag()
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: java.lang.Object next()
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.views.text.ReactTextView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.facebook.imagepipeline.request.ImageRequest: int hashCode()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.facebook.react.devsupport.DevInternalSettings: boolean isAnimationFpsDebugEnabled()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,int,java.lang.Throwable)
com.facebook.react.views.text.PreparedLayoutTextView: int selectedSpanIndex()
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: java.lang.Float getBorderWidth(int)
com.facebook.react.bridge.DynamicNative: java.lang.String asString()
com.learnium.RNDeviceInfo.RNDeviceModule: void getHardware(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void lambda$manageChildren$0(java.util.ArrayList,android.view.View,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onCatalystInstanceDestroyed()
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: ReactOkHttpNetworkFetcher(okhttp3.OkHttpClient)
com.facebook.react.views.textinput.ReactEditText: void setSelectTextOnFocus(boolean)
com.facebook.react.uimanager.LengthPercentageType: LengthPercentageType(java.lang.String,int)
com.facebook.react.bridge.UiThreadUtil: boolean runOnUiThread(java.lang.Runnable,long)
com.facebook.react.modules.network.ResponseUtil: void onIncrementalDataReceived(com.facebook.react.bridge.ReactApplicationContext,int,java.lang.String,long,long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void handleInterceptedTouchEvent(android.view.MotionEvent)
com.facebook.react.ReactDelegate: void setReactSurface(com.facebook.react.interfaces.fabric.ReactSurface)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion: ReactDrawerLayoutManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollView: int getItemStartOffset(int,int,int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.swmansion.reanimated.NativeProxy$1: boolean hasAnimation(int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.jstasks.HeadlessJsTaskContext: void removeTimeout(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setGestureState(int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getPreferredContentInsetEnd()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
androidx.biometric.BiometricFragment: void onCreate(android.os.Bundle)
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
com.facebook.react.common.assets.ReactFontManager$Companion: com.facebook.react.common.assets.ReactFontManager getInstance()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightFitContentJNI(long)
com.facebook.react.DebugCorePackage: java.util.Map getReactModuleInfoProvider$lambda$2()
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.TextAttributeProps: boolean isUnderlineTextDecorationSet()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion: CxxInspectorPackagerConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsPing(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: void run()
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: void setItem(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.runtime.ReactSurfaceImpl$Companion: boolean doRTLSwap(android.content.Context)
com.facebook.react.views.text.TextAttributeProps: void setBackgroundColor(java.lang.Integer)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean cxxNativeAnimatedEnabled()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.OutlineDrawable getOutline()
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] $values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setHorizontal(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: BaseReactPackage$getNativeModuleIterator$1$1(java.util.Iterator,com.facebook.react.BaseReactPackage,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter: void configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,java.lang.String,com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher,com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName,com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle,java.lang.Object,com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle,java.lang.Object)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback access$getCurrentFrameCallback$p(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.facebook.react.HeadlessJsTaskService: com.facebook.react.bridge.ReactContext getReactContext()
com.facebook.react.views.text.TextLayoutManager: void adjustSpannableFontToFit(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,double,int,boolean,int,int,android.text.Layout$Alignment,int,android.text.TextPaint)
com.facebook.react.devsupport.PackagerStatusCheck: PackagerStatusCheck()
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactInstance: void destroy()
com.facebook.react.devsupport.DevSupportManagerBase: android.content.Context _init_$lambda$3(com.facebook.react.devsupport.DevSupportManagerBase)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.hermes.intl.JSObjects: boolean getJavaBoolean(java.lang.Object)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object)
com.oblador.keychain.KeychainModule: com.oblador.keychain.SecurityLevel getSecurityLevel(boolean)
com.facebook.react.modules.debug.SourceCodeModule$Companion: SourceCodeModule$Companion()
com.facebook.react.uimanager.internal.LegacyArchitectureShadowNodeLogger: void assertUnsupportedViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.Class,java.lang.String)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.ThemedReactContext access$getReactContext(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean animatedShouldSignalBatch()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$1()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.hermes.intl.LocaleResolver: java.util.HashMap resolveLocale(java.util.List,java.lang.Object,java.util.List)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setEnabled(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
com.facebook.hermes.intl.IntlTextUtils: boolean isTranformedExtensionTKey(java.lang.CharSequence,int,int)
com.facebook.react.runtime.BridgelessReactContext: void handleException(java.lang.Exception)
androidx.fragment.app.Fragment: android.view.View requireView()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.text.PreparedLayoutTextView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: byte[] encryptString(java.security.Key,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: UIViewOperationQueue$RemoveRootViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,int)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.swmansion.worklets.WorkletsModule: boolean installTurboModule(java.lang.String)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.jaudifinance.MainApplication: MainApplication()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation$Companion: LayoutDeleteAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.network.CustomClientBuilder: void apply(okhttp3.OkHttpClient$Builder)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateShadowNodeProp(com.facebook.react.uimanager.ReactShadowNode,java.lang.Object)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.react.uimanager.style.LogicalEdge$ALL: LogicalEdge$ALL(java.lang.String,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: int getRootViewNum()
com.facebook.react.uimanager.ReactShadowNode: void dispose()
com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager: void showPausedInDebuggerOverlay(java.lang.String,com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener)
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager get(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
com.BV.LinearGradient.LinearGradientView: void setAngle(float)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.facebook.react.views.image.ReactImageDownloadListener$Companion: ReactImageDownloadListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean fuseboxNetworkInspectionEnabled()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.swmansion.reanimated.sensor.ReanimatedSensorType: ReanimatedSensorType(java.lang.String,int,int)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: void execute()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setUnits(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.common.mapbuffer.WritableMapBuffer: boolean getBoolean(int)
com.facebook.react.views.scroll.VelocityHelper: void calculateVelocity(android.view.MotionEvent)
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType valueOf(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: void dangerouslyReset()
com.facebook.react.views.scroll.ReactScrollView: void onScrollChanged(int,int,int,int)
com.facebook.react.views.text.PreparedLayoutTextView: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String getEventName()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer getMapBuffer(int)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setMinIntergerDigits(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.JSEngineResolutionAlgorithm: kotlin.enums.EnumEntries getEntries()
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableNewBackgroundAndBorderDrawables()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean isPostponed()
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType access$getScaleType$p(com.facebook.react.views.image.ReactImageView)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: java.lang.String getItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String)
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.uimanager.MatrixMathHelper: double[] transpose(double[])
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.PackagerConnectionSettings access$getPackagerConnectionSettings$p(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.modules.core.JavaTimerManager: int timers$lambda$0(com.facebook.react.modules.core.JavaTimerManager$Timer,com.facebook.react.modules.core.JavaTimerManager$Timer)
com.facebook.react.views.textinput.ReactEditText: boolean onTextContextMenuItem(int)
com.facebook.react.fabric.FabricUIManager$2: java.lang.String toString()
com.facebook.react.uimanager.style.RadialGradient$Position: RadialGradient$Position(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.DisplayMetricsHolder: DisplayMetricsHolder()
com.facebook.react.views.view.ReactViewManager: void setFocusable$lambda$2(com.facebook.react.views.view.ReactViewGroup,android.view.View)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTL(android.content.Context)
io.invertase.firebase.common.ReactNativeFirebaseModule: void initialize()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingLeft()
com.facebook.react.uimanager.ReactShadowNode: void setColumnGapPercent(float)
com.facebook.react.views.image.ReactImageView: void setResizeMultiplier(float)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableAccessibilityOrder()
com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager: void hidePausedInDebuggerOverlay()
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int,int)
com.facebook.soloader.SysUtil: java.lang.String getClassLoaderLdLoadLibrary()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ViewManagerOnDemandReactPackage: java.util.Collection getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.PreparedLayoutTextView: void initView()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.facebook.react.views.text.TextTransform: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: CipherStorageFacebookConceal(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: int size()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: PlatformDateTimeFormatterICU()
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.util.Iterator iterator()
com.facebook.hermes.intl.OptionHelpers: java.lang.Object GetOption(java.lang.Object,java.lang.String,com.facebook.hermes.intl.OptionHelpers$OptionType,java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
com.facebook.hermes.intl.DateTimeFormat: java.lang.String normalizeTimeZone(java.lang.String)
com.facebook.react.runtime.hermes.HermesInstance$Companion: com.facebook.jni.HybridData initHybrid(boolean)
com.facebook.react.CoreModulesPackage$1: java.util.Collection getViewManagerNames()
com.facebook.react.packagerconnection.ReconnectingWebSocket: void sendMessage(okio.ByteString)
com.facebook.react.common.mapbuffer.MapBuffer$Entry: com.facebook.react.common.mapbuffer.MapBuffer$DataType getType()
com.facebook.react.common.ShakeDetector: void start(android.hardware.SensorManager)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean beginBatchEdit()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenViewManager: void setSheetInitialDetent(android.view.View,int)
com.facebook.react.views.text.TextAttributeProps: int getTextBreakStrategy(java.lang.String)
com.facebook.react.views.view.ColorUtil: int normalize(double,double,double,double)
com.facebook.hermes.intl.PlatformCollatorAndroid: int compare(java.lang.String,java.lang.String)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderColor(int,java.lang.Integer)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void configureAuthDomain(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ThemedReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactDelegate getReactDelegate()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: ReactJsExceptionHandler$ProcessedErrorStackFrameImpl(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.security.Key generateKey(android.security.keystore.KeyGenParameterSpec)
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String getName()
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent obtain(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.View,int)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: double[] access$fromDoubleArray(com.facebook.react.animated.InterpolationAnimatedNode$Companion,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactStylesDiffMap: int getInt(java.lang.String,int)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.facebook.react.devsupport.interfaces.DevSupportManager: void hidePausedInDebuggerOverlay()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useAlwaysAvailableJSErrorHandling()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler getDefaultBackButtonHandler()
com.facebook.react.uimanager.style.RadialGradient$GradientSize: RadialGradient$GradientSize(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.common.assets.ReactFontManager$AssetFontFamily: void setTypefaceForStyle(int,android.graphics.Typeface)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableMainQueueModulesOnIOS()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libuimanagerjni_so()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableIOSViewClipToPaddingBox()
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.View)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean arrowScroll(int)
androidx.biometric.CryptoObjectUtils$Api28Impl: javax.crypto.Mac getMac(android.hardware.biometrics.BiometricPrompt$CryptoObject)
com.facebook.react.util.JSStackTrace: java.lang.String parseFileId(com.facebook.react.bridge.ReadableMap)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.common.mapbuffer.MapBuffer$Entry: java.lang.String getStringValue()
com.facebook.react.uimanager.style.RadialGradient: com.facebook.react.uimanager.style.RadialGradient$Position getPosition()
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollView: void fling(int)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String access$getTAG$cp()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void executeWithExceptions()
com.reactnativecommunity.cameraroll.CameraRollModule: CameraRollModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.textinput.ReactTextInputManager$Companion: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.ReactHost: void onNewIntent(android.content.Intent)
com.facebook.react.uimanager.style.LogicalEdge$BLOCK: LogicalEdge$BLOCK(java.lang.String,int)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didDispatchMountItems()
androidx.appcompat.widget.AppCompatTextView: int[] access$301(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.animated.PropsAnimatedNode: PropsAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getMask(com.facebook.react.bridge.ReadableMap)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.facebook.react.fabric.FabricUIManager$1: void executeItems(java.util.Queue)
com.facebook.react.bridge.NativeModule: void initialize()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(android.view.View,float)
com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap)
com.facebook.react.runtime.BridgelessCatalystInstance: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.nozbe.watermelondb.SchemaNeededError: SchemaNeededError()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] $values()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getParent()
com.facebook.react.uimanager.ViewAtIndex: boolean equals(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.views.view.ReactViewGroup getContentView()
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getTitle()
com.oblador.keychain.cipherStorage.CipherStorage: com.oblador.keychain.SecurityLevel securityLevel()
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.BV.LinearGradient.LinearGradientView: void setAngleCenter(com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.BridgelessReactStateTracker: BridgelessReactStateTracker(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.facebook.react.animated.ObjectAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageOldSync()
com.facebook.react.views.text.ReactVirtualTextShadowNode: boolean isVirtual()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl copy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.runtime.internal.bolts.Task$Companion: void access$completeImmediately(com.facebook.react.runtime.internal.bolts.Task$Companion,com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task,java.util.concurrent.Executor)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.modules.blob.BlobProvider: java.lang.String getType(android.net.Uri)
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.facebook.react.bridge.interop.InteropModuleRegistry$Companion: InteropModuleRegistry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: MessageQueueThreadImpl$Companion()
androidx.biometric.DeviceUtils: boolean shouldDelayShowingPrompt(android.content.Context,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useFabricInterop()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.facebook.react.uimanager.UIConstantsProviderBinding: void install(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.uimanager.UIConstantsProviderBinding$DefaultEventTypesProvider,com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsForViewManagerProvider,com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsProvider)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.oblador.keychain.cipherStorage.CipherStorageBase: byte[] encryptString(java.security.Key,java.lang.String,com.oblador.keychain.cipherStorage.CipherStorageBase$EncryptStringHandler)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: double[] fromDoubleArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setElementInspectorEnabled(boolean)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void stop()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)
io.invertase.firebase.common.ReactNativeFirebaseModule: com.facebook.react.bridge.ReactContext getContext()
com.learnium.RNDeviceInfo.RNDeviceModule: java.util.Map getConstants()
com.facebook.react.uimanager.UIImplementation: void measure(int,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setCppVersion(java.lang.String)
com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.drawer.ReactDrawerLayout: ReactDrawerLayout(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.devsupport.IInspectorPackagerConnection: void closeQuietly()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void start()
com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.ReactActivityDelegate: android.os.Bundle composeLaunchOptions()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.facebook.react.views.textinput.ReactTextInputBlurEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.IPlatformCollator setIgnorePunctuation(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$animationScaleObserver$1: AccessibilityInfoModule$animationScaleObserver$1(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,android.os.Handler)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void startFlingAnimator(int,int)
com.facebook.react.runtime.JSRuntimeFactory$Companion: JSRuntimeFactory$Companion()
com.facebook.react.uimanager.ReactShadowNode: void setAlignContent(com.facebook.yoga.YogaAlign)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable getFeedbackUnderlay()
com.facebook.react.ReactNativeHost: boolean getShouldRequireActivity()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: void setScrollEventThrottle(int)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setInitialLifecycleState(com.facebook.react.common.LifecycleState)
com.facebook.react.uimanager.style.RadialGradient$Shape$Companion: com.facebook.react.uimanager.style.RadialGradient$Shape fromString(java.lang.String)
com.facebook.react.ReactInstanceManager: void onHostDestroy(android.app.Activity)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setLocalData(java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: java.lang.String toString()
com.facebook.react.uimanager.ReactShadowNode: int getRootTag()
com.facebook.hermes.intl.LocaleMatcher: com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult lookupMatch(java.lang.String[],java.lang.String[])
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.core.DownsampleMode getDownsampleOverride()
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: void doFrame(long)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.animated.ValueAnimatedNode: double getValue()
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher$ReactAndroid_release(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.util.RNLog: void e(com.facebook.react.bridge.ReactContext,java.lang.String)
com.facebook.react.interfaces.TaskInterface: boolean isFaulted()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android(boolean,boolean,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes[] values()
com.facebook.react.uimanager.IllegalViewOperationException: IllegalViewOperationException(java.lang.String,android.view.View,java.lang.Throwable)
com.facebook.react.util.JSStackTrace: java.lang.String format(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHeaderTranslucent(boolean)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.View)
com.facebook.react.uimanager.ReactShadowNode: void setMarginPercent(int,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String getHierarchyInfo()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String obtainProp(int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.common.time.MonotonicClock: long now()
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void showPendingAlert()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: android.security.keystore.KeyInfo getKeyInfo(java.security.Key)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getKeyOffsetForBucketIndex(int)
com.facebook.react.runtime.JSCInstance$Companion: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.runtime.JSCInstance$Companion)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useRawPropsJsiValue()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.appcompat.widget.SwitchCompat: void drawableHotspotChanged(float,float)
com.facebook.react.bridge.BridgeReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.facebook.react.animated.ColorAnimatedNode: ColorAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructSetChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1$doInBackground$onPackagerConnectedCallback$1: DevServerHelper$openPackagerConnection$1$doInBackground$onPackagerConnectedCallback$1(com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[],kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextAttribute(android.content.Context,int)
com.facebook.react.jstasks.HeadlessJsTaskContext: void finishTask$lambda$4(com.facebook.react.jstasks.HeadlessJsTaskContext,int)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult getResult()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.CoreModulesPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()
com.facebook.react.views.text.ReactTextView: void setFontSize(float)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: boolean useTurboModuleInterop()
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: void execute()
com.facebook.react.uimanager.ReactCompoundViewGroup: boolean interceptsTouchEvent(float,float)
androidx.biometric.FingerprintDialogFragment$3: FingerprintDialogFragment$3(androidx.biometric.FingerprintDialogFragment)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String lambda$getToken$2(com.google.firebase.messaging.FirebaseMessaging)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetGrabberVisible(android.view.View,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: IPlatformDateTimeFormatter$WeekDay(java.lang.String,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void calculateAnimation(int,int,int,int)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.react.devsupport.DevSupportManagerBase: void hideDevLoadingView()
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.animated.InterpolationAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.views.view.ReactViewGroup: void resetPointerEvents()
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void updateProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void disableCleaningForViewTag(int)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.nozbe.watermelondb.WMDatabase: android.database.Cursor rawQuery(java.lang.String)
com.facebook.react.util.RNLog: java.lang.String levelToString(int)
com.facebook.react.packagerconnection.FileIoHandler$3: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.oblador.keychain.DeviceAvailability: boolean isFingerprintAuthAvailable(android.content.Context)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopStart(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isPartiallyScrolledInView(android.view.View)
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: int getEnd()
androidx.biometric.BiometricFragment$PromptExecutor: BiometricFragment$PromptExecutor()
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1: DevServerHelper$openPackagerConnection$1(com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener,java.lang.String,com.facebook.react.devsupport.DevServerHelper)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$0()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: IPlatformNumberFormatter$Style(java.lang.String,int)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.facebook.react.animated.NativeAnimatedNodesManager: boolean hasActiveAnimations()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.facebook.react.runtime.ReactHostImpl: void lambda$startSurface$1(java.lang.String,com.facebook.react.runtime.ReactSurfaceImpl,com.facebook.react.runtime.ReactInstance)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.Screen: void setFragmentWrapper(com.swmansion.rnscreens.ScreenFragmentWrapper)
com.facebook.react.uimanager.style.BoxShadow$Companion: BoxShadow$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.security.crypto.MasterKey: int getDefaultAuthenticationValidityDurationSeconds()
com.facebook.react.uimanager.ReactShadowNode: float getFlex()
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.switchview.ReactSwitch: void setThumbColor(java.lang.Integer)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEventSynchronously(java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableFontScaleChangesUpdatingLayout()
com.swmansion.reanimated.MapUtils: int getInt(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactTextView: void recycleView()
com.facebook.react.uimanager.style.LogicalEdge$HORIZONTAL: LogicalEdge$HORIZONTAL(java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: CustomLetterSpacingSpan(float)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PathEffect getPathEffect(com.facebook.react.uimanager.style.BorderStyle,float)
com.facebook.react.views.scroll.ReactScrollViewHelper: int getNextFlingStartValue(android.view.ViewGroup,int,int,int)
com.facebook.react.views.textinput.ReactTextSelectionWatcher: void onSelectionChanged(int,int)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getBridgelessEnabled()
com.facebook.react.bridge.DynamicFromMap: java.lang.Object accessMapSafely(kotlin.jvm.functions.Function2)
com.facebook.datasource.BaseDataSubscriber: void onNewResult(com.facebook.datasource.DataSource)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.nozbe.watermelondb.WMDatabaseDriver: void removeFromCache(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.modules.network.ProgressRequestBody$outputStreamSink$1: void sendProgressUpdate()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View)
com.facebook.react.ReactRootView: void requestDisallowInterceptTouchEvent(boolean)
com.facebook.react.ReactDelegate: void onHostResume()
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.facebook.react.uimanager.events.EventDispatcherImpl: EventDispatcherImpl(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.events.TouchEventType$Companion: TouchEventType$Companion()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: ReactTextInputKeyPressEvent(int,int,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.ReactPackageHelper: ReactPackageHelper()
com.facebook.react.ReactRootView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
io.invertase.firebase.common.ReactNativeFirebaseModule: android.app.Activity getActivity()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void openDebugger()
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.views.text.PreparedLayoutTextView$Companion: boolean isConfirmKey(int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int getModuleId()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: IPlatformNumberFormatter$Notation(java.lang.String,int)
com.facebook.react.uimanager.style.BorderInsets: BorderInsets()
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
okhttp3.RequestBody: boolean isDuplex()
com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: void setBatchNumber(long)
com.swmansion.rnscreens.SearchBarManager: void setHideNavigationBar(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] $values()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableIOSViewClipToPaddingBox()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.facebook.react.views.text.internal.span.ShadowStyleSpan: void updateDrawState(android.text.TextPaint)
androidx.biometric.R$id: R$id()
com.swmansion.rnscreens.NativeScreensModuleSpec: java.lang.String getName()
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setOn(android.view.View,boolean)
okhttp3.ResponseBody: okio.ByteString byteString()
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: java.lang.String getSkeleonSymbol()
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationCancel(android.animation.Animator)
com.facebook.hermes.intl.LocaleObjectAndroid: java.lang.Object getLocale()
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)
com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader: void onError(java.lang.String,java.lang.Throwable)
com.facebook.react.views.image.ReactImageDownloadListener$Companion: ReactImageDownloadListener$Companion()
androidx.fragment.app.Fragment: int hashCode()
com.facebook.yoga.YogaNative: void jni_YGNodeFinalizeJNI(long)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setRowGap(float)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateLayout(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.util.ReactFindViewUtil: void removeViewsListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
com.facebook.react.ReactHost: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
com.facebook.react.views.textinput.ReactTextInputTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.uimanager.ViewManagerRegistry: void onTrimMemory(int)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int)
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String getName()
com.BV.LinearGradient.LinearGradientManager: java.lang.String getName()
com.facebook.react.uimanager.ViewGroupManager$Companion: void setViewZIndex(android.view.View,int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.nozbe.watermelondb.WMDatabaseBridge: void setUpWithSchema(java.lang.Integer,java.lang.String,java.lang.String,int,boolean,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported32BitAbisSync()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutNewView(android.view.View)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setTextColor(android.view.View,java.lang.Integer)
androidx.fragment.app.Fragment: void restoreChildFragmentState()
com.facebook.react.ReactFragment: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: com.facebook.crypto.Entity createUsernameEntity(java.lang.String)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.facebook.react.runtime.internal.bolts.Task$Companion: com.facebook.react.runtime.internal.bolts.Task forResult(java.lang.Object)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.oblador.keychain.cipherStorage.CipherStorageBase: com.oblador.keychain.SecurityLevel getSecurityLevel(java.security.Key)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableSynchronousStateUpdates()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedSplitBundleFromNetworkLoader$1: JSBundleLoader$Companion$createCachedSplitBundleFromNetworkLoader$1(java.lang.String,java.lang.String)
com.facebook.react.LazyReactPackage: LazyReactPackage()
com.facebook.react.uimanager.events.EventEmitterImpl: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.PointerEvents$Companion: boolean canBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.facebook.react.devsupport.DevServerHelper: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
com.facebook.drawee.drawable.ForwardingDrawable: void setFilterBitmap(boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setEndEnd(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.text.TextAttributes: void setLetterSpacing(float)
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthPercent(float)
com.facebook.react.ReactHost: kotlin.Unit destroy$lambda$0(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JavaOnlyArray: void pushLong(long)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.facebook.react.runtime.BindingsInstaller: BindingsInstaller(com.facebook.jni.HybridData)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: IPlatformNumberFormatter$CurrencySign(java.lang.String,int)
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEventType getTouchEventType()
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.swiperefresh.RefreshEvent: RefreshEvent(int,int)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger: void assertLegacyArchitecture$default(java.lang.String,com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel,int,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.views.debuggingoverlay.DebuggingOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.ReactInstanceManager: void invokeDefaultOnBackPressed()
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: ReactSoftExceptionLogger$Categories()
com.facebook.react.animated.NativeAnimatedModule: void getUiManagerType$annotations()
com.facebook.react.ReactFragment: void onCreate(android.os.Bundle)
com.nozbe.watermelondb.WMDatabaseBridge: void lambda$withDriver$8(int,com.facebook.react.bridge.Promise,com.nozbe.watermelondb.WMDatabaseBridge$ParamFunction,java.lang.String)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.ReactActivityDelegate: void lambda$onRequestPermissionsResult$1(int,java.lang.String[],int[],java.lang.Object[])
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: java.lang.String getEncryptionTransformation()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void setAnimatedProperty(com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$getReactChoreographer$p(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.IPlatformCollator setSensitivity(com.facebook.hermes.intl.IPlatformCollator$Sensitivity)
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: java.lang.String getName()
com.facebook.react.views.drawer.events.DrawerOpenedEvent: java.lang.String getEventName()
com.facebook.react.views.image.ReactImageView: com.facebook.react.modules.fresco.ImageCacheControl computeCacheControl(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableLayoutAnimationsOnIOS()
com.facebook.react.uimanager.style.BorderStyle$Companion: BorderStyle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.facebook.react.fabric.SurfaceHandlerBinding: SurfaceHandlerBinding(java.lang.String)
com.reactnativecommunity.asyncstorage.BuildConfig: BuildConfig()
com.facebook.react.views.textinput.ReactEditText: void setBorderWidth(int,float)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.hermes.intl.IntlTextUtils: boolean isASCIILetterOrDigit(char)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult decrypt(java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.uimanager.drawable.BorderDrawable: kotlin.properties.ReadWriteProperty invalidatingAndPathChange(java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.ThemedReactContext getReactContext()
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.hermes.intl.JSObjects: boolean isArray(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.facebook.react.fabric.events.EventBeatManager$Companion: EventBeatManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.facebook.react.uimanager.style.BackgroundImageLayer$Companion: BackgroundImageLayer$Companion()
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void dismissExisting()
com.facebook.react.animated.NativeAnimatedModule$Companion: NativeAnimatedModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactNativeHost$1: com.facebook.react.common.SurfaceDelegate createSurfaceDelegate(java.lang.String)
okhttp3.ResponseBody: java.lang.String string()
com.facebook.react.devsupport.DevSupportManagerBase: void reloadSettings$lambda$20(com.facebook.react.devsupport.DevSupportManagerBase)
androidx.fragment.app.DialogFragment: android.view.View onFindViewById(int)
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest fromUri(android.net.Uri)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
com.facebook.react.uimanager.drawable.OutlineDrawable: void drawRoundedOutline(android.graphics.Canvas)
com.facebook.react.fabric.DevToolsReactPerfLogger: DevToolsReactPerfLogger()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBackgroundImage(android.view.View,java.util.List)
com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdatesIfNeeded()
com.facebook.drawee.drawable.ForwardingDrawable: void setDither(boolean)
com.facebook.react.MemoryPressureRouter: void destroy(android.content.Context)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.facebook.react.devsupport.PackagerStatusCheck$Companion: java.lang.String access$createPackagerStatusURL(com.facebook.react.devsupport.PackagerStatusCheck$Companion,java.lang.String)
com.facebook.react.modules.network.ForwardingCookieHandler: ForwardingCookieHandler(com.facebook.react.bridge.ReactContext)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(java.lang.String,com.facebook.react.bridge.WritableMap,long,boolean,com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy)
com.facebook.react.packagerconnection.JSPackagerClient: void close()
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: double getValue()
com.facebook.react.bridge.BridgeReactContext: void destroy()
com.nozbe.watermelondb.MigrationNeededError: MigrationNeededError(int)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.viewmanagers.DebuggingOverlayManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.modules.network.OkHttpCompat: OkHttpCompat()
com.facebook.react.animated.DivisionAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableViewRecycling()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void findSharedViewsForScreen(android.view.View,java.util.List)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: void dangerouslyReset()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
com.facebook.react.fabric.LongStreamingStats: double getMedian()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getWidth()
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setInset(com.facebook.react.bridge.Dynamic)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getTypedValueOffsetForKey(int,com.facebook.react.common.mapbuffer.MapBuffer$DataType)
com.facebook.hermes.intl.LocaleObject: LocaleObject()
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double,com.facebook.react.modules.fresco.ImageCacheControl,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.TextAttributes: float getEffectiveMaxFontSizeMultiplier()
com.swmansion.rnscreens.ScreenStack: java.util.ArrayList getFragments()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.facebook.react.uimanager.ReactShadowNode: void setLocalData(java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIncrementalSync()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void invalidateSelf()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: java.lang.Object getItem(int)
com.facebook.react.views.text.ReactFontManager: void access$setInstance$cp(com.facebook.react.views.text.ReactFontManager)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getReactPackageTurboModuleManagerDelegateBuilder()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void maybeFlushUIUpdatesQueue()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.style.RadialGradient$Companion: com.facebook.react.uimanager.style.Gradient parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.facebook.hermes.intl.UnicodeExtensionKeys$6: UnicodeExtensionKeys$6()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: void removeItem(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BridgeReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.facebook.react.bridge.JSBundleLoader$Companion: JSBundleLoader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReadableNativeMap$Companion: ReadableNativeMap$Companion()
com.facebook.react.bridge.UIManager: void initialize()
com.swmansion.reanimated.NodesManager$2: void doFrameGuarded(long)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightMaxContentJNI(long)
com.facebook.react.uimanager.style.LogicalEdge$LEFT: LogicalEdge$LEFT(java.lang.String,int)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long getMarkerTime()
com.facebook.react.views.modal.RequestCloseEvent: java.lang.String getEventName()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: void onFailure(java.lang.Exception)
com.facebook.react.uimanager.events.EventEmitterImpl: com.facebook.react.uimanager.events.RCTEventEmitter ensureLegacyEventEmitter()
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: NetworkingModule$sendRequestInternal$1$responseBody$1(java.lang.String,com.facebook.react.bridge.ReactApplicationContext,int)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: void close()
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.ReactDelegate: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.react.bridge.JSBundleLoader$Companion$createCachedBundleFromNetworkLoader$1: JSBundleLoader$Companion$createCachedBundleFromNetworkLoader$1(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: boolean isBiometrySupported()
com.facebook.react.modules.i18nmanager.I18nUtil$Companion: I18nUtil$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setUnits(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.facebook.react.uimanager.JSPointerDispatcher: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.reactnativecommunity.cameraroll.CameraRollModule: void putBasicNodeInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int,int,boolean,boolean)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: boolean isReverse()
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getUniform()
com.swmansion.rnscreens.Screen: androidx.fragment.app.Fragment getFragment()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.facebook.react.views.text.PreparedLayoutTextView: com.facebook.react.uimanager.style.Overflow getOverflow()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)
com.facebook.react.uimanager.OnLayoutEvent: void setHeight$ReactAndroid_release(int)
com.oblador.keychain.KeychainModule: java.lang.String getName()
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean isAccessibilityFocusable(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: void showPausedInDebuggerOverlay(java.lang.String,com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener)
com.facebook.react.devsupport.DevServerHelper$openDebugger$1: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.defaults.DefaultReactHostDelegate: kotlin.Unit _init_$lambda$0(java.lang.Exception)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: AsyncStorageModule$2(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.ForwardingCookieHandler$Companion: ForwardingCookieHandler$Companion()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.lang.String getDefaultNumberingSystem(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState[] values()
com.facebook.react.devsupport.DevServerHelper$openPackagerConnection$1: java.lang.Void doInBackground(java.lang.Void[])
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel[] $values()
com.swmansion.rnscreens.ScreenViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.Screen)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeight(float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableResourceTimingAPI()
com.facebook.react.devsupport.ReleaseDevSupportManager: java.lang.String getSourceUrl()
com.facebook.react.runtime.ReactSurfaceView: void requestDisallowInterceptTouchEvent(boolean)
com.facebook.react.uimanager.events.Event: int getUniqueID()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean enableFabricRenderer()
com.facebook.react.ReactInstanceManager: void lambda$runCreateReactContextOnNewThread$2(com.facebook.react.ReactInstanceManager$ReactContextInitParams)
androidx.biometric.DeviceUtils: boolean canAssumeStrongBiometrics(android.content.Context,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushLong(long)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreenFragment(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.facebook.imagepipeline.request.ImageRequest: boolean getAutoRotateEnabled()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void callOnQueue$lambda$0(com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.interfaces.TaskInterface prerender()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: ReactNativeFirebaseMessagingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNode: boolean isMeasureDefined()
com.facebook.react.views.image.ReactImageDownloadListener: void onSubmit(java.lang.String,java.lang.Object)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.reactnativecommunity.asyncstorage.SerialExecutor: void execute(java.lang.Runnable)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getDropDownBackgroundTintList()
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.TextAttributeProps: boolean getBooleanProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.facebook.react.PackageList: PackageList(com.facebook.react.ReactNativeHost)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean equals(java.lang.Object)
androidx.biometric.BiometricFragment$2: void onChanged(java.lang.Object)
com.facebook.react.modules.network.ProgressResponseBody: okio.Source source(okio.Source)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes$Companion: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes fromId(int)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: BlackHoleEventDispatcher()
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.facebook.react.shell.MainReactPackage: java.util.Map fallbackForMissingClass$lambda$19(java.util.Map)
com.nozbe.watermelondb.WMDatabaseDriver: void batch(com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactSurfaceView$Companion: ReactSurfaceView$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
io.invertase.firebase.common.ReactNativeFirebaseModule: void onCatalystInstanceDestroy()
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey: CipherStorageBase$SelfDestroyKey(com.oblador.keychain.cipherStorage.CipherStorageBase,java.lang.String,java.security.Key)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
com.facebook.react.bridge.GuardedAsyncTask$Companion: GuardedAsyncTask$Companion()
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: void run()
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.facebook.react.views.view.ReactViewGroup: void setViewClipped(android.view.View,boolean)
com.facebook.react.bridge.ColorPropConverter: int getColor(java.lang.Object,android.content.Context,int)
com.facebook.react.bridge.JavaOnlyMap$Companion: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderStyle getBorderStyle()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isHighTextContrastEnabledValue()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.facebook.react.views.drawer.events.DrawerClosedEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.drawerlayout.widget.DrawerLayout: void requestLayout()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setShouldNotifyOnLayout(boolean)
com.facebook.react.fabric.FabricUIManager$3: FabricUIManager$3(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.react.R$drawable: R$drawable()
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
org.pgsqlite.SQLitePlugin: void closeQuietly(java.io.Closeable)
com.facebook.imagepipeline.core.DownsampleMode: com.facebook.imagepipeline.core.DownsampleMode[] values()
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility$NeedsMigration: WMDatabaseDriver$SchemaCompatibility$NeedsMigration(int)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.TextLayoutManager: void updateTextPaint(android.text.TextPaint,com.facebook.react.views.text.TextAttributeProps,android.content.Context)
com.facebook.react.views.imagehelper.ImageSource: int hashCode()
com.facebook.react.common.ReleaseLevel: ReleaseLevel(java.lang.String,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.facebook.react.common.assets.ReactFontManager$Companion: ReactFontManager$Companion()
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void executeWithExceptions()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
androidx.biometric.BiometricFragment$11: void run()
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.TextAttributes: void setAllowFontScaling(boolean)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: CxxInspectorPackagerConnection(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android: boolean useTurboModuleInterop()
com.facebook.react.animated.AnimatedNode: void update$ReactAndroid_release()
com.facebook.react.uimanager.style.RadialGradient$Position: RadialGradient$Position()
com.facebook.react.views.text.TextAttributeProps: TextAttributeProps()
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.swmansion.reanimated.NodesManager: void invalidate()
com.facebook.react.animated.NativeAnimatedNodesManager: void updateAnimatedNodeConfig(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: FabricEventDispatcher$ScheduleDispatchFrameCallback(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.swmansion.rnscreens.SearchBarView: void setToolbarElementsVisibility(int)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.bridge.UIManager getUIManagerProvider$lambda$0(com.facebook.react.defaults.DefaultReactNativeHost,com.facebook.react.bridge.ReactApplicationContext)
com.nozbe.watermelondb.WMDatabaseDriver: com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility isCompatible(int)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.uimanager.UIManagerModule$1: UIManagerModule$1(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.uimanager.events.EventEmitterImpl: EventEmitterImpl(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.UnicodeExtensionKeys: boolean isValidKeyword(java.lang.String,java.lang.String,com.facebook.hermes.intl.ILocaleObject)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody create(okhttp3.MediaType,java.io.InputStream)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderStyle(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.views.text.TextAttributes: boolean getAllowFontScaling()
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: PlatformDateTimeFormatterAndroid()
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getYogaSize(float,float)
com.facebook.react.views.modal.ReactModalHostManager$Companion: ReactModalHostManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable getCssBackground()
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.internal.interop.InteropEvent$Companion: InteropEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void dispatchBatchedEvents()
com.facebook.react.uimanager.ViewManagerRegistry: void lambda$invalidate$1(java.util.List)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: ViewGroupDrawingOrderHelper(android.view.ViewGroup)
com.facebook.react.ReactRootView: boolean isViewAttachedToReactInstance()
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsProvider: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactActivity: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.runtime.BridgelessCatalystInstance: boolean isDestroyed()
com.facebook.react.views.text.TextLayoutManager: android.text.Layout createLayout(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,float,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void emitUpdateDimensionsEvent()
com.learnium.RNDeviceInfo.RNDeviceModule: double getBatteryLevelSync()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetrics(android.content.Context)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.activity.OnBackPressedCallback: void remove()
com.facebook.react.uimanager.events.FabricEventDispatcher: void cancelDispatchOfBatchedEvents()
com.facebook.react.uimanager.UIImplementation: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: void setReloadAndProfileConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIImplementation: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: void waitResult()
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.views.progressbar.ProgressBarContainerView: double getProgress$ReactAndroid_release()
com.nozbe.watermelondb.WMDatabaseDriver: java.lang.Object find(java.lang.String,java.lang.String)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.lang.String getDefaultTimeZone(com.facebook.hermes.intl.ILocaleObject)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.fresco.FrescoModule$Companion: boolean hasBeenInitialized()
com.facebook.react.modules.network.NetworkingModule$UriHandler: com.facebook.react.bridge.WritableMap fetch(android.net.Uri)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setFilter(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.LogBoxModule: void show$lambda$0(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: ReactScrollViewHelper$ReactScrollViewScrollState()
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
androidx.biometric.AuthenticationCallbackProvider$Api30Impl: AuthenticationCallbackProvider$Api30Impl()
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1: void onFailureImpl(com.facebook.datasource.DataSource)
com.facebook.react.ReactFragment: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.react.uimanager.UIImplementation: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContext(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.react.uimanager.ReactAxOrderHelper: ReactAxOrderHelper()
com.facebook.react.animated.SpringAnimation: void runAnimationStep(long)
com.facebook.react.uimanager.ThemedReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.HeadlessJsTaskService: void invokeStartTask$lambda$0(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,com.facebook.react.HeadlessJsTaskService)
com.facebook.react.views.scroll.ReactScrollViewHelper: int parseOverScrollMode(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fuseboxEnabledRelease()
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
com.rnbiometrics.ReactNativeBiometrics: void isSensorAvailable(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevLoadingViewForUrl(java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String getEncryptionTransformation()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$special$$inlined$sortBy$1: ReactTextViewAccessibilityDelegate$AccessibilityLinks$special$$inlined$sortBy$1(android.text.Spanned)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$show$2: androidx.core.view.WindowInsetsCompat onCreate$lambda$0(int,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.hermes.intl.PlatformCollatorICU: java.lang.String[] getAvailableLocales()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String fieldToString(java.text.AttributedCharacterIterator$Attribute,java.lang.String)
com.facebook.react.uimanager.OnLayoutEvent$Companion: OnLayoutEvent$Companion()
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: void onPackagerConnected()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int getSurfaceId()
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: void close()
com.BV.LinearGradient.LinearGradientView: void setLocations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule lambda$initialize$0(com.facebook.react.BaseReactPackage,com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.facebook.react.devsupport.DevSupportManagerBase: void logJSException(java.lang.Exception)
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setIdentifier(android.view.View,int)
androidx.biometric.BiometricPrompt$CryptoObject: java.security.Signature getSignature()
com.facebook.react.devsupport.interfaces.DevSupportManager: void reloadSettings()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
com.facebook.react.runtime.ReactHostImpl: void log(java.lang.String,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useTurboModuleInterop()
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion: TextInlineImageSpan$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: AsyncStorageModule$1(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float getBorderWidthOrDefaultTo(float,int)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.runtime.internal.bolts.Task$Companion: com.facebook.react.runtime.internal.bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult: com.oblador.keychain.SecurityLevel getSecurityLevel()
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.swmansion.reanimated.NodesManager: void performOperations()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onStartTemporaryDetach()
com.facebook.react.devsupport.RedBoxContentView: void refreshContentView()
com.facebook.react.common.mapbuffer.WritableMapBuffer: int getKeyOffset(int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getOrCreateReactInstance()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: java.lang.String toString()
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasis(float)
com.facebook.hermes.intl.ILocaleObject: java.lang.Object getLocaleWithoutExtensions()
com.facebook.react.runtime.ReactHostImpl: void loadNetworkResource(java.lang.String,com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
com.facebook.react.uimanager.drawable.OutlineDrawable: float calculateRadius(float,float,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.react.devsupport.DevSupportManagerBase: void handleException(java.lang.Exception)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: java.lang.String getEventName()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.rnbiometrics.ReactNativeBiometrics$1: ReactNativeBiometrics$1(com.rnbiometrics.ReactNativeBiometrics,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableNativeCSSParsing()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.views.scroll.ScrollEvent$Companion: ScrollEvent$Companion()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.facebook.react.modules.network.NetworkingModule$Companion: boolean access$shouldDispatch(com.facebook.react.modules.network.NetworkingModule$Companion,long,long)
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void dropView(android.view.View)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.react.bridge.BridgeReactContext: java.lang.String getSourceURL()
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: void run()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$Companion: TurboModuleManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.biometric.BiometricFragment$Api28Impl: void authenticate(android.hardware.biometrics.BiometricPrompt,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] $values()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String component2()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$ModuleProvider: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.facebook.react.devsupport.inspector.InspectorNetworkHelper: void loadNetworkResource(java.lang.String,com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
com.facebook.react.jstasks.HeadlessJsTaskContext: void removeTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSystemManufacturerSync()
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost$default(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.util.List,int,java.lang.Object)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean,boolean,boolean)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableCppPropsIteratorSetter()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BackgroundDrawable getBackground(android.view.View)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setDelegate(android.view.View,boolean,int)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.drawer.ReactDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setIndeterminate(android.view.View,boolean)
com.facebook.react.R$id: R$id()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: java.lang.String toTitleString()
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.devsupport.interfaces.RedBoxHandler getRedBoxHandler()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.uimanager.JSPointerDispatcher: float[] eventCoordsToScreenCoords(float[])
com.facebook.react.modules.devtoolsruntimesettings.Settings: boolean getRecordChangeDescriptions()
com.facebook.react.uimanager.UIImplementation: void removeShadowNodeRecursive(com.facebook.react.uimanager.ReactShadowNode)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerProvider: com.oblador.keychain.decryptionHandler.DecryptionResultHandler getHandler(com.facebook.react.bridge.ReactApplicationContext,com.oblador.keychain.cipherStorage.CipherStorage,androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.facebook.react.ReactInstanceManager: boolean hasStartedCreatingInitialContext()
com.swmansion.rnscreens.ScreenContentWrapperManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getSourceUrl()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener: void onViewHierarchyUpdateEnqueued()
com.facebook.react.devsupport.RedBoxContentView$reportCompletedListener$1: void onReportSuccess(android.text.SpannedString)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com.facebook.react.fabric.DevToolsReactPerfLogger$Companion: DevToolsReactPerfLogger$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.animated.NativeAnimatedModule$createAnimatedNode$1: NativeAnimatedModule$createAnimatedNode$1(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger: void executeAssert(java.lang.String,com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaDirection getLayoutDirection()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean _isRunning()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.facebook.react.views.image.ImageResizeMode: ImageResizeMode()
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(com.facebook.react.jstasks.HeadlessJsTaskConfig)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.react.uimanager.OnLayoutEvent$Companion: OnLayoutEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.OnScrollDispatchHelper: float getYFlingVelocity()
com.facebook.react.common.ClassFinder: boolean canLoadClassesFromAnnotationProcessors()
com.facebook.react.views.text.PreparedLayoutTextView: void setLayout(android.text.Layout)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: java.lang.String toString()
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: void show()
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagForTouch(float,float,android.view.ViewGroup,int[])
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: java.lang.String nextKey()
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableMap getDisplayMetricsWritableMap(double)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: ReactContentSizeChangedEvent(int,float,float)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.lang.String access$readStringValue(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.bridge.WritableArray getWritableArray(boolean,com.facebook.react.bridge.WritableMap[])
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
com.facebook.react.ReactActivityDelegate: void onWindowFocusChanged(boolean)
com.facebook.react.modules.permissions.PermissionsModule$requestMultiplePermissions$1: PermissionsModule$requestMultiplePermissions$1(java.util.ArrayList,com.facebook.react.bridge.WritableNativeMap,com.facebook.react.modules.permissions.PermissionsModule,com.facebook.react.bridge.Promise)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjsijniprofiler_so()
androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: BundleDownloader$downloadBundleFromURL$1(com.facebook.react.devsupport.BundleDownloader,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
com.facebook.react.uimanager.ViewManager: void experimental_prefetchResource(com.facebook.react.bridge.ReactContext,int,int,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.Spacing: float getWithFallback(int,int)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.facebook.react.devsupport.ChangeBundleLocationDialog$ChangeBundleLocationDialogListener: void onClick(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener: AccessibilityInfoModule$ReactAccessibilityServiceChangeListener(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.views.image.ReactImageDownloadListener: void onFailure(java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: void setReloadAndProfileConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void post()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.fabric.mounting.SurfaceMountingManager: SurfaceMountingManager(int,com.facebook.react.touch.JSResponderHandler,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.interfaces.fabric.ReactSurface: void clear()
com.facebook.react.views.view.MeasureUtil: int getMeasureSpec(float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.react.views.textinput.ReactTextScrollWatcher: void onScrollChanged(int,int,int,int)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.facebook.react.views.drawer.events.DrawerClosedEvent: DrawerClosedEvent(int)
com.oblador.keychain.KeychainPackage: KeychainPackage()
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task onSuccess$default(com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor,int,java.lang.Object)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion: LayoutAnimationType$Companion()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: void dangerouslyReset()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enablePropsUpdateReconciliationAndroid()
com.facebook.react.views.text.internal.span.ReactOpacitySpan: float getOpacity()
com.facebook.react.devsupport.RedBoxContentView: android.widget.Button access$getReportButton$p(com.facebook.react.devsupport.RedBoxContentView)
androidx.biometric.R$bool: R$bool()
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$Companion: BaseLayoutAnimation$Companion()
androidx.biometric.BiometricPrompt: void authenticate(androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: ReactPackageTurboModuleManagerDelegate$Builder()
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float component5()
com.facebook.react.common.ShakeDetector: boolean atLeastRequiredForce(float)
com.facebook.imagepipeline.request.ImageRequest: boolean isDiskCacheEnabled()
com.facebook.react.modules.blob.FileReaderModule$Companion: java.lang.String getNAME()
com.nozbe.watermelondb.WMDatabaseBridge: void getLocal(int,java.lang.String,com.facebook.react.bridge.Promise)
androidx.biometric.BiometricViewModel: int getAllowedAuthenticators()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: int getId()
com.learnium.RNDeviceInfo.RNDeviceModule: void getIpAddress(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.facebook.react.modules.blob.BlobProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.facebook.hermes.reactexecutor.HermesExecutor: java.lang.String access$getMode$cp()
com.facebook.react.views.scroll.ReactScrollView: void flingAndSnap(int)
com.facebook.react.views.text.ReactTypefaceUtils: ReactTypefaceUtils()
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType$Companion: RadialGradient$GradientSize$KeywordType$Companion()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int)
com.facebook.react.animated.NativeAnimatedNodesManager: NativeAnimatedNodesManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task makeVoid$lambda$7(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutDirection(com.facebook.yoga.YogaDirection)
com.facebook.react.views.textinput.ReactEditText: int getGravityVertical$ReactAndroid_release()
com.facebook.react.devsupport.DevServerHelper: java.lang.String getSourceMapUrl(java.lang.String)
com.facebook.react.module.model.ReactModuleInfo: ReactModuleInfo(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.facebook.react.bridge.DynamicFromMap: void access$setName$p(com.facebook.react.bridge.DynamicFromMap,java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageBase: int getCapabilityLevel()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
androidx.biometric.KeyguardUtils: boolean isDeviceSecuredWithCredential(android.content.Context)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean,boolean)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setAdditionalOptionForPackager(java.lang.String,java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1: BorderDrawable$invalidatingAndPathChange$1(java.lang.Object,com.facebook.react.uimanager.drawable.BorderDrawable)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.react.devsupport.DevServerHelper: java.lang.String getInspectorDeviceId()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component8()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.rnbiometrics.SimplePromptCallback: void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onDetachedFromWindow()
com.facebook.react.runtime.JSTimerExecutor$Companion: JSTimerExecutor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.events.PointerEventHelper: PointerEventHelper()
com.facebook.react.devsupport.BundleDownloader$BundleInfo$Companion: com.facebook.react.devsupport.BundleDownloader$BundleInfo fromJSONString(java.lang.String)
com.facebook.react.defaults.DefaultReactActivityDelegate: boolean isFabricEnabled()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase: ReanimatedNativeHierarchyManagerBase(com.facebook.react.uimanager.ViewManagerRegistry)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: android.text.TextPaint component1()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.ReactInstanceManager: com.facebook.react.common.LifecycleState getLifecycleState()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext getThemedContext()
com.facebook.react.modules.network.NetworkingModule: void access$readWithProgress(com.facebook.react.modules.network.NetworkingModule,int,okhttp3.ResponseBody)
com.facebook.react.views.textinput.ReactTextInputManager: void setReactTextViewManagerCallback(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactNativeHost getReactNativeHost()
androidx.biometric.BiometricViewModel: java.lang.CharSequence getNegativeButtonText()
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
com.facebook.react.devsupport.BundleDownloader: BundleDownloader(okhttp3.OkHttpClient)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.fragment.app.DialogFragment: void onDestroyView()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.react.uimanager.ReactShadowNode: boolean isVirtual()
com.swmansion.reanimated.Utils: int[] processIntArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String access$getTAG$cp()
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float,int)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void close()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useAlwaysAvailableJSErrorHandling()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$Style,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign,com.facebook.hermes.intl.IPlatformNumberFormatter$Notation,com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay)
com.facebook.react.views.switchview.ReactSwitchManager$Companion: ReactSwitchManager$Companion()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: android.graphics.Rect getBoundsInParent(com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetViewCommandMountItems()
androidx.biometric.BiometricFragment: void onCancelButtonPressed()
com.facebook.react.uimanager.ReactOverflowViewWithInset: android.graphics.Rect getOverflowInset()
com.facebook.react.runtime.ReactSurfaceImpl: ReactSurfaceImpl(com.facebook.react.fabric.SurfaceHandlerBinding,android.content.Context)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.facebook.react.defaults.DefaultSoLoader: void maybeLoadSoLibrary()
com.facebook.react.bridge.ReadableArrayBuilder: void add(java.lang.String)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.reactnativecommunity.cameraroll.CameraRollModule: void getPhotoThumbnail(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: android.view.View getTopScreenForStack(android.view.View)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: NativeAsyncStorageModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.BuildConfig: BuildConfig()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: ReadableMapBuffer$MapBufferEntry(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
com.facebook.react.uimanager.UIImplementation: void onCatalystInstanceDestroyed()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.views.text.ReactTextUpdate$Companion: ReactTextUpdate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.drawable.OutlineDrawable: float getOutlineWidth()
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onHeaders(int,java.util.Map)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableViewRecyclingForView()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult decrypt(java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: ReactTextViewAccessibilityDelegate$Companion()
com.facebook.react.views.text.PreparedLayoutTextViewManager: android.view.View getChildAt(com.facebook.react.views.text.PreparedLayoutTextView,int)
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: UIViewOperationQueue$SendAccessibilityEvent(com.facebook.react.uimanager.UIViewOperationQueue,int,int)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.modules.core.JavaTimerManager: void maybeSetChoreographerIdleCallback()
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack()
com.facebook.react.modules.debug.FpsDebugFrameCallback: void stop$lambda$1(com.facebook.react.modules.debug.FpsDebugFrameCallback)
com.facebook.react.views.text.PreparedLayoutTextView: boolean dispatchHoverEvent(android.view.MotionEvent)
com.facebook.react.views.text.ReactTextView: void setBorderWidth(int,float)
com.facebook.react.views.modal.ReactModalHostView: void syncSystemBarsVisibility(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsControllerCompat,java.util.List)
com.facebook.react.uimanager.UIImplementation: void registerRootView(android.view.View,int,com.facebook.react.uimanager.ThemedReactContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1(com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl,com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage$lambda$0(com.facebook.react.modules.devloading.DevLoadingModule,java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.react.runtime.internal.bolts.Task: boolean isFaulted()
com.facebook.crypto.cipher.NativeGCMCipher: int nativeEncryptFinal(byte[],int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void showNewAlert(android.os.Bundle,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: int getScrollAwayPaddingTop()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$1: CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$1(okhttp3.WebSocket)
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: void onFailure$lambda$1(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useShadowNodeStateOnClone()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.facebook.react.bridge.DynamicNative$Companion: DynamicNative$Companion()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap getPayload()
androidx.security.crypto.MasterKey: java.lang.String getKeyAlias()
com.facebook.hermes.intl.JSRangeErrorException: JSRangeErrorException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationCancel(android.animation.Animator)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean commonTestFlag()
com.facebook.react.ReactActivity: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.pgsqlite.SQLitePlugin$Action: org.pgsqlite.SQLitePlugin$Action[] values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.facebook.react.bridge.Dynamic: boolean isNull()
com.learnium.RNDeviceInfo.RNDeviceModule: void getLastUpdateTime(com.facebook.react.bridge.Promise)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setSheetInitialDetent(com.swmansion.rnscreens.Screen,int)
com.facebook.react.modules.blob.BlobModule$networkingResponseHandler$1: boolean supports(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableViewRecyclingForText()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetLargestUndimmedDetent(android.view.View,int)
com.facebook.react.jstasks.HeadlessJsTaskContext: int startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig)
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicHeight()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisFitContentJNI(long)
androidx.biometric.BiometricManager$DefaultInjector: androidx.core.hardware.fingerprint.FingerprintManagerCompat getFingerprintManager()
com.facebook.react.devsupport.ChangeBundleLocationDialog: ChangeBundleLocationDialog()
com.facebook.react.uimanager.ReactShadowNode: float getLayoutHeight()
com.facebook.react.ReactActivity: void onResume()
com.facebook.react.views.text.TextTransform: TextTransform(java.lang.String,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String removeFinalDelimiter(java.lang.StringBuilder)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: PreAllocateViewMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult: CipherStorage$DecryptionResult(java.lang.String,java.lang.String,com.oblador.keychain.SecurityLevel)
androidx.core.view.WindowInsetsCompat$Impl34: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setAllowedAuthenticators(int)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil access$getInstance$cp()
com.rnbiometrics.ReactNativeBiometrics: int getAllowedAuthenticators(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.textinput.ReactEditText: void removeTextChangedListener(android.text.TextWatcher)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.ReactActivityDelegate: android.app.Activity getPlainActivity()
com.facebook.react.views.modal.ReactModalHostView: boolean isFlagSecureSet(android.app.Activity)
com.facebook.react.viewmanagers.RNSScreenFooterManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.runtime.ReactSurfaceView: void handleException(java.lang.Throwable)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$10(com.facebook.react.devsupport.DevSupportManagerBase)
com.swmansion.reanimated.NodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean,boolean)
com.facebook.react.ReactHost: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.react.modules.blob.BlobModule$networkingUriHandler$1: boolean supports(android.net.Uri,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.facebook.react.devsupport.DevServerHelper$BundleType: java.lang.String getTypeID()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.facebook.react.devsupport.interfaces.DevSupportManager: void startInspector()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$highTextContrastObserver$1: void onChange(boolean,android.net.Uri)
com.facebook.react.views.image.ScaleTypeStartInside: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter findManagerSetter(java.lang.Class)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.runtime.ReactSurfaceImpl: void attachView(com.facebook.react.runtime.ReactSurfaceView)
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.facebook.hermes.intl.LocaleMatcher: java.lang.String BestAvailableLocale(java.lang.String[],java.lang.String)
androidx.biometric.KeyguardUtils$Api16Impl: KeyguardUtils$Api16Impl()
com.facebook.react.views.text.ReactTextViewManager: void updateViewAccessibility(android.view.View)
com.facebook.hermes.intl.JSObjects$UndefinedObject: JSObjects$UndefinedObject(com.facebook.hermes.intl.JSObjects$1)
com.facebook.react.bridge.JavaOnlyArray$Companion: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.modules.core.JavaScriptTimerExecutor: void callIdleCallbacks(double)
androidx.biometric.FingerprintDialogFragment$Api26Impl: FingerprintDialogFragment$Api26Impl()
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(int,int)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.ReadableArrayBuilder: void addMap(kotlin.jvm.functions.Function1)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.react.devsupport.DevSupportManagerBase: void fetchSplitBundleAndCreateBundleLoader(java.lang.String,com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader)
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl: JSPackagerClient$ResponderImpl(com.facebook.react.packagerconnection.JSPackagerClient,java.lang.Object)
com.facebook.react.ReactDelegate: void setReactRootView(com.facebook.react.ReactRootView)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.ReactRootView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile$Builder setKeysetPrefName(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: java.lang.String dangerouslyForceOverride(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback: void onMessage(java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: ViewManagersPropertyCache$BoxedColorPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasSmoothScroll: void reactSmoothScrollTo(int,int)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean cxxNativeAnimatedEnabled()
com.facebook.react.views.view.CanvasUtil: CanvasUtil()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.facebook.react.modules.dialog.AlertFragment$Companion: android.app.Dialog createAppCompatDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener)
com.facebook.react.modules.websocket.WebSocketModule$connect$2: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeight(float)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$0(android.view.View,int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int)
com.facebook.react.devsupport.interfaces.DevSupportManager: void toggleElementInspector()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.facebook.react.uimanager.style.Overflow$Companion: Overflow$Companion()
com.facebook.react.views.textinput.ReactTextSelectionWatcher: ReactTextSelectionWatcher(com.facebook.react.views.textinput.ReactEditText)
androidx.fragment.app.Fragment: int getNextTransition()
com.facebook.react.views.text.TextAttributeProps: void setFontSize(float)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: boolean enableFabricRenderer()
com.facebook.react.views.view.ReactViewGroup: void onViewRemoved(android.view.View)
com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion: DrawerOpenedEvent$Companion()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onAttachedToWindow()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void stopObservingChanges()
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableDestroyShadowTreeRevisionAsync()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void clearElementsHighlights(com.facebook.react.views.debuggingoverlay.DebuggingOverlay)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionStart()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType getKeyword()
com.facebook.react.uimanager.ThemedReactContext: java.util.Collection getNativeModules()
androidx.biometric.BiometricFragment: void authenticateWithBiometricPrompt(android.hardware.biometrics.BiometricPrompt,android.content.Context)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void updateDrawState(android.text.TextPaint)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.MatrixMathHelper: double determinant(double[])
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addRootView(android.view.View)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
com.facebook.react.uimanager.UIManagerHelper: int getSurfaceId(android.view.View)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setSignDisplay(com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.ReactInstanceManager: void initializeSoLoaderIfNecessary(android.content.Context)
com.facebook.drawee.view.DraweeView: void doAttach()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void updateExtraData(com.facebook.react.views.text.PreparedLayoutTextView,java.lang.Object)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.common.assets.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,boolean,android.content.res.AssetManager)
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: void getAlbums(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.DevSupportManagerBase: DevSupportManagerBase(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.ReactDelegate: boolean onBackPressed()
com.facebook.react.animated.AnimationDriver: AnimationDriver()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean readBooleanValue(int)
com.facebook.react.ReactInstanceManager$2: void reload(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: int getStyleFromString$ReactAndroid_release(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
com.facebook.react.views.scroll.ReactScrollView: void reactSmoothScrollTo(int,int)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.swmansion.rnscreens.SearchBarManager: void toggleCancelButton(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.interfaces.TaskInterface: java.lang.Exception getError()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.FabricUIManager: void experimental_prefetchResource(java.lang.String,int,int,com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isElementInspectorEnabled()
com.facebook.react.views.view.ReactViewGroup: void draw(android.graphics.Canvas)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getStringProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String)
com.facebook.react.uimanager.events.Event: short getCoalescingKey()
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$12(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.modules.permissions.PermissionsModule$Companion: PermissionsModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.BridgeDevSupportManager: java.lang.String getUniqueTag()
com.facebook.react.uimanager.MatrixMathHelper: void decomposeMatrix(double[],com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext)
com.facebook.react.module.model.ReactModuleInfo: boolean canOverrideExistingModule()
androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow copy(float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean useRawPropsJsiValue()
com.facebook.react.common.mapbuffer.MapBuffer: boolean getBoolean(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.safeareaview.ReactSafeAreaView: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.scroll.ReactAccessibleScrollView: boolean getScrollEnabled()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.DebugCorePackage: java.util.Map viewManagersMap_delegate$lambda$1()
com.facebook.react.modules.image.ImageLoaderModule$Companion: ImageLoaderModule$Companion()
com.facebook.react.uimanager.BaseViewManagerDelegate: void kotlinCompat$receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerWidth$ReactAndroid_release(int)
com.oblador.keychain.cipherStorage.CipherStorageBase: void throwIfInsufficientLevel(com.oblador.keychain.SecurityLevel)
com.facebook.react.modules.core.JavaTimerManager: android.util.SparseArray access$getTimerIdsToTimers$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setDirection(android.view.View,java.lang.String)
com.nozbe.watermelondb.WMDatabaseDriver: void unsafeResetDatabase(com.nozbe.watermelondb.utils.Schema)
androidx.biometric.BiometricFragment$9: BiometricFragment$9(androidx.biometric.BiometricFragment,androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.react.animated.SpringAnimation$PhysicsState: void setVelocity(double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void initView()
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.common.mapbuffer.MapBuffer$Entry: boolean getBooleanValue()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setInspectorTarget(com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: com.facebook.react.bridge.WritableMap getReloadAndProfileConfig()
com.facebook.react.views.text.TextAttributes: TextAttributes()
com.facebook.react.runtime.ReactHostDelegate: java.lang.String getJsMainModulePath()
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable setRadius(com.facebook.react.bridge.ReadableMap,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.jstasks.HeadlessJsTaskConfig: long getTimeout()
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.IViewGroupManager getViewGroupManager(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: void setStart(int)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationRepeat(android.animation.Animator)
com.facebook.hermes.intl.JSObjects: java.lang.Object newBoolean(java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.modules.core.JavaTimerManager: boolean access$getSendIdleEvents$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
com.facebook.react.uimanager.UIImplementation: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: ReactNativeFeatureFlags()
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: AndroidDrawerLayoutManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean commonTestFlag()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.facebook.react.ReactHost: void addBeforeDestroyListener(kotlin.jvm.functions.Function0)
com.facebook.react.devsupport.BridgeDevSupportManager$Companion: BridgeDevSupportManager$Companion()
com.facebook.react.LazyReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setGap(float)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.textinput.ReactTextInputFocusEvent$Companion: ReactTextInputFocusEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.BundleDownloader$downloadBundleFromURL$1: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.uimanager.style.RadialGradient$Companion: RadialGradient$Companion()
com.swmansion.rnscreens.bottomsheet.DimmingView: boolean getBlockGestures$react_native_screens_release()
com.facebook.react.animated.DiffClampAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.runtime.internal.bolts.Task: Task(java.lang.Object)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: ReactPackageTurboModuleManagerDelegate(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeExtensionAttribute()
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.PointerEvent obtain(java.lang.String,int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,short)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isMeasureDefined()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNonNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.String toString()
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: PositionAndSizeAnimation(android.view.View,int,int,int,int)
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getSurfaceID()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableEagerRootViewAttachment()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.ReactActivityDelegate: android.os.Bundle getLaunchOptions()
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getJsBundleLoader()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: com.facebook.react.devsupport.CxxInspectorPackagerConnection$IWebSocket connectWebSocket(java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopLeftRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.views.scroll.ReactScrollView: int getScrollDelta(android.view.View)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component2()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
androidx.appcompat.app.AppCompatActivity: void onLocalesChanged(androidx.core.os.LocaleListCompat)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.PlatformNumberFormatterAndroid setSignificantDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.interfaces.TaskInterface: boolean isCompleted()
com.facebook.react.jscexecutor.JSCExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component3()
androidx.biometric.R$array: R$array()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextShadowNode$2: ReactTextShadowNode$2(com.facebook.react.views.text.ReactTextShadowNode)
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$2(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.ReactBackgroundColorSpan)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableDestroyShadowTreeRevisionAsync()
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
androidx.activity.OnBackPressedCallback: void handleOnBackStarted(androidx.activity.BackEventCompat)
com.facebook.react.animated.NativeAnimatedNodesManager: void stopAnimation(int)
com.facebook.react.animated.DiffClampAnimatedNode: double getInputNodeValue()
com.facebook.react.devsupport.WindowOverlayCompat: WindowOverlayCompat()
com.facebook.react.uimanager.drawable.BorderDrawable: float getFullBorderWidth()
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleY(double[],double)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService: ReactNativeFirebaseMessagingService()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setApplication(android.app.Application)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onBridgeDestroyed()
com.facebook.react.uimanager.MatrixMathHelper: double[] inverse(double[])
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fuseboxNetworkInspectionEnabled()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSecurityPatchSync()
com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate3D(double[],double,double,double)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.modules.debug.DevMenuModule$Companion: DevMenuModule$Companion()
com.facebook.react.views.text.ReactTextView: void applyTextAttributes()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.facebook.react.LazyReactPackage: java.util.Iterator lambda$getNativeModuleIterator$0(java.util.List,java.util.Map)
com.facebook.react.views.text.ReactTypefaceUtils: java.lang.String parseFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.common.futures.SimpleSettableFuture: boolean cancel(boolean)
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: int getOrder$ReactAndroid_release()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.facebook.react.views.textinput.ReactTextChangedEvent: ReactTextChangedEvent(int,int,java.lang.String,int)
com.facebook.datasource.BaseDataSubscriber: void onCancellation(com.facebook.datasource.DataSource)
com.facebook.react.views.image.MultiPostprocessor: java.lang.String getName()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getTopLeft()
com.facebook.react.views.textinput.ReactEditText: void setDragAndDropFilter(java.util.List)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: java.lang.String getName()
androidx.biometric.AuthenticationCallbackProvider$Listener: void onFailure()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: java.lang.Object next()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlagsDefaults: boolean useTurboModules()
androidx.biometric.AuthenticationCallbackProvider$Api30Impl: int getAuthenticationType(android.hardware.biometrics.BiometricPrompt$AuthenticationResult)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View getTransitioningView(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setSignificantDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.debug.FpsDebugFrameCallback: int getTotalTimeMS()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation$Companion: android.view.animation.Interpolator getInterpolator(com.facebook.react.uimanager.layoutanimation.InterpolatorType,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role getRole()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void addScreenListener(android.view.View)
com.facebook.react.runtime.ReactHostInspectorTarget: ReactHostInspectorTarget(com.facebook.react.runtime.ReactHostImpl)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.react.jstasks.HeadlessJsTaskConfig: HeadlessJsTaskConfig(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineStyle(com.facebook.react.uimanager.style.OutlineStyle)
com.facebook.react.uimanager.JSPointerDispatcher: JSPointerDispatcher(android.view.ViewGroup)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getNegativeButtonText()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void requestRender(com.swmansion.reanimated.nativeProxy.AnimationFrameCallback)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
com.facebook.common.time.MonotonicClock: long nowNanos()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map)
com.facebook.react.jstasks.HeadlessJsTaskContext: HeadlessJsTaskContext(com.facebook.react.bridge.ReactContext)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: void remove()
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void onBatchComplete()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method)
com.facebook.react.runtime.ReactHostImpl: void invalidate()
com.facebook.react.uimanager.events.PointerEvent: java.util.List createPointersEventData()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener: void onFailure(java.lang.Exception)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackButtonDisplayMode(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: void getBootloader(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReactShadowNode: boolean hoistNativeChildren()
com.facebook.react.ReactActivity: void onDestroy()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.react.modules.debug.FpsDebugFrameCallback: void startAndRecordFpsAtEachFrame()
com.facebook.hermes.intl.PlatformCollatorICU: int compare(java.lang.String,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: void detachSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.uimanager.UIImplementation: void removeRootShadowNode(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: boolean isContentViewReady()
com.facebook.react.uimanager.ReactShadowNode: float getLayoutY()
com.oblador.keychain.cipherStorage.CipherStorageBase$IV: javax.crypto.spec.IvParameterSpec readIv(java.io.InputStream)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateStartTask$15(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeLanguageSubtag(java.lang.CharSequence,int,int)
com.facebook.react.uimanager.UIImplementation: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.hermes.intl.LocaleObjectICU: com.facebook.hermes.intl.ILocaleObject cloneObject()
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$DataType getType(int)
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel valueOf(java.lang.String)
com.facebook.react.common.MapBuilder$Builder: com.facebook.react.common.MapBuilder$Builder put(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.style.LogicalEdge: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.WritableNativeMap: void initHybrid()
com.facebook.react.ReactFragment: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.devsupport.ReactInstanceDevHelper: android.app.Activity getCurrentActivity()
com.facebook.react.views.textinput.ReactTextInputManager$Companion: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.uimanager.OnLayoutEvent: java.lang.String getEventName()
com.facebook.react.uimanager.style.BoxShadow: java.lang.String toString()
com.facebook.react.ReactInstanceManager$2: void toggleElementInspector()
com.facebook.react.uimanager.style.BorderColors: int hashCode-impl(java.lang.Integer[])
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: void handleScreenContainerUpdate(android.view.View)
com.facebook.react.uimanager.style.RadialGradient: android.graphics.Shader getShader(float,float)
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.worklets.WorkletsModule getWorkletsModule()
com.facebook.react.modules.debug.DevMenuModule: void setProfilingEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimation(android.view.View,int,int,int,int)
com.facebook.react.uimanager.events.TouchEventType: kotlin.enums.EnumEntries getEntries()
com.swmansion.rnscreens.SearchBarManager: void setHideNavigationBar(android.view.View,boolean)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void execute()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: UIViewOperationQueue$UpdatePropertiesOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.uimanager.style.ColorEdges: int component3()
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerDelegate: RNGestureHandlerButtonManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.jstasks.HeadlessJsTaskConfig: java.lang.String getTaskKey()
com.facebook.react.views.text.internal.span.SetSpanOperation$Companion: SetSpanOperation$Companion()
com.facebook.react.views.modal.ReactModalHostView: void onHostPause()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation$Companion: LayoutCreateAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.react.bridge.UIManagerListener: void willMountItems(com.facebook.react.bridge.UIManager)
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setTitle(java.lang.CharSequence)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getServerHost(android.content.Context)
com.facebook.react.ReactInstanceManager: com.facebook.react.MemoryPressureRouter getMemoryPressureRouter()
com.facebook.react.modules.network.ProgressiveStringDecoder: ProgressiveStringDecoder(java.nio.charset.Charset)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollView: void handleInterceptedTouchEvent(android.view.MotionEvent)
com.facebook.react.views.textinput.ReactEditText: boolean requestFocusProgrammatically()
com.oblador.vectoricons.VectorIconsPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.views.scroll.VelocityHelper: VelocityHelper()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfoInternal(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetMountItems()
com.facebook.crypto.cipher.NativeGCMCipher: int nativeDecryptFinal(byte[],int)
com.facebook.react.uimanager.UIImplementation: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.Fragment: void performLowMemory()
com.facebook.react.bridge.JSBundleLoader$Companion$createFileLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.modules.network.RequestBodyUtil: void closeQuietly(okio.Source)
com.swmansion.reanimated.NodesManager: void lambda$new$0(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.runtime.ReactInstance$ReactJsExceptionHandlerImpl: ReactInstance$ReactJsExceptionHandlerImpl(com.facebook.react.runtime.ReactInstance,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.fragment.app.Fragment: boolean isAdded()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$1(android.view.View,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException$Companion: ReactNoCrashBridgeNotAllowedSoftException$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.jstasks.NoRetryPolicy$Companion: NoRetryPolicy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setRadius(float,int)
com.facebook.react.views.textinput.ReactEditText: void hideSoftKeyboard()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUniqueId(com.facebook.react.bridge.Promise)
com.rnbiometrics.SimplePromptCallback: SimplePromptCallback(com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher$ReactAndroid_release()
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig getYogaConfig()
com.facebook.react.views.text.PreparedLayoutTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForKeyboardEvents()
com.facebook.react.uimanager.TransformHelper: TransformHelper()
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: void extendTtl()
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
androidx.biometric.BiometricViewModel: java.lang.CharSequence getTitle()
com.facebook.react.uimanager.ViewManagerDelegate: void kotlinCompat$setProperty(android.view.View,java.lang.String,java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderStyle(android.view.View,com.facebook.react.uimanager.style.BorderStyle)
com.facebook.react.modules.common.ModuleDataCleaner: void cleanDataFromModules(com.facebook.react.bridge.ReactContext)
com.facebook.jni.HybridData: boolean isValid()
com.emeraldsanto.encryptedstorage.RNEncryptedStorageModule: void clear(com.facebook.react.bridge.Promise)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task waitThenCallGetOrCreateReactInstanceTaskWithRetries(int,int)
com.facebook.react.views.text.TextTransform$Companion: TextTransform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.Utils: Utils()
androidx.constraintlayout.widget.Barrier: int getType()
com.facebook.react.devsupport.ReleaseDevSupportManager: void setDevSupportEnabled(boolean)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getDefaultThemeDrawable(android.content.Context)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void schedule()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableIOSViewClipToPaddingBox()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
androidx.biometric.CryptoObjectUtils: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject wrapForFingerprintManager(androidx.biometric.BiometricPrompt$CryptoObject)
com.facebook.react.uimanager.common.UIManagerType$Companion: void getDEFAULT$annotations()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: java.lang.String getName()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getName()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: kotlin.enums.EnumEntries getEntries()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String getName()
com.facebook.react.runtime.internal.bolts.Task: Task(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUsedMemory(com.facebook.react.bridge.Promise)
com.facebook.react.modules.websocket.WebSocketModule$Companion: WebSocketModule$Companion()
com.nozbe.watermelondb.WMDatabase: void close()
com.facebook.react.views.image.ReactImageView: ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.uimanager.LayoutShadowNode: void setInsetInline(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollState: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.facebook.react.bridge.JavaOnlyMap: void remove(java.lang.String)
com.facebook.react.devsupport.DevInternalSettings: boolean isDeviceDebugEnabled()
com.facebook.react.HeadlessJsTaskService$createReactContextAndScheduleTask$1: HeadlessJsTaskService$createReactContextAndScheduleTask$1(com.facebook.react.HeadlessJsTaskService,com.facebook.react.jstasks.HeadlessJsTaskConfig,com.facebook.react.ReactHost)
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactHost toReactHost$ReactAndroid_release(android.content.Context,com.facebook.react.runtime.JSRuntimeFactory)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.react.runtime.ReactHostImpl$3: ReactHostImpl$3(com.facebook.react.runtime.ReactHostImpl,java.lang.String,com.facebook.react.devsupport.DevSupportManagerBase,com.facebook.react.runtime.internal.bolts.TaskCompletionSource)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: void onReload()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$7()
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getNativeParent()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.devsupport.interfaces.DevSupportManager: boolean getDevSupportEnabled()
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(android.view.View,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
com.facebook.react.views.common.ContextUtils: java.lang.Object findContextOfType(android.content.Context,java.lang.Class)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void onDraw(android.graphics.Canvas)
com.oblador.keychain.KeychainModule: void setInternetCredentialsForServer(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.nozbe.watermelondb.WMDatabaseDriver: void lambda$migrate$1(com.nozbe.watermelondb.utils.MigrationSet)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.facebook.react.ReactAndroidHWInputDeviceHelper: ReactAndroidHWInputDeviceHelper(com.facebook.react.ReactRootView)
com.BV.LinearGradient.LinearGradientManager: com.BV.LinearGradient.LinearGradientView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactInstanceManager: void lambda$attachRootViewToInstance$6(int,com.facebook.react.uimanager.ReactRoot)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getLastErrorTitle()
com.rnbiometrics.ReactNativeBiometrics: void createKeys(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean animatedShouldSignalBatch()
com.facebook.react.animated.NativeAnimatedNodesManager: void startListeningToAnimatedNodeValue(int,com.facebook.react.animated.AnimatedNodeValueListener)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void stop()
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.String getBorderStyle()
com.facebook.react.bridge.CallbackImpl$Companion: CallbackImpl$Companion()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: void getVisibleVirtualViews(java.util.List)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: void run()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper createReactInstanceUnwrapper(java.lang.String,java.lang.String,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: IPlatformDateTimeFormatter$Year(java.lang.String,int)
com.facebook.hermes.intl.OptionHelpers: java.lang.Object GetNumberOption(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void maybeScheduleDispatchOfBatchedEvents()
androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback getClientCallback()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ShowEvent$Companion: ShowEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.SpringAnimation$PhysicsState: com.facebook.react.animated.SpringAnimation$PhysicsState copy(double,double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableSynchronousStateUpdates()
com.facebook.react.uimanager.PointerEvents$Companion: boolean canChildrenBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
androidx.biometric.BiometricManager: int canAuthenticateWithWeakBiometricOnApi29()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.facebook.react.bridge.DimensionPropConverter: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
com.facebook.react.uimanager.style.ColorStop: ColorStop()
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: com.facebook.react.devsupport.interfaces.DevSupportManager access$getDevSupportManager$p(com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)
androidx.core.view.WindowInsetsCompat$Impl34: boolean isVisible(int)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
com.facebook.react.devsupport.interfaces.StackFrame: org.json.JSONObject toJSON()
com.facebook.react.common.DebugServerException: DebugServerException(java.lang.String,java.lang.Throwable)
androidx.biometric.BiometricFragment$1: void onChanged(java.lang.Object)
com.facebook.react.fabric.FabricUIManager$2: FabricUIManager$2(com.facebook.react.fabric.FabricUIManager,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: void setMethod(java.lang.reflect.Method)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ShadowNodeRegistry: int getRootNodeCount()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.facebook.react.common.assets.ReactFontManager: java.lang.String[] access$getFILE_EXTENSIONS$cp()
com.facebook.react.views.imagehelper.ImageSource: boolean equals(java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String getFontFamily()
com.facebook.react.common.futures.SimpleSettableFuture: boolean isDone()
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(int,okhttp3.ResponseBody)
com.facebook.react.uimanager.RootView: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.util.Set getAllKeys()
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.facebook.react.bridge.BridgeReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: BundleDownloader$processMultipartResponse$completed$1(okhttp3.Response,com.facebook.react.devsupport.BundleDownloader,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
androidx.appcompat.widget.SwitchCompat: void draw(android.graphics.Canvas)
com.facebook.react.uimanager.LengthPercentage$Companion: LengthPercentage$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getName()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasUnseenUpdates()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported32BitAbis(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: ReactTextInputEndEditingEvent(int,int,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.modules.websocket.WebSocketModule: void access$sendEvent(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: int getViewTypeCount()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.mkuczera.RNReactNativeHapticFeedbackModule: void trigger(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.interfaces.StackFrame: int getLine()
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService: ReactNativeFirebaseMessagingHeadlessService()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setUserAuthenticationRequired(boolean,int)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.drawee.view.DraweeView: boolean hasController()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.nozbe.watermelondb.WMDatabaseBridge: void setUpWithMigrations(java.lang.Integer,java.lang.String,java.lang.String,int,int,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: void startScroll(int,int,int,int,int)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.Map getConstants()
androidx.biometric.BiometricPrompt$AuthenticationResult: int getAuthenticationType()
com.facebook.react.modules.share.ShareModule$Companion: ShareModule$Companion()
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.common.SurfaceDelegate createSurfaceDelegate(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.uimanager.style.ComputedBorderRadius: int hashCode()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertParamClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.react.runtime.internal.bolts.Task: java.util.List access$getContinuations$p(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setRole(java.lang.String)
androidx.biometric.BiometricFragment$5: void onChanged(java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation$Companion: PositionAndSizeAnimation$Companion()
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: void execute()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.hermes.intl.LocaleIdentifier: void parseTransformedExtensions(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.react.internal.SystraceSection: void close()
com.reactnativecommunity.cameraroll.NativeCameraRollPermissionModuleSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void doFrame(long)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
com.facebook.react.fabric.mounting.mountitems.MountItem: int getSurfaceId()
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient createClient()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewOutline(com.facebook.react.uimanager.drawable.OutlineDrawable)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.devsupport.ReleaseDevSupportManager: android.util.Pair processErrorCustomizers(android.util.Pair)
com.facebook.react.uimanager.UIViewOperationQueue: void resumeFrameCallback()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: ReactAccessibilityDelegate$1(com.facebook.react.uimanager.ReactAccessibilityDelegate)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.react.devsupport.PackagerStatusCheck$Companion: PackagerStatusCheck$Companion()
com.facebook.react.ReactRootView: void onLayout(boolean,int,int,int,int)
androidx.biometric.BiometricViewModel$1: BiometricViewModel$1(androidx.biometric.BiometricViewModel)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object getNullable()
com.facebook.react.LazyReactPackage$1: boolean hasNext()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.facebook.react.runtime.ReactSurfaceView: boolean hasActiveReactInstance()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.uimanager.OnLayoutEvent: void setY$ReactAndroid_release(int)
com.BV.LinearGradient.LinearGradientManager: LinearGradientManager()
com.facebook.react.devsupport.interfaces.DevSupportManager: android.app.Activity getCurrentActivity()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getReactNativeVersionString()
com.facebook.react.devsupport.DevSettingsActivity: DevSettingsActivity()
com.swmansion.reanimated.NodesManager: java.lang.String obtainProp(int,java.lang.String)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: void recursiveMerge(java.util.Map,java.util.Map)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.facebook.react.uimanager.style.ComputedBorderRadius: boolean equals(java.lang.Object)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderAlpha(int,float)
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setTestID(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: boolean hasCoalescingKey(long)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: int read()
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadStart()
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getReactTag()
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp[] values()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String getName()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.facebook.react.devsupport.ReleaseDevSupportManager: ReleaseDevSupportManager()
androidx.fragment.app.Fragment: boolean isDetached()
com.facebook.react.uimanager.ReactShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.ReactRootView: boolean hasActiveReactInstance()
com.oblador.keychain.cipherStorage.CipherStorageBase: com.oblador.keychain.SecurityLevel securityLevel()
com.facebook.react.runtime.ReactInstance$loadJSBundle$1: ReactInstance$loadJSBundle$1(com.facebook.react.runtime.ReactInstance)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.facebook.react.views.scroll.ReactScrollViewManager$Companion: ReactScrollViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflowInset(int,int,int,int)
com.facebook.react.modules.core.TimingModule$Companion: TimingModule$Companion()
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task isMetroRunning()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.DebugCorePackage: DebugCorePackage()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.react.runtime.ReactSurfaceView: void dispatchJSPointerEvent(android.view.MotionEvent,boolean)
com.facebook.react.views.scroll.ReactScrollView: int correctFlingVelocityY(int)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.uimanager.ReactShadowNode: int getScreenWidth()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$Companion: CxxInspectorPackagerConnection$Companion()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.scroll.ReactAccessibleScrollView: boolean isPartiallyScrolledInView(android.view.View)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,int[])
com.facebook.react.uimanager.TransformHelper: double[] getTranslateForTransformOrigin(float,float,com.facebook.react.bridge.ReadableArray,boolean)
com.facebook.react.runtime.ReactSurfaceImpl$Companion: boolean access$doRTLSwap(com.facebook.react.runtime.ReactSurfaceImpl$Companion,android.content.Context)
com.facebook.react.ReactHost: void onHostLeaveHint(android.app.Activity)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void setFocusBgColor(int)
com.nozbe.watermelondb.WMDatabaseBridge$ParamFunction: java.lang.Object applyParamFunction(com.nozbe.watermelondb.WMDatabaseDriver)
com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle getDefaultHourCycle(com.facebook.hermes.intl.ILocaleObject)
com.zoontek.rnpermissions.RNPermissionsModule: void requestLocationAccuracy(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$1$responseBody$1: void onProgress(long,long,boolean)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
com.facebook.react.runtime.BridgelessAtomicRef$State: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomRight()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewBorder(com.facebook.react.uimanager.drawable.BorderDrawable)
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_END: LogicalEdge$BLOCK_END(java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.bridge.JSBundleLoader$Companion$createAssetLoader$1: JSBundleLoader$Companion$createAssetLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.facebook.react.views.switchview.ReactSwitchEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.common.DebugServerException$Companion: java.lang.String shortenFileName(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$getImagePipeline(com.facebook.react.modules.image.ImageLoaderModule)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.react.views.text.TextLayoutManager: android.text.Spannable getOrCreateSpannableForText(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.BV.LinearGradient.LinearGradientManager: void setAngle(com.BV.LinearGradient.LinearGradientView,float)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.facebook.react.views.modal.ReactModalHostView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: LayoutDeleteAnimation()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void cancelSearch(android.view.View)
com.facebook.react.views.text.TextAttributeProps: void setAccessibilityRole(java.lang.String)
com.facebook.react.views.image.ReactImageView: boolean hasOverlappingRendering()
com.facebook.react.modules.dialog.AlertFragment: AlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle)
com.oblador.keychain.KeychainModule: java.lang.String getSecurityRulesOrDefault(com.facebook.react.bridge.ReadableMap)
com.facebook.react.viewmanagers.RNSScreenContainerManagerDelegate: RNSScreenContainerManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.swmansion.reanimated.ReanimatedUIManagerFactory: ReanimatedUIManagerFactory()
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType[] $values()
com.facebook.react.uimanager.ReactStylesDiffMap: double getDouble(java.lang.String,double)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTreeForTags(int[],com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: java.lang.String toString()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void scheduleMountItemOnViewAttach(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.views.modal.ReactModalHostView: void updateProperties()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreen(java.lang.Object)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderStyle(com.facebook.react.uimanager.style.BorderStyle)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: boolean hasRoundedBorders()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode$Companion: FrescoBasedReactTextInlineImageShadowNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer component4()
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.facebook.react.uimanager.style.BorderColors: boolean equals-impl0(java.lang.Integer[],java.lang.Integer[])
com.facebook.react.views.textinput.ReactTextInputShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: int getPosition()
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setBorderWidth(android.view.View,float)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: com.facebook.react.uimanager.ViewManager getLazyViewManager(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.devsupport.ReleaseDevSupportManager: void reloadSettings()
com.swmansion.rnscreens.ScreenViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: void removeKey(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.facebook.react.util.AndroidVersion: boolean isAtLeastTargetSdk36(android.content.Context)
com.facebook.react.common.DebugServerException$Companion: DebugServerException$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: void setLastScrollDispatchTime(long)
com.facebook.react.devsupport.DevServerHelper$openInspectorConnection$1: DevServerHelper$openInspectorConnection$1(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesClearAll(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: float[] measure(int)
com.facebook.react.modules.network.ProgressiveStringDecoder: java.lang.String decodeNext(byte[],int)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String getName()
com.facebook.react.uimanager.events.EventDispatcherImpl: long getEventCookie(int,short,short)
com.facebook.react.common.mapbuffer.MapBuffer$Entry: com.facebook.react.common.mapbuffer.MapBuffer getMapBufferValue()
androidx.biometric.BiometricManager$DefaultInjector: BiometricManager$DefaultInjector(android.content.Context)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void flashScrollIndicators(java.lang.Object)
com.facebook.react.LazyReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.facebook.react.uimanager.ReactShadowNode: boolean hasUpdates()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: PlatformNumberFormatterAndroid()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders$default(com.facebook.react.modules.fresco.ReactNetworkImageRequest$Companion,com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap,com.facebook.react.modules.fresco.ImageCacheControl,int,java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(com.swmansion.rnscreens.Screen,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
com.facebook.react.animated.ColorAnimatedNode: android.content.Context getContext()
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallReferrer(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManagerDelegate: void kotlinCompat$setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.text.FontMetricsUtil: com.facebook.react.bridge.WritableArray getFontMetrics(java.lang.CharSequence,android.text.Layout,android.text.TextPaint,android.content.Context)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onError(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: DevSupportManagerBase$reload$1(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void setJSResponder(int,int,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.fabric.SurfaceHandlerBinding,android.view.View)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleName()
com.jaudifinance.MainActivity: MainActivity()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component10()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void connect()
com.facebook.react.bridge.WritableArray: void pushNull()
com.facebook.react.bridge.Inspector$Page: int getId()
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableResourceTimingAPI()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.runtime.BridgelessCatalystInstance: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.modules.intent.IntentModule: void invalidate()
com.facebook.react.uimanager.ViewAtIndex: int COMPARATOR$lambda$0(com.facebook.react.uimanager.ViewAtIndex,com.facebook.react.uimanager.ViewAtIndex)
com.facebook.react.runtime.ReactHostDelegate: com.facebook.react.runtime.BindingsInstaller getBindingsInstaller()
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$IWebSocket: void close()
com.facebook.imagepipeline.request.ImageRequest: void recordHashCode(java.util.HashMap)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$deleteView$1: void onAnimationStart(android.view.animation.Animation)
com.facebook.react.animated.NativeAnimatedModule$getValue$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupportedMediaTypeListSync()
com.rnbiometrics.ReactNativeBiometrics: android.app.Activity access$000(com.rnbiometrics.ReactNativeBiometrics)
com.facebook.react.views.text.TextAttributeProps: float getLetterSpacing()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
com.facebook.react.views.common.ContextUtils: ContextUtils()
androidx.biometric.BiometricManager$Api29Impl: int canAuthenticate(android.hardware.biometrics.BiometricManager)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjsinspector_so()
com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetricsIfNotInitialized(android.content.Context)
com.facebook.jni.HybridData: HybridData()
com.facebook.react.bridge.ReadableArrayBuilder: void addNull()
com.swmansion.rnscreens.ScreensModule: void finishTransition(java.lang.Integer,boolean)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createView(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.nozbe.watermelondb.WMDatabaseDriver$SchemaCompatibility: WMDatabaseDriver$SchemaCompatibility()
com.facebook.react.bridge.ReadableNativeMap$Companion: ReadableNativeMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: TransformAnimatedNode$StaticTransformConfig(com.facebook.react.animated.TransformAnimatedNode)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.biometric.BiometricPrompt: void addObservers(androidx.fragment.app.Fragment,androidx.biometric.BiometricViewModel)
com.facebook.react.uimanager.ReactStylesDiffMap: boolean getBoolean(java.lang.String,boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.facebook.react.runtime.internal.bolts.Executors$ImmediateExecutor: void execute(java.lang.Runnable)
androidx.biometric.BiometricManager$Api29Impl: BiometricManager$Api29Impl()
com.facebook.react.views.textinput.ReactEditText: void stripSpansOfKind(android.text.SpannableStringBuilder,java.lang.Class,androidx.core.util.Predicate)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.modules.network.NetworkingModule$Companion: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.react.views.text.TextAttributeProps: float getTextShadowRadius()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int getDrawerState()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void setDelayMs(int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.fragment.app.DialogFragment: void dismissNow()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isGrayscaleEnabled(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.facebook.react.bridge.JavaOnlyMap$Companion: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.facebook.react.animated.SpringAnimation: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.learnium.RNDeviceInfo.RNDeviceModule: java.math.BigInteger getDirTotalCapacity(android.os.StatFs)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object access$getProgressBarCtorLock$cp()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHostSync()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.bridge.UIManager getUIManager()
com.facebook.react.uimanager.events.TouchEvent: boolean verifyMotionEvent()
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: DidJSUpdateUiDuringFrameDetector()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
androidx.biometric.FingerprintDialogFragment: void onPause()
com.swmansion.reanimated.sensor.ReanimatedSensorType: int getType()
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isHighTextContrastEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableMainQueueModulesOnIOS()
com.facebook.react.viewmanagers.DebuggingOverlayManagerDelegate: DebuggingOverlayManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
androidx.biometric.CryptoObjectUtils$Api23Impl: void setBlockModeCBC(android.security.keystore.KeyGenParameterSpec$Builder)
com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)
com.nozbe.watermelondb.WMDatabase: java.lang.String getFromLocalStorage(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void onStartTemporaryDetach()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.ReactDelegate: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType getAnimatedProperty()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor: void run(android.view.View)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.devsupport.RedBoxContentView$reportCompletedListener$1: void onReportError(android.text.SpannedString)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onMeasure(int,int)
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.bridge.NativeModuleRegistry build()
com.facebook.hermes.intl.JSObjects: boolean isObject(java.lang.Object)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.facebook.react.internal.AndroidChoreographerProvider: com.facebook.react.internal.ChoreographerProvider$Choreographer getChoreographer()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getInt(int)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.facebook.react.ReactRootView: void init()
com.oblador.keychain.KeychainModule: void addCipherStorageToMap(com.oblador.keychain.cipherStorage.CipherStorage)
com.oblador.keychain.PrefsStorage: java.lang.String getCipherStorageName(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getNativeParent()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setAutoCapitalize(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: ReactProgressBarViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
com.facebook.hermes.intl.PlatformCollatorAndroid: com.facebook.hermes.intl.IPlatformCollator$Sensitivity getSensitivity()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: android.view.animation.Animation createAnimationImpl$ReactAndroid_release(android.view.View,int,int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: ReactEditText$TextWatcherDelegator(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.modules.statusbar.StatusBarModule$Companion: StatusBarModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.mounting.MountingManager: void experimental_prefetchResource(com.facebook.react.bridge.ReactContext,java.lang.String,int,int,com.facebook.react.common.mapbuffer.MapBuffer)
com.oblador.keychain.KeychainModule: boolean getUseBiometry(java.lang.String)
com.nozbe.watermelondb.WMDatabaseBridge: WMDatabaseBridge(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.CoreModulesPackage: CoreModulesPackage(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,boolean,int)
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp[] $values()
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$queryIds$2(java.lang.String,com.facebook.react.bridge.ReadableArray,com.nozbe.watermelondb.WMDatabaseDriver)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollView$1: ReactScrollView$1(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)
org.pgsqlite.SQLitePlugin: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.biometric.FingerprintDialogFragment: androidx.biometric.FingerprintDialogFragment newInstance()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType getInstanceById(int)
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType valueOf(java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback: void onConnected()
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didClose()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
androidx.core.view.WindowInsetsCompat$BuilderImpl34: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: float getMaxSize(int)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.facebook.react.devsupport.ChangeBundleLocationDialog: void show$lambda$3(android.app.AlertDialog,android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallerPackageNameSync()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.devsupport.interfaces.DevSupportManager: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody getEmptyBody(java.lang.String)
com.facebook.react.uimanager.events.TouchEvent: void init(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void updateScrollPosition()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper$Companion: ReactEditTextInputConnectionWrapper$Companion()
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.facebook.react.views.view.MeasureUtil: MeasureUtil()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor$ReactAndroid_release(java.lang.Integer)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
com.facebook.react.modules.websocket.WebSocketModule$Companion: java.lang.String access$getDefaultOrigin(com.facebook.react.modules.websocket.WebSocketModule$Companion,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.facebook.react.runtime.ReactInstance: void getMHybridData$annotations()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.ReactRootView: void setRootViewTag(int)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.internal.interop.InteropEventEmitter$Companion: InteropEventEmitter$Companion()
com.facebook.react.runtime.BridgelessReactContext: void setSourceURL(java.lang.String)
com.facebook.react.animated.FrameBasedAnimationDriver$Companion: FrameBasedAnimationDriver$Companion()
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.react.uimanager.ViewProps: boolean isLayoutOnly(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.nozbe.watermelondb.Connection: java.util.ArrayList getQueue()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setScreenOrientation(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.devsupport.LogBoxModule: void hide$lambda$1(com.facebook.react.devsupport.LogBoxModule)
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType[] values()
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: ViewManagersPropertyCache$DynamicPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.swmansion.reanimated.Utils$1: void run()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.ArrayList getStack()
com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback: void onMessage(okio.ByteString)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.facebook.react.bridge.NativeMap$Companion: NativeMap$Companion()
com.facebook.react.uimanager.JSPointerDispatcher: int[] getChildOffsetRelativeToRoot(android.view.View)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getColor()
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.facebook.react.uimanager.style.ColorEdges: int getBottom()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: LinearGradient$Direction$Keyword(com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType)
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getSourceURL()
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.biometric.BiometricPrompt$PromptInfo: boolean isConfirmationRequired()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getChildAt(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost$default(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.util.List,kotlin.jvm.functions.Function1,com.facebook.react.runtime.BindingsInstaller,int,java.lang.Object)
com.facebook.hermes.intl.LocaleMatcher: java.lang.String[] lookupSupportedLocales(java.lang.String[])
com.facebook.react.defaults.DefaultReactHostDelegate: DefaultReactHostDelegate(java.lang.String,com.facebook.react.bridge.JSBundleLoader,java.util.List,com.facebook.react.runtime.JSRuntimeFactory,com.facebook.react.runtime.BindingsInstaller,kotlin.jvm.functions.Function1,com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.TextAttributes: void setHeightOfTallestInlineViewOrImage(float)
androidx.biometric.BiometricFragment$PromptExecutor: void execute(java.lang.Runnable)
com.facebook.react.uimanager.ThemedReactContext: boolean hasCurrentActivity()
com.facebook.react.common.assets.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,int,android.content.res.AssetManager)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1: void onAnimationEnd(android.view.animation.Animation)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void printSurfaceState()
androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile build()
com.facebook.react.views.swiperefresh.RefreshEvent: RefreshEvent(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getAvailableLocationProviders(com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacityOldSync()
com.facebook.react.uimanager.ReactRoot: void setRootViewTag(int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void cancelAnimation(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setState(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.bridge.ReadableMap,android.content.Context)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType valueOf(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: java.util.List addCxxReactPackage$lambda$3$lambda$2(kotlin.jvm.functions.Function1,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStyleWidth()
com.facebook.drawee.drawable.ForwardingDrawable: void setTransformCallback(com.facebook.drawee.drawable.TransformCallback)
androidx.biometric.FingerprintDialogFragment: void onCreate(android.os.Bundle)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void setHighlightedElementsRectangles(java.util.List)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableFontScaleChangesUpdatingLayout()
com.facebook.react.runtime.internal.bolts.Task: boolean trySetError$ReactAndroid_release(java.lang.Exception)
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow copy$default(com.facebook.react.uimanager.style.BoxShadow,float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean,int,java.lang.Object)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getParent()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.facebook.react.ReactActivityDelegate: void onActivityResult(int,int,android.content.Intent)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorage(com.facebook.react.bridge.Promise)
com.facebook.react.ReactInstanceManager: void onHostResume(android.app.Activity)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.uimanager.ThemedReactContext: void handleException(java.lang.Exception)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
androidx.biometric.BiometricViewModel: void setFingerprintDialogHelpMessage(java.lang.CharSequence)
com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode defaultTileMode()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.MapBuffer$DataType getType()
com.facebook.react.views.view.ReactViewGroup$1: ReactViewGroup$1(com.facebook.react.views.view.ReactViewGroup,android.view.View)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationStart(android.animation.Animator)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int getCounter()
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout(float,float)
com.facebook.react.runtime.ReactHostImpl: void lambda$isMetroRunning$27(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl copy$default(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,int,java.lang.Object)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.Boolean isRunningInTestLab()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacity(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactEditText: void stripStyleEquivalentSpans(android.text.SpannableStringBuilder)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightPercent(float)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSendAccessibilityEvent(int,int)
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setTransparent(android.view.View,boolean)
com.facebook.react.ReactActivity$1: void handleOnBackPressed()
com.facebook.react.views.image.ReactImageView: boolean shouldResize(com.facebook.react.views.imagehelper.ImageSource)
com.facebook.hermes.intl.LocaleObjectICU: void setUnicodeExtensions(java.lang.String,java.util.ArrayList)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] $values()
com.swmansion.rnscreens.SearchBarManager: void cancelSearch(android.view.View)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents parsePointerEvents(java.lang.String)
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String resolveCalendarAlias(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutStart()
com.facebook.react.views.textinput.ReactEditText: void maybeSetText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.views.progressbar.ProgressBarContainerView$Companion: ProgressBarContainerView$Companion()
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void willMountItems(java.util.List)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightStretchJNI(long)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onOpen$lambda$2(com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier access$501(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.devsupport.FpsView: void onAttachedToWindow()
com.facebook.react.internal.interop.InteropEventEmitter$Companion: InteropEventEmitter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.JSPointerDispatcher: void handleMotionEventHelper(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher,boolean)
com.facebook.react.bridge.DynamicFromArray: void access$setIndex$p(com.facebook.react.bridge.DynamicFromArray,int)
com.facebook.react.uimanager.events.PointerEvent$1: PointerEvent$1(com.facebook.react.uimanager.events.PointerEvent)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.facebook.react.uimanager.BaseViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.facebook.react.modules.core.JavaTimerManager: void onHeadlessJsTaskStart(int)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,int,java.lang.Throwable)
com.facebook.react.devsupport.BridgeDevSupportManager$Companion: BridgeDevSupportManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
com.facebook.react.views.text.ReactTextView: void setBorderColor(int,java.lang.Integer)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getLegacyJavaModule(java.lang.String)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.views.scroll.OnScrollDispatchHelper: boolean onScrollChanged(int,int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component7()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate(com.facebook.jni.HybridData)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.statusbar.StatusBarModule: float getStatusBarHeightPx()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] $values()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.facebook.react.bridge.JavaOnlyArray: int size()
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.facebook.react.uimanager.ReactShadowNode: void setJustifyContent(com.facebook.yoga.YogaJustify)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl: void respond(java.lang.Object)
com.facebook.react.views.text.TextLayoutManager: int getTextGravity(com.facebook.react.common.mapbuffer.MapBuffer,android.text.Spannable,int)
com.facebook.react.devsupport.BundleDownloader: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,okhttp3.Request$Builder)
androidx.biometric.BiometricFragment: boolean isFingerprintDialogNeededForCrypto()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.View,int)
androidx.drawerlayout.widget.DrawerLayout: void close()
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setDescription(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1: java.util.Iterator iterator()
com.facebook.react.views.textinput.ReactTextInputManager$Companion: ReactTextInputManager$Companion()
com.facebook.react.views.text.ReactTextShadowNode: int getTextAlign()
com.facebook.react.animated.NativeAnimatedModule$setAnimatedNodeValue$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void kotlinCompat$receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableMainQueueModulesOnIOS()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onAttachedToWindow()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.views.debuggingoverlay.TraceUpdate: int getColor()
com.facebook.react.uimanager.style.BoxShadow: boolean equals(java.lang.Object)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: java.lang.String toString()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.util.RNLog: void t(java.lang.String)
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableMainQueueModulesOnIOS()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: IPlatformDateTimeFormatter$Day(java.lang.String,int)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,boolean,android.content.res.AssetManager)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setAlpha(int)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean disableMainQueueSyncDispatchIOS()
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect(java.util.Set)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: void close()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.facebook.react.BaseReactPackage$ModuleHolderProvider: BaseReactPackage$ModuleHolderProvider(com.facebook.react.BaseReactPackage,java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.uimanager.events.NativeGestureUtil: NativeGestureUtil()
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean shouldSupportLegacyPackages()
com.facebook.react.uimanager.events.FabricEventDispatcher: void scheduleDispatchOfBatchedEvents()
com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy copy()
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.ReactContext getReactContext(android.view.View)
com.facebook.hermes.intl.LocaleObjectAndroid: java.lang.String toCanonicalTag()
com.facebook.react.animated.NativeAnimatedModule: void access$setEnqueuedAnimationOnFrame$p(com.facebook.react.animated.NativeAnimatedModule,boolean)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String getDefaultTimeZone(com.facebook.hermes.intl.ILocaleObject)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: TabNavigatorObserver$FragmentLifecycleCallbacks(com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver,androidx.fragment.app.Fragment)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setFractionDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.views.text.TextLayoutManager$1: android.text.TextPaint initialValue()
com.facebook.hermes.intl.UnicodeExtensionKeys$2: UnicodeExtensionKeys$2()
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: EventDispatcherImpl$ScheduleDispatchFrameCallback(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: SharedTransitionManager$SnapshotTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
com.facebook.react.modules.statusbar.StatusBarModule$setTranslucent$1: StatusBarModule$setTranslucent$1(android.app.Activity,boolean,com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getPreferredContentInsetStart()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setIsLayoutOnly(boolean)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void resetDelegate(android.view.View,boolean,int)
com.facebook.react.jstasks.NoRetryPolicy: int getDelay()
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enablePreparedTextLayout()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getBridgelessEnabled$annotations()
com.facebook.hermes.intl.JSObjects$NullObject: JSObjects$NullObject()
com.facebook.react.runtime.BridgelessAtomicRef: BridgelessAtomicRef(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.oblador.keychain.cipherStorage.CipherStorageBase: CipherStorageBase()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: com.facebook.react.bridge.ReadableMap getExtraData()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateDestroyTask$37(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: android.icu.text.MeasureFormat$FormatWidth getFormatWidth()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] localArray_delegate$lambda$0(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.devsupport.ReleaseDevSupportManager: void setPackagerLocationCustomizer(com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.text.internal.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: android.security.keystore.KeyInfo getKeyInfo(java.security.Key)
com.facebook.react.runtime.internal.bolts.Task: kotlin.Unit continueWithTask$lambda$11$lambda$10(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceId()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void markActiveTouchForTag(int)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatTextView: void access$601(androidx.appcompat.widget.AppCompatTextView,int,int,int,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: DebuggingOverlay(android.content.Context)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: void configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,java.lang.String,com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher,com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute,com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName,com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle,java.lang.Object,com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode$Companion: ReactTextInputShadowNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
com.facebook.react.uimanager.events.PointerEvent: boolean isClickEvent()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.hermes.intl.IPlatformCollator$Usage: IPlatformCollator$Usage(java.lang.String,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.facebook.react.fabric.FabricUIManager: void addUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.common.assets.ReactFontManager: com.facebook.react.common.assets.ReactFontManager getInstance()
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateSync()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasText(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.uimanager.ViewManager,boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper: android.graphics.Point predictFinalScrollPosition(android.view.ViewGroup,int,int,int,int)
com.facebook.hermes.intl.IntlTextUtils: boolean isUnicodeVariantSubtag(java.lang.CharSequence,int,int)
com.reactnativecommunity.asyncstorage.SerialExecutor: void scheduleNext()
com.learnium.RNDeviceInfo.RNDeviceModule: void isLocationEnabled(com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.bridge.WritableMap getEventData()
com.swmansion.reanimated.NativeProxy$1: void cancelAnimation(int)
com.facebook.react.bridge.UIManager: void sweepActiveTouchForTag(int,int)
com.facebook.hermes.intl.LocaleResolver: LocaleResolver()
com.facebook.react.bridge.ReadableArrayBuilder: void add(double)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.react.views.text.TextAttributeProps: float getEffectiveLineHeight()
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.modules.fresco.SystraceRequestListener: void onProducerEvent(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackButtonInCustomView(android.view.View,boolean)
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
com.nozbe.watermelondb.WMDatabaseBridge: void lambda$onCatalystInstanceDestroy$10()
com.reactnativecommunity.asyncstorage.AsyncStoragePackage$1: java.util.Map getReactModuleInfos()
com.facebook.hermes.intl.LocaleObjectAndroid: LocaleObjectAndroid(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactShadowNode: void setPositionType(com.facebook.yoga.YogaPositionType)
com.reactnativecommunity.asyncstorage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getDBError(java.lang.String)
com.oblador.keychain.KeychainModule: java.util.Map getConstants()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean disableMainQueueSyncDispatchIOS()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: TurboModuleInteropUtils()
com.facebook.react.views.image.MultiPostprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: void initialize(java.text.DecimalFormat,com.facebook.hermes.intl.ILocaleObject,com.facebook.hermes.intl.IPlatformNumberFormatter$Style)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: boolean isCollapsed()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.swmansion.rnscreens.ScreenViewManager: void removeViewAt(com.swmansion.rnscreens.Screen,int)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunning()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isContentReady()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.ReactInstanceDevHelper createDevHelperInterface()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler: void reportJsException(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setHideWhenScrolling(android.view.View,boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle()
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightTraceUpdates(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactAndroidHWInputDeviceHelper: void clearFocus()
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ScrollEventType$Companion: ScrollEventType$Companion()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.nozbe.watermelondb.WMDatabaseDriver: WMDatabaseDriver(android.content.Context,java.lang.String,com.nozbe.watermelondb.utils.MigrationSet,boolean)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void pause()
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener: void onProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObjectString(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey: CipherStorageBase$SelfDestroyKey(com.oblador.keychain.cipherStorage.CipherStorageBase,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setSrc(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
androidx.biometric.BiometricFragment: int checkForFingerprintPreAuthenticationErrors(androidx.core.hardware.fingerprint.FingerprintManagerCompat)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.views.text.ReactTextShadowNode$2: float baseline(com.facebook.yoga.YogaNode,float,float)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.facebook.hermes.intl.LocaleObjectAndroid: void ensureNotDirty()
com.facebook.react.devsupport.PerftestDevSupportManager: void startInspector()
com.facebook.react.uimanager.ShadowNodeRegistry$SingleThreadAsserter: ShadowNodeRegistry$SingleThreadAsserter(com.facebook.react.uimanager.ShadowNodeRegistry)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.facebook.react.BaseReactPackage$ModuleHolderProvider: java.lang.Object get()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.facebook.react.views.text.ReactTextView: void onMeasure(int,int)
com.facebook.react.modules.devloading.DevLoadingModule$Companion: DevLoadingModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
androidx.biometric.BiometricPrompt: BiometricPrompt(androidx.fragment.app.FragmentActivity,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)
com.facebook.react.views.textinput.ReactEditText: void setPlaceholder(java.lang.String)
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMinSize(int)
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.common.ReleaseLevel: kotlin.enums.EnumEntries getEntries()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: java.lang.String getSkeleonSymbol()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult getResult()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: ScreensHelper()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.Object updateState(com.swmansion.rnscreens.ScreenStackHeaderSubview,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.facebook.hermes.intl.LocaleObjectICU: void ensureNotDirty()
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$FrameViewHolder: android.widget.TextView getFileView()
com.facebook.hermes.intl.PlatformCollatorAndroid: PlatformCollatorAndroid()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: int getInsetBottom()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableFixForParentTagDuringReparenting()
com.facebook.react.modules.dialog.DialogModule$Companion: void getFRAGMENT_TAG$ReactAndroid_release$annotations()
com.facebook.react.fabric.mounting.MountItemDispatcher: void addViewCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void reparentSharedViewsForCurrentTransition(java.util.List)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreact_devsupportjni_so()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.module.model.ReactModuleInfo$Companion: boolean classIsTurboModule(java.lang.Class)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
androidx.core.widget.NestedScrollView: androidx.core.view.ScrollFeedbackProviderCompat getScrollFeedbackProvider()
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.modules.intent.IntentModule$waitForActivityAndGetInitialURL$1: IntentModule$waitForActivityAndGetInitialURL$1(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.uimanager.ViewManagersPropertyCache$1: ViewManagersPropertyCache$1(int)
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.modules.blob.BlobProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unsubscribeFromKeyboardEvents(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewRecycling()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.facebook.react.runtime.ReactHostInspectorTarget: void sendDebuggerResumeCommand()
com.reactnativecommunity.cameraroll.CameraRollModule: void deletePhotos(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlex(float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.modules.debug.DevMenuModule$Companion: DevMenuModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(android.view.View,boolean)
com.facebook.react.runtime.BridgelessCatalystInstance: void handleMemoryPressure(int)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(java.lang.Integer)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.oblador.keychain.KeychainModuleBuilder: com.oblador.keychain.KeychainModule build()
com.facebook.react.fabric.SurfaceHandlerBinding$Companion: SurfaceHandlerBinding$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.rnbiometrics.CreateSignatureCallback: CreateSignatureCallback(com.facebook.react.bridge.Promise,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: LayoutShadowNode$MutableYogaValue(com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue)
com.facebook.react.uimanager.LengthPercentage: float resolve(float)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: void replacePatternChars(java.lang.StringBuilder,char[],char)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void draw(android.graphics.Canvas)
com.facebook.react.BaseReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.PlatformNumberFormatterICU: java.lang.String getDefaultNumberingSystem(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isYogaLeafNode()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.runtime.ReactSurfaceView: java.lang.String getJSModuleName()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.facebook.react.animated.NativeAnimatedModule: void access$enqueueFrameCallback(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.text.ReactTextView: void updateView()
com.facebook.react.modules.network.OkHttpClientProvider: OkHttpClientProvider()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasNewLayout()
com.facebook.react.packagerconnection.FileIoHandler$Companion: FileIoHandler$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
androidx.biometric.ErrorUtils: java.lang.String getFingerprintErrorString(android.content.Context,int)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation$Companion: AbstractLayoutAnimation$Companion()
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
com.facebook.react.views.modal.ReactModalHostView$Companion: ReactModalHostView$Companion()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.facebook.react.modules.core.JavaTimerManager: java.lang.Object access$getIdleCallbackGuard$p(com.facebook.react.modules.core.JavaTimerManager)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.uimanager.ViewManagerResolver: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: UIViewOperationQueue$LayoutUpdateFinishedOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: void onReload()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStackPresentation(android.view.View,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: UIViewOperationQueue$ChangeJSResponderOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,boolean,boolean)
com.facebook.react.views.text.TextLayoutManager: void deleteCachedSpannableForTag(int)
com.facebook.react.devsupport.MultipartStreamReader: void emitProgress(java.util.Map,long,boolean,com.facebook.react.devsupport.MultipartStreamReader$ChunkListener)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String getEventName()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderWidth(int,float)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.oblador.keychain.DeviceAvailability: boolean isPermissionsGranted(android.content.Context)
com.facebook.react.uimanager.events.PointerEventHelper: int getEventCategory(java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: UIManagerModule$MemoryTrimCallback()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.views.scroll.ReactScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.swmansion.rnscreens.ScreenFooter: int getReactWidth()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactDelegate: com.facebook.react.ReactHost getReactHost()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean disableMountItemReorderingAndroid()
com.facebook.drawee.view.DraweeView: void onDetach()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: java.lang.String dangerouslyForceOverride(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.fabric.events.EventBeatManager: void onBatchEventDispatched()
com.facebook.react.uimanager.ReactShadowNode: void setGap(float)
com.facebook.react.uimanager.StateWrapper: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
com.facebook.react.modules.fresco.FrescoModule$Companion: FrescoModule$Companion()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point getLastStateUpdateScroll()
com.facebook.react.uimanager.style.CornerRadii: java.lang.String toString()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: void run(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] $values()
com.facebook.react.animated.NativeAnimatedNodesManager: void disconnectAnimatedNodes(int,int)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.react.common.futures.SimpleSettableFuture: SimpleSettableFuture()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.annotations.ReactProp: boolean defaultBoolean()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: IPlatformNumberFormatter$CurrencyDisplay(java.lang.String,int)
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl: void error(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void incrementPendingJSCalls()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
com.facebook.react.uimanager.style.LinearGradient$Companion: com.facebook.react.uimanager.style.Gradient parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.intent.IntentModule$waitForActivityAndGetInitialURL$1: void onHostDestroy()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.views.text.PreparedLayoutTextView$Companion: java.util.List access$filterClickableSpans(com.facebook.react.views.text.PreparedLayoutTextView$Companion,java.lang.CharSequence)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.runtime.BridgelessReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: ReactTextPaintHolderSpan(android.text.TextPaint)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateState(int,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.packagerconnection.RequestOnlyHandler: RequestOnlyHandler()
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.DevServerHelper: boolean getJSMinifyMode()
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: boolean setItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: ReactProgressBarViewManager$Companion()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: FabricUIManager$DispatchUIFrameCallback(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key extractKey(java.security.KeyStore,java.lang.String,java.util.concurrent.atomic.AtomicInteger)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.lang.String format(double)
com.facebook.react.views.textinput.ReactEditText: void onFinishTemporaryDetach()
com.facebook.react.devsupport.RedBoxContentView: void init()
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.RedBoxHandler getRedBoxHandler()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object verifyValue(int,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
okhttp3.ResponseBody: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean commonTestFlag()
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: EventDispatcherImpl$DispatchEventsRunnable(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getWindowDisplayMetrics()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int,boolean)
androidx.biometric.FingerprintDialogFragment: boolean shouldAnimateForTransition(int,int)
androidx.biometric.BiometricFragment: void onAuthenticationHelp(java.lang.CharSequence)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData getAuthenticationError()
com.facebook.react.views.textinput.ReactEditText: boolean access$getContextMenuHidden$p(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.facebook.react.runtime.BridgelessAtomicRef: void setValue(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: int predictFinalScrollPosition(int)
com.facebook.react.views.textinput.ReactEditText: boolean shouldSubmitOnReturn()
com.swmansion.reanimated.sensor.ReanimatedSensor: void cancel()
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
com.facebook.react.packagerconnection.NotificationOnlyHandler: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.facebook.react.uimanager.FilterHelper: FilterHelper()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightMaxContentJNI(long)
com.facebook.hermes.intl.LocaleMatcher: com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult bestFitMatch(java.lang.String[])
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.react.views.text.internal.span.CustomStyleSpan: void updateMeasureState(android.text.TextPaint)
com.facebook.react.ReactRootView: boolean shouldDispatchJSTouchEvent(android.view.MotionEvent)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendTouchExplorationChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.uimanager.events.TouchEvent$Companion: com.facebook.react.uimanager.events.TouchEvent obtain(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.hermes.intl.JSObjects: java.lang.Object newNumber(double)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle[] $values()
com.facebook.react.ReactActivityDelegate: boolean onNewIntent(android.content.Intent)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.facebook.react.interfaces.fabric.ReactSurface: com.facebook.react.interfaces.TaskInterface start()
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeExtensionKey()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.react.devsupport.DevSupportManagerBase: boolean getDevSupportEnabled()
com.facebook.hermes.intl.LocaleMatcher: java.lang.String[] getAvailableLocales()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableResourceTimingAPI()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableNativeCSSParsing()
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.react.internal.AndroidChoreographerProvider: com.facebook.react.internal.AndroidChoreographerProvider getInstance()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createInvertEffect(float,android.graphics.RenderEffect)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.PackageList: java.util.ArrayList getPackages()
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: void onSuccess()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.facebook.react.modules.statusbar.StatusBarModule$Companion: StatusBarModule$Companion()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFontScaleChangesUpdatingLayout()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: IPlatformDateTimeFormatter$HourCycle(java.lang.String,int)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.facebook.react.bridge.ReactIgnorableMountingException$Companion: boolean isIgnorable(java.lang.Throwable)
androidx.drawerlayout.widget.DrawerLayout: void open()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderRGB(int,float)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: int hashCode()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.react.runtime.BridgelessAtomicRef: void reset()
com.facebook.react.modules.intent.IntentModule: void waitForActivityAndGetInitialURL(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSBundleFile(java.lang.String)
com.facebook.react.devsupport.DevServerHelper$Companion: java.lang.String getSHA256(java.lang.String)
com.facebook.react.packagerconnection.FileIoHandler$2: FileIoHandler$2(com.facebook.react.packagerconnection.FileIoHandler)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.lang.String getDefaultCalendarName(com.facebook.hermes.intl.ILocaleObject)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.react.devsupport.interfaces.DevOptionHandler: void onOptionSelected()
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.defaults.DefaultReactNativeHost$getUIManagerProvider$1$viewManagerRegistry$1: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.facebook.react.uimanager.IViewGroupManager: void removeViewAt(android.view.View,int)
com.facebook.react.runtime.ReactSurfaceView: void onMeasure(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableLayoutAnimationsOnIOS()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean fuseboxEnabledRelease()
com.swmansion.worklets.WorkletsModule: void invalidate()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: IPlatformDateTimeFormatter$Era(java.lang.String,int)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.facebook.react.views.image.ScaleTypeStartInside$Companion: ScaleTypeStartInside$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView)
com.facebook.react.views.modal.ReactModalHostView: boolean getTransparent()
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Float getOutlineOffset(android.view.View)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener: void onViewFound(android.view.View)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
com.facebook.react.devsupport.DevSupportManagerBase: void showNewError(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.interfaces.ErrorType)
com.facebook.react.ReactRootView: void unmountReactApplication()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getProductSync()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap localMap_delegate$lambda$2(com.facebook.react.bridge.ReadableNativeMap)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.modules.network.NetworkingModule$sendRequestInternal$$inlined$-addNetworkInterceptor$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.facebook.react.ReactInstanceManager: void lambda$runCreateReactContextOnNewThread$1(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag$lambda$0(com.facebook.react.modules.camera.ImageStoreManager,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onHostResume()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.facebook.react.runtime.BridgelessReactContext: void destroy()
com.facebook.react.packagerconnection.RequestOnlyHandler: void onNotification(java.lang.Object)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.facebook.react.reactperflogger.NativeModulePerfLogger: NativeModulePerfLogger()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineWidth(android.view.View,float)
com.nozbe.watermelondb.WMDatabaseDriver: WMDatabaseDriver(android.content.Context,java.lang.String,boolean)
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object getInitialValue()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: void getInstance$annotations()
com.swmansion.reanimated.NodesManager: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTranslucent(android.view.View,boolean)
com.facebook.react.uimanager.ReactCompoundView: int reactTagForTouch(float,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void disableFpsListener()
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider: ReactNativeFirebaseAppInitProvider()
com.facebook.react.uimanager.UIImplementation: void removeRootView(int)
com.facebook.react.bridge.JSBundleLoader$Companion$createFileLoader$1: JSBundleLoader$Companion$createFileLoader$1(java.lang.String,java.lang.String,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$1$1: void runGuarded()
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event coalesce(com.facebook.react.uimanager.events.Event)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.runtime.BindingsInstaller getBindingsInstaller()
com.facebook.react.module.model.ReactModuleInfo: ReactModuleInfo(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer access$readMapBufferValue(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.views.text.TextAttributes: float getHeightOfTallestInlineViewOrImage()
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchSynchronous(com.facebook.react.uimanager.events.Event)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDisplay(com.facebook.react.bridge.Promise)
com.nozbe.watermelondb.WMDatabase: java.lang.Boolean isOpen()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.biometric.BiometricFragment$4: BiometricFragment$4(androidx.biometric.BiometricFragment)
com.facebook.react.views.scroll.ReactScrollView: void handlePostTouchScrolling(int,int)
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: java.lang.Object next()
androidx.biometric.FingerprintDialogFragment$4: FingerprintDialogFragment$4(androidx.biometric.FingerprintDialogFragment)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.biometric.FingerprintDialogFragment$Api21Impl: void startAnimation(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(java.util.List)
com.facebook.react.uimanager.JSPointerDispatcher: void onMove(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsForTests: com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor setUp$lambda$0()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.facebook.react.devsupport.RedBoxContentView$reportCompletedListener$1: RedBoxContentView$reportCompletedListener$1(com.facebook.react.devsupport.RedBoxContentView)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isAnimationFpsDebugEnabled()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean animatedShouldSignalBatch()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load()
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: SurfaceMountingManager$2(com.facebook.react.fabric.mounting.SurfaceMountingManager,int,int,int,android.view.ViewGroup)
androidx.biometric.BiometricViewModel: void setNegativeButtonTextOverride(java.lang.CharSequence)
com.facebook.react.views.text.TextAttributes: void setFontSize(float)
com.facebook.react.devsupport.BundleDownloader$processMultipartResponse$completed$1: void onChunkProgress(java.util.Map,long,long)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.swmansion.reanimated.Utils$1: Utils$1(java.lang.Runnable[])
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableAccessibilityOrder()
com.facebook.react.bridge.ReadableNativeMap: long getLong(java.lang.String)
com.facebook.hermes.intl.UnicodeExtensionKeys$5: UnicodeExtensionKeys$5()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.text.ReactRawTextShadowNode: boolean isVirtual()
com.learnium.RNDeviceInfo.RNDeviceModule: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,java.lang.Object)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.facebook.react.animated.NativeAnimatedNodesManager: java.lang.String normalizeEventName(java.lang.String)
com.facebook.react.uimanager.style.ComputedBorderRadius: ComputedBorderRadius(com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii)
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
com.facebook.react.common.ShakeDetector: void onAccuracyChanged(android.hardware.Sensor,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
com.facebook.react.modules.dialog.AlertFragment$Companion$getAccessibleTitle$1: AlertFragment$Companion$getAccessibleTitle$1(android.widget.TextView)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: ReactFontManager$TypefaceStyle(int)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: void hide()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void removeCoalescingKey(long)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void removeListeners(java.lang.Integer)
androidx.security.crypto.EncryptedSharedPreferences: android.content.SharedPreferences create(android.content.Context,java.lang.String,androidx.security.crypto.MasterKey,androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme,androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: LayoutAnimations$Types()
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.facebook.react.views.text.TextAttributeProps: float getTextShadowOffsetDx()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config$Companion: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config fromReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setDevSupportManagerFactory(com.facebook.react.devsupport.DevSupportManagerFactory)
com.rnbiometrics.ReactNativeBiometrics: void createSignature(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactFragment$Builder: ReactFragment$Builder()
com.facebook.react.views.switchview.ReactSwitch: void setColor(android.graphics.drawable.Drawable,java.lang.Integer)
com.facebook.react.modules.share.ShareModule$Companion: ShareModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjscruntime_so()
com.facebook.hermes.intl.PlatformCollatorAndroid: java.lang.String[] getAvailableLocales()
com.facebook.react.views.text.TextAttributeProps: float getFloatProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,float)
androidx.biometric.BiometricFragment: void connectViewModel()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int getId()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.swmansion.reanimated.ReanimatedModule: void lambda$willDispatchViewUpdates$0(java.util.ArrayList,com.facebook.react.fabric.interop.UIBlockViewResolver)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getItemStartOffset(int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonDisplayMode(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: ReadableNativeMap$keySetIterator$1(java.lang.String[])
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float)
androidx.biometric.FingerprintDialogFragment$Api21Impl: FingerprintDialogFragment$Api21Impl()
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: boolean isEmpty()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.facebook.react.views.scroll.ScrollEvent: androidx.core.util.Pools$SynchronizedPool access$getEVENTS_POOL$cp()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.ReactApplication: com.facebook.react.ReactHost getReactHost()
com.facebook.react.jstasks.HeadlessJsTaskContext: boolean isTaskRunning(int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component5()
com.facebook.react.views.image.ReactImageView: void onDraw(android.graphics.Canvas)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.uimanager.events.BatchEventDispatchedListener: void onBatchEventDispatched()
com.facebook.react.uimanager.JSPointerDispatcher: void handleHitStateDivergence(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
com.facebook.react.animated.SpringAnimation: boolean isOvershooting()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)
com.facebook.react.views.imagehelper.ImageSource: boolean isResource()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableAccessibilityOrder()
com.facebook.react.views.scroll.ReactScrollView: android.view.View focusSearch(android.view.View,int)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void onTransitionToBridgeIdle()
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$Entry entryAt(int)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.devsupport.DevInternalSettings: void addMenuItem(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key tryGenerateRegularSecurityKey(java.lang.String,boolean)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: DispatchStringCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.nozbe.watermelondb.WMDatabaseBridge: void batch(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ThemedReactContext: boolean hasReactInstance()
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.uimanager.ReactShadowNode getNode(int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addEventToEventsToDispatch(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
com.facebook.react.ReactFragment: com.facebook.react.ReactHost getReactHost()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.hermes.intl.PlatformCollatorICU: com.facebook.hermes.intl.IPlatformCollator$Sensitivity getSensitivity()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$1$1: ReactModalHostView$DialogRootViewGroup$updateState$1$1(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void handleException(java.lang.Throwable)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: ReactPackageTurboModuleManagerDelegate(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.jni.HybridData)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.views.image.MultiPostprocessor: com.facebook.imagepipeline.request.Postprocessor from(java.util.List)
com.facebook.react.ReactInstanceManager: void onConfigurationChanged(android.content.Context,android.content.res.Configuration)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.ReactInstanceManager getReactInstanceManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.JSCInstance$Companion: JSCInstance$Companion()
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.style.LinearGradient: android.graphics.Shader getShader(float,float)
com.facebook.react.ReactActivity: void invokeDefaultOnBackPressed()
com.facebook.react.uimanager.UIImplementation: void assertNodeDoesNotNeedCustomLayoutForChildren(com.facebook.react.uimanager.ReactShadowNode)
androidx.biometric.BiometricManager: int canAuthenticate()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.biometric.CryptoObjectUtils$Api30Impl: CryptoObjectUtils$Api30Impl()
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$unsafeQueryRaw$3(java.lang.String,com.facebook.react.bridge.ReadableArray,com.nozbe.watermelondb.WMDatabaseDriver)
com.facebook.react.uimanager.events.EventEmitterImpl: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.learnium.RNDeviceInfo.RNDeviceModule: void isPinOrFingerprintSet(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: void setBorderWidth(int,float)
com.facebook.react.bridge.ReadableMapBuilder: void put(java.lang.String,double)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.runtime.ReactLifecycleStateManager: void moveToOnHostResume(com.facebook.react.bridge.ReactContext,android.app.Activity)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.uimanager.style.BoxShadow$Companion: BoxShadow$Companion()
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopEnd()
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.text.TextAttributeProps: void setFontStyle(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion: ReactQueueConfigurationImpl$Companion()
com.facebook.react.ReactRootView: void onViewAdded(android.view.View)
com.facebook.react.runtime.BridgelessReactContext: boolean hasReactInstance()
com.facebook.react.animated.AnimatedNode: java.lang.String prettyPrintWithChildren$ReactAndroid_release()
com.facebook.react.views.modal.ReactModalHostView: kotlin.Unit showOrUpdate$lambda$2(com.facebook.react.views.modal.ReactModalHostView,androidx.activity.ComponentDialog)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.fresco.FrescoModule$Companion: FrescoModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.SpringAnimation$PhysicsState: double component1()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.facebook.react.viewmanagers.RNSScreenStackHeaderSubviewManagerDelegate: RNSScreenStackHeaderSubviewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
androidx.biometric.BiometricErrorData: BiometricErrorData(int,java.lang.CharSequence)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorageOld(com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: FpsView$FPSMonitorRunnable(com.facebook.react.devsupport.FpsView)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.devsupport.DevSupportManagerBase$fetchSplitBundleAndCreateBundleLoader$1$1: void onSuccess$lambda$0(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult: LocaleMatcher$LocaleMatchResult()
com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableFabricRenderer()
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: EncryptedFile$FileEncryptionScheme(java.lang.String,int,com.google.crypto.tink.KeyTemplate)
com.facebook.react.devsupport.DevInternalSettings$Companion: DevInternalSettings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: EncryptedFile$EncryptedFileInputStream(java.io.FileDescriptor,java.io.InputStream)
com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onHoverEvent(android.view.MotionEvent)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component11()
com.facebook.react.runtime.ReactSurfaceView: android.graphics.Point getViewportOffset()
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.runtime.ReactHostImpl: boolean hasNativeModule(java.lang.Class)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBackgroundColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
com.facebook.react.views.textinput.ReactEditText: void onSelectionChanged(int,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.facebook.react.ReactInstanceManager: void processPackage(com.facebook.react.ReactPackage,com.facebook.react.NativeModuleRegistryBuilder)
com.facebook.react.views.image.MultiPostprocessor: MultiPostprocessor(java.util.List,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule$Companion: ReactDevToolsRuntimeSettingsModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates$lambda$1(com.facebook.react.animated.NativeAnimatedModule,long,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.devsupport.DebugOverlayController: void setFpsDebugViewVisible(boolean)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: void addPoint$ReactAndroid_release(com.facebook.react.bridge.ReactMarkerConstants,com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.views.textinput.ReactEditText: void updateImeOptions()
com.facebook.react.bridge.BridgeReactContext: boolean hasReactInstance()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.modules.network.ProgressResponseBody: okio.BufferedSource source()
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.interop.UIBlockViewResolver: android.view.View resolveView(int)
com.facebook.react.modules.core.ReactChoreographer: void postFrameCallbackOnChoreographer$lambda$6(com.facebook.react.modules.core.ReactChoreographer)
com.facebook.react.ReactActivityDelegate: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int hashCode()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.devsupport.DevSupportManagerBase: void reportBundleLoadingFailure(java.lang.Exception)
com.facebook.react.modules.core.ReactChoreographer: void initialize(com.facebook.react.internal.ChoreographerProvider)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$onNativeException$6()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.hermes.R: R()
androidx.appcompat.widget.SwitchCompat: int[] onCreateDrawableState(int)
com.facebook.react.defaults.DefaultReactHostDelegate: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getTurboModuleManagerDelegateBuilder()
com.facebook.react.uimanager.events.TouchEvent: float getViewX()
com.facebook.react.jstasks.NoRetryPolicy: NoRetryPolicy()
androidx.security.crypto.MasterKey: boolean isStrongBoxBacked()
com.swmansion.rnscreens.SearchBarManager: void setHideWhenScrolling(android.view.View,boolean)
com.swmansion.worklets.AndroidUIScheduler: void invalidate()
com.facebook.react.uimanager.style.RadialGradient$Shape$Companion: RadialGradient$Shape$Companion()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: int getIntValue()
com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String toString()
com.facebook.react.fabric.events.EventBeatManager: void initHybrid()
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addGrandchildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
androidx.biometric.BiometricManager$DefaultInjector: boolean isFingerprintHardwarePresent()
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setTransitionDuration(android.view.View,int)
com.facebook.react.modules.toast.ToastModule$Companion: ToastModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.react.uimanager.events.PointerEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.modules.network.ProgressResponseBody: okhttp3.MediaType contentType()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setDevSupportEnabled(boolean)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: java.util.Map getCommandsMap()
com.learnium.RNDeviceInfo.RNDeviceModule: void getDevice(com.facebook.react.bridge.Promise)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule _init_$lambda$3(com.facebook.react.internal.turbomodule.core.TurboModuleManager,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.devsupport.DevSupportManagerBase: android.view.View createRootView(java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void computeBoundingBox(android.view.View,int[])
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.nozbe.watermelondb.utils.Schema: Schema(int,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.nozbe.watermelondb.utils.MigrationSet: MigrationSet(int,int,java.lang.String)
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
com.oblador.keychain.DeviceAvailability: boolean isStrongBiometricAuthAvailable(android.content.Context)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetElevation(android.view.View,int)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,float,float,float,float,int)
com.facebook.drawee.view.DraweeView: void onStartTemporaryDetach()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHeaderHidden(boolean)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
com.facebook.react.ReactActivityDelegate: void lambda$onCreate$0()
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingRight()
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: FabricNameComponentMapping()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.facebook.react.animated.ObjectAnimatedNode: void collectViewUpdates(java.lang.String,com.facebook.react.bridge.JavaOnlyMap)
com.oblador.keychain.SecurityLevel: com.oblador.keychain.SecurityLevel valueOf(java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressRunnable$lambda$0(com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.zoontek.rnpermissions.RNPermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getChildDrawingOrder(int,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.ComponentActivity: void invalidateMenu()
com.facebook.react.packagerconnection.ReconnectingWebSocket: void onMessage(okhttp3.WebSocket,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.drawee.view.DraweeView: boolean hasHierarchy()
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: int getOpacity()
com.facebook.react.modules.dialog.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet,int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setUnits(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.biometric.BiometricPrompt$PromptInfo: boolean isDeviceCredentialAllowed()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: AsyncStorageExpoMigration()
androidx.biometric.BiometricFragment$Api28Impl: BiometricFragment$Api28Impl()
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.views.scroll.ReactScrollView: void onChildViewRemoved(android.view.View,android.view.View)
com.facebook.react.uimanager.ReactShadowNode: void setViewClassName(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void onSizeChanged(int,int,int,int)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.graphics.drawable.Drawable getResourceDrawable(android.content.Context,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.facebook.imagepipeline.core.DownsampleMode: com.facebook.imagepipeline.core.DownsampleMode valueOf(java.lang.String)
com.facebook.react.animated.ObjectAnimatedNode: com.facebook.react.bridge.JavaOnlyMap collectViewUpdatesHelper(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReactShadowNode: void markUpdateSeen()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setStyle$ReactAndroid_release(java.lang.String)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: CxxInspectorPackagerConnection$DelegateImpl()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.biometric.BiometricViewModel: android.content.DialogInterface$OnClickListener getNegativeButtonListener()
com.facebook.react.fabric.StateWrapperImpl: java.lang.Object getStateDataReference()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.view.View resolveView(int)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager(com.facebook.react.bridge.ReactApplicationContext,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter setCurrency(java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion: IntBufferBatchMountItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: java.lang.String toString()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)
com.facebook.react.modules.network.ResponseUtil: void onDataReceived(com.facebook.react.bridge.ReactApplicationContext,int,com.facebook.react.bridge.WritableMap)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: void mark(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: IPlatformDateTimeFormatter$Second(java.lang.String,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: DevToolsReactPerfLogger$FabricCommitPointData(long,int)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderWidth(android.view.View,com.facebook.react.uimanager.style.LogicalEdge,java.lang.Float)
com.facebook.react.devsupport.ReleaseDevSupportManager: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.uimanager.style.ColorStop: void setColor(java.lang.Integer)
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.BridgelessReactContext access$getContext$p(com.facebook.react.runtime.ReactInstance)
com.facebook.react.views.swiperefresh.RefreshEvent: java.lang.String getEventName()
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: boolean isBorderColorDefined(int)
com.facebook.react.views.text.TextAttributeProps: int getHyphenationFrequency(java.lang.String)
com.facebook.react.viewmanagers.RNSScreenContentWrapperManagerDelegate: RNSScreenContentWrapperManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,java.lang.String,int,int)
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String resolveCollationAlias(java.lang.String)
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType valueOf(java.lang.String)
androidx.fragment.app.Fragment: void onDetach()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String getViewClass()
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getApiLevel(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.bridge.DimensionPropConverter$Companion: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: java.lang.String getSkeleonSymbol()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStatusBarHidden(android.view.View,boolean)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder)
com.facebook.react.views.modal.ReactModalHostManager: void setNavigationBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: com.facebook.hermes.intl.IPlatformNumberFormatter setGrouping(boolean)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task callWithExistingReactInstance(java.lang.String,com.facebook.react.runtime.ReactHostImpl$ReactInstanceCalback,java.util.concurrent.Executor)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleZ(double[],double)
com.facebook.react.internal.interop.InteropEvent$Companion: InteropEvent$Companion()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void incrementRetries()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: float getDecelerationRate()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenFooterManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.BridgelessDevSupportManager: BridgelessDevSupportManager(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String)
com.facebook.react.devsupport.ReleaseDevSupportManager: int getLastErrorCookie()
com.facebook.hermes.intl.JSObjects: java.util.Map getJavaMap(java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void onViewAdded(android.view.View)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode$Companion: FrescoBasedReactTextInlineImageShadowNode$Companion()
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderWidth(int,float)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createHueRotateEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
androidx.biometric.FingerprintDialogFragment: void connectViewModel()
com.facebook.react.views.scroll.FpsListener: void enable(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener access$getDevBundleDownloadListener$p(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder addPackages(java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void reactSmoothScrollTo(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.HorizontalScrollView findDeepestScrollViewForMotionEvent(android.view.View,android.view.MotionEvent,boolean)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItemsImpl(long)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerDisconnected()
com.facebook.hermes.intl.IntlTextUtils: boolean isDigit(java.lang.CharSequence,int,int,int,int)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.views.text.internal.span.ReactTagSpan: ReactTagSpan(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean animatedShouldSignalBatch()
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: UIManagerModuleConstantsHelper()
com.facebook.react.devsupport.DevSupportManagerBase: void showNewJavaError(java.lang.String,java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationEnd(android.animation.Animator)
androidx.fragment.app.DialogFragment: DialogFragment()
com.facebook.react.uimanager.util.ReactFindViewUtil: void findView(android.view.View,com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
androidx.fragment.app.Fragment: android.content.Context requireContext()
com.facebook.react.devsupport.BundleDownloader$BundleInfo$Companion: BundleDownloader$BundleInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: int getLineHeight()
com.facebook.react.uimanager.style.BoxShadow: float component1()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String getCipherStorageName()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.NativeKind getNativeKind()
com.facebook.react.DebugCorePackage: com.facebook.react.bridge.NativeModule viewManagersMap_delegate$lambda$1$lambda$0()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,int)
com.facebook.react.common.build.ReactBuildConfig: ReactBuildConfig()
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] $values()
com.facebook.react.defaults.DefaultReactHost: kotlin.Unit getDefaultReactHost$lambda$0(java.lang.Exception)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.animated.DivisionAnimatedNode: void update$ReactAndroid_release()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String decryptBytes(java.security.Key,byte[])
com.facebook.react.animated.NativeAnimatedNodesManager: void dropAnimatedNode(int)
androidx.biometric.CancellationSignalProvider$Injector: android.os.CancellationSignal getBiometricCancellationSignal()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.facebook.react.modules.websocket.WebSocketModule$Companion: java.lang.String getDefaultOrigin(java.lang.String)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void flushOperations()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl$1: void onResume()
com.facebook.react.CoreModulesPackage: com.facebook.react.module.model.ReactModuleInfoProvider fallbackForMissingClass()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: double asDouble$lambda$2(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.modules.network.ForwardingCookieHandler: void addCookieAsync(java.lang.String,java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.text.internal.span.CustomStyleSpan: void updateDrawState(android.text.TextPaint)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void hideSplitBundleDevLoadingView()
com.facebook.react.devsupport.interfaces.ErrorType: java.lang.String toString()
com.facebook.react.interfaces.fabric.ReactSurface: android.content.Context getContext()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: java.lang.String toLowerString()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.swmansion.rnscreens.SearchBarManager: void setCancelButtonText(android.view.View,java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getBottomRight()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.facebook.react.packagerconnection.JSPackagerClient$Companion: JSPackagerClient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactHost: boolean onBackPressed()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.uimanager.drawable.BackgroundDrawable: java.util.List getBackgroundImageLayers()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: java.lang.String getSkeleonSymbol()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.uimanager.LayoutShadowNode: void setGap(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData initHybrid(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl)
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType[] values()
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: java.lang.String[] buildKeySelectionArgs(com.facebook.react.bridge.ReadableArray,int,int)
com.facebook.react.views.view.ViewGroupClickEvent: ViewGroupClickEvent(int,int)
androidx.biometric.BiometricViewModel$DefaultExecutor: BiometricViewModel$DefaultExecutor()
com.reactnativecommunity.netinfo.NetInfoModule: void onAmazonFireDeviceConnectivityChanged(boolean)
com.facebook.react.uimanager.ViewManagerRegistry$1: ViewManagerRegistry$1(com.facebook.react.uimanager.ViewManagerRegistry,java.util.List)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener: void onResume()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.drawee.view.DraweeView: void onDetachedFromWindow()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder[] values()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.oblador.keychain.PrefsStorage: void storeEncryptedEntry(java.lang.String,com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult)
com.facebook.react.HeadlessJsTaskService: void onDestroy()
com.facebook.react.fabric.FabricUIManager$2: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.oblador.keychain.KeychainPackage: KeychainPackage(com.oblador.keychain.KeychainModuleBuilder)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String _getModuleName()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion: SwipeRefreshLayoutManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContext$p(com.facebook.react.modules.core.JavaTimerManager)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: com.facebook.react.bridge.WritableMap getPlayServicesStatusMap()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
androidx.biometric.FingerprintDialogFragment: void updateHelpMessageText(java.lang.CharSequence)
com.facebook.react.runtime.CoreReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.LocaleObjectICU: java.util.HashMap getUnicodeExtensions()
com.facebook.react.ReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createOpacityEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: void setNavigationBarTranslucent(android.view.View,boolean)
com.facebook.react.uimanager.style.BackgroundImageLayer: BackgroundImageLayer()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSecurityPatch(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: void handleMessage(android.os.Message)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface destroy(java.lang.String,java.lang.Exception)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.PixelUtil: float pxToDp(long)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCodenameSync()
com.facebook.react.animated.ValueAnimatedNode: void setValueListener(com.facebook.react.animated.AnimatedNodeValueListener)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enablePreparedTextLayout()
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.runtime.internal.bolts.Task: kotlin.Unit continueWith$lambda$9$lambda$8(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor,com.facebook.react.runtime.internal.bolts.Task)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
com.swmansion.reanimated.nativeProxy.SensorSetter: SensorSetter(com.facebook.jni.HybridData)
com.facebook.react.runtime.BridgelessReactContext: boolean hasActiveReactInstance()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.react.devsupport.DevSupportManagerBase$reloadAppBroadcastReceiver$1: DevSupportManagerBase$reloadAppBroadcastReceiver$1(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.uimanager.events.TouchesHelper: void sendTouchesLegacy(com.facebook.react.uimanager.events.RCTEventEmitter,com.facebook.react.uimanager.events.TouchEvent)
com.swmansion.reanimated.BorderRadiiDrawableUtils: BorderRadiiDrawableUtils()
com.facebook.react.ReactHost: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
com.facebook.react.fabric.SynchronousEvent: com.facebook.react.fabric.SynchronousEvent copy(int,int,java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: void applySkewY(double[],double)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.Event: void init(int)
androidx.biometric.PackageUtils$Api23Impl: PackageUtils$Api23Impl()
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: JavaOnlyMap$keySetIterator$1(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1: void onHostPause()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.network.RequestBodyUtil: boolean isGzipEncoding(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: int indexOf(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.hermes.intl.LocaleIdentifier: void parseLanguageId(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag,boolean,com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthFitContentJNI(long)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.common.mapbuffer.WritableMapBuffer: long getLong(int)
com.swmansion.reanimated.keyboard.Keyboard: int getHeight()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String getDefaultAliasServiceName()
com.zoontek.rnpermissions.RNPermissionsModule: void openSettings(com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionAutoJNI(long,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
com.facebook.react.ReactInstanceEventListener: void onReactContextInitialized(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.MeasureSpecAssertions: void assertExplicitMeasureSpec(int,int)
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.oblador.keychain.cipherStorage.CipherStorageBase$Defaults: CipherStorageBase$Defaults()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.facebook.react.views.switchview.ReactSwitchManager$Companion: ReactSwitchManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libhermes_executor_so()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useShadowNodeStateOnClone()
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.lang.String[] getAvailableLocales()
com.google.android.material.chip.Chip: float getTextEndPadding()
com.facebook.react.runtime.BridgelessReactStateTracker$Companion: BridgelessReactStateTracker$Companion()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceNameSync()
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.ReactDelegate: boolean shouldShowDevMenuOrReload(int,android.view.KeyEvent)
com.facebook.react.fabric.mounting.MountingManager: boolean surfaceIsStopped(int)
com.facebook.react.devsupport.FpsView: void setCurrentFPS(double,double,int,int)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomLeft(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1: void onHostDestroy()
com.facebook.react.views.text.TextAttributes: float getFontSize()
com.facebook.react.devsupport.ReleaseDevSupportManager: void setFpsDebugEnabled(boolean)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenWidth()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task loadJSBundleFromMetro()
com.facebook.react.uimanager.drawable.BorderDrawable: void updatePathEffect()
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: void run()
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.react.uimanager.style.ColorStop: ColorStop(java.lang.Integer,com.facebook.react.uimanager.LengthPercentage)
androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
com.facebook.react.ReactRootView: void dispatchJSTouchEvent(android.view.MotionEvent)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters$lambda$0(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.views.imagehelper.ImageSource getTransparentBitmapImageSource(android.content.Context)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void onLayoutUpdate(int,int,int,int)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task continueWith$default(com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor,int,java.lang.Object)
com.facebook.react.BaseReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component1()
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: MountItemFactory()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.facebook.react.common.ShakeDetector: ShakeDetector(com.facebook.react.common.ShakeDetector$ShakeListener,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewManager$Companion: ReactViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.modules.core.ReactChoreographer$Companion: ReactChoreographer$Companion()
com.facebook.react.shell.MainReactPackage: MainReactPackage()
com.oblador.vectoricons.VectorIconsPackage: java.util.Map lambda$getReactModuleInfoProvider$0()
com.swmansion.reanimated.layoutReanimation.Snapshot: int[] tryGetRealPosition(android.view.View)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void updatePathEffect()
com.facebook.react.bridge.ReadableNativeMap: int access$getJniPassCounter$cp()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.ReactChoreographer: void _init_$lambda$2(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.internal.ChoreographerProvider)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.oblador.vectoricons.VectorIconsModuleImpl: java.lang.String getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,android.content.Context)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] $values()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.facebook.react.uimanager.BaseViewManager$1: BaseViewManager$1(com.facebook.react.uimanager.BaseViewManager,android.view.View)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.uimanager.OnLayoutEvent: void getX$ReactAndroid_release$annotations()
com.facebook.react.ReactRootView: ReactRootView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.ReactDelegate: void loadApp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.View)
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy getRetryPolicy()
com.facebook.react.modules.network.ProgressResponseBody: com.facebook.react.modules.network.ProgressListener access$getProgressListener$p(com.facebook.react.modules.network.ProgressResponseBody)
com.facebook.react.bridge.DynamicNative: int asInt()
com.facebook.react.modules.debug.FpsDebugFrameCallback: double getFps()
com.nozbe.watermelondb.WMDatabaseBridge: void unsafeQueryRaw(int,java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$unsafeResetDatabase$6(int,java.lang.String,com.nozbe.watermelondb.WMDatabaseDriver)
com.swmansion.reanimated.NativeReanimatedModuleSpec: java.lang.String getName()
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.facebook.react.bridge.CatalystInstance: void getJSCallInvokerHolder$annotations()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.facebook.react.PackageList: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean disableMountItemReorderingAndroid()
com.facebook.react.uimanager.BaseViewManagerDelegate: BaseViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.text.ReactTextUpdate: int getJsEventCounter()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableArray)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported64BitAbisSync()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void checkDuplicateSharedTag(int,int)
com.oblador.keychain.KeychainModule: com.oblador.keychain.decryptionHandler.DecryptionResultHandler getInteractiveHandler(com.oblador.keychain.cipherStorage.CipherStorage,androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback: void onDisconnected()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: java.security.Key generateKey(android.security.keystore.KeyGenParameterSpec)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: void onPackagerReloadCommand()
com.facebook.react.bridge.DynamicFromArray$Companion: DynamicFromArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.ValueAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.packagerconnection.ReconnectingWebSocket: void closeQuietly()
com.facebook.react.devsupport.BridgeDevSupportManager: void handleReloadJS$lambda$1(com.facebook.react.devsupport.BridgeDevSupportManager)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion: java.lang.String access$nameForInstructionString(com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion,int)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableNetworkEventReporting()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String getUrl()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean disableMountItemReorderingAndroid()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult decrypt(java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.uimanager.ReactRoot: int getWidthMeasureSpec()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidth(float)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactDelegate: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: ReactDevToolsSettingsManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactActivity: void onUserLeaveHint()
com.facebook.react.modules.permissions.PermissionsModule$requestPermission$1: PermissionsModule$requestPermission$1(com.facebook.react.bridge.Promise,com.facebook.react.modules.permissions.PermissionsModule,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getRootTag()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeRegionSubtag()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
io.invertase.firebase.common.ReactNativeFirebaseModule: ReactNativeFirebaseModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters$lambda$1(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView,android.content.DialogInterface)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task onSuccessTask$default(com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor,int,java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUserAgentSync()
com.facebook.react.runtime.BridgelessCatalystInstance: boolean hasRunJSBundle()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.facebook.react.modules.image.ImageLoaderModule$prefetchImage$prefetchSubscriber$1: void onNewResultImpl(com.facebook.datasource.DataSource)
com.google.android.material.button.MaterialButton: int getIconSize()
com.facebook.react.animated.NativeAnimatedModule$stopListeningToAnimatedNodeValue$1: NativeAnimatedModule$stopListeningToAnimatedNodeValue$1(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder$Companion: TurboModuleManager$ModuleHolder$Companion()
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object get()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.facebook.react.uimanager.ReactShadowNodeImpl: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Inspector$Companion: Inspector$Companion()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.facebook.hermes.intl.IPlatformCollator$Usage: java.lang.String toString()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
com.facebook.react.modules.toast.ToastModule$Companion: ToastModule$Companion()
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.devsupport.DevSupportManagerBase$devSettings$1: void onInternalSettingsChanged()
com.facebook.react.modules.websocket.WebSocketModule$connect$2: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.facebook.react.runtime.ReactHostImpl: void lambda$getDefaultBackButtonHandler$10()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableIOSViewClipToPaddingBox()
com.facebook.react.uimanager.style.BackgroundImageLayer$Companion: com.facebook.react.uimanager.style.BackgroundImageLayer parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFirstInstallTimeSync()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor(java.lang.String)
androidx.biometric.BiometricFragment$Api29Impl: BiometricFragment$Api29Impl()
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List getBeforeUIBlocks$ReactAndroid_release()
com.facebook.react.views.scroll.ScrollEvent: void onDispose()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void enableFpsListener()
com.facebook.react.views.text.internal.span.SetSpanOperation$Companion: SetSpanOperation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setDeliveryMetricsExportToBigQuery$12(java.lang.Boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: boolean hasNext()
androidx.biometric.BiometricFragment: androidx.biometric.BiometricFragment newInstance()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,float,float)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean didDoubleTapR(int,android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexWrap(com.facebook.yoga.YogaWrap)
com.facebook.react.views.text.ReactTextShadowNode$1: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: MatrixMathHelper$MatrixDecompositionContext$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.widget.FrameLayout$LayoutParams getLayoutParams(int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void toggleSlowAnimations()
com.facebook.react.uimanager.style.BoxShadow: java.lang.Boolean component6()
com.facebook.react.animated.SpringAnimation: void advance(double)
com.swmansion.rnscreens.Screen: float getSheetCornerRadius()
com.facebook.react.uimanager.PixelUtil: float getDisplayMetricDensity()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: void readHeader()
com.facebook.react.uimanager.BlendModeHelper: android.graphics.BlendMode parseMixBlendMode(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getChildAt(int)
com.facebook.react.bridge.ReactContext: void initializeInteropModules()
com.facebook.react.uimanager.ReactShadowNode: void setFlex(float)
com.facebook.hermes.intl.JSObjects: java.lang.Object newString(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.uimanager.style.BorderColors: com.facebook.react.uimanager.style.BorderColors box-impl(java.lang.Integer[])
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.Set getPendingDeletionsForTag(int)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
androidx.activity.OnBackPressedCallback: void handleOnBackCancelled()
com.facebook.react.runtime.ReactHostImpl: java.lang.Void lambda$getOrCreateDestroyTask$39(java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.WindowUtilKt: void statusBarHide(android.view.Window)
com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String getString(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
androidx.biometric.BiometricViewModel: void setClientExecutor(java.util.concurrent.Executor)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void updateProgress$lambda$1(java.lang.Integer,java.lang.Integer,com.facebook.react.devsupport.DefaultDevLoadingViewImplementation,java.lang.String)
com.facebook.react.modules.core.ReactChoreographer: void maybeRemoveFrameCallback()
com.facebook.react.uimanager.annotations.ReactProp: int defaultInt()
com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromShadowNodeClassDefinition(java.lang.Class,java.util.Map)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setJSDevModeEnabled(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType[] values()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setIndeterminate$ReactAndroid_release(boolean)
com.facebook.react.packagerconnection.Responder: void error(java.lang.Object)
androidx.security.crypto.EncryptedSharedPreferences$Editor: void putEncryptedObject(java.lang.String,byte[])
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.nozbe.watermelondb.utils.Pair: com.nozbe.watermelondb.utils.Pair create(java.lang.Object,java.lang.Object)
com.facebook.react.modules.websocket.WebSocketModule$Companion: WebSocketModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.image.ImageLoaderModule: void setImagePipeline(com.facebook.imagepipeline.core.ImagePipeline)
com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBoxShadow(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setCurrentActivity(android.app.Activity)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Float getBorderWidth(android.view.View,com.facebook.react.uimanager.style.LogicalEdge)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: ViewManagersPropertyCache$BoxedColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: RedBoxContentView$StackAdapter(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[])
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
com.rnbiometrics.ReactNativeBiometrics: java.lang.String getName()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.uimanager.UIImplementation: void updateRootView(int,int,int)
com.facebook.react.touch.ReactInterceptingViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.react.LazyReactPackage$1: com.facebook.react.bridge.ModuleHolder next()
com.facebook.react.uimanager.JSPointerDispatcher: void debugPrintHitPath(java.util.List)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
com.facebook.react.devsupport.DevInternalSettings$Listener: void onInternalSettingsChanged()
com.facebook.react.uimanager.ReactStage$Companion: ReactStage$Companion()
androidx.biometric.BiometricViewModel: void setIgnoringCancel(boolean)
com.facebook.hermes.intl.JSObjects: java.lang.String getJavaString(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.hermes.intl.PlatformNumberFormatterAndroid: java.lang.String fieldToString(java.text.AttributedCharacterIterator$Attribute,double)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,int)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.facebook.react.views.view.ReactViewGroup: void setOverflowInset(int,int,int,int)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] $values()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getOrCreateReloadTask(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle getDefaultHourCycle(com.facebook.hermes.intl.ILocaleObject)
com.facebook.react.bridge.ReadableArray: long getLong(int)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasSmoothScroll: void scrollToPreservingMomentum(int,int)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleAddView(android.view.View)
com.facebook.react.uimanager.UIImplementation: int getRootViewNum()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isLayoutOnly()
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.bridge.WritableMap createW3CPointerEvent(int)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.swmansion.reanimated.NodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsForViewManagerProvider: com.facebook.react.bridge.NativeMap getConstantsForViewManager(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.uimanager.drawable.OutlineDrawable: int getOpacity()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: MessageQueueThreadSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.react.uimanager.ReactClippingViewGroup: void updateClippingRect(java.util.Set)
com.facebook.react.runtime.ReactHostImpl: void lambda$loadBundle$11(com.facebook.react.bridge.JSBundleLoader,com.facebook.react.runtime.ReactInstance)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManagerForReactTag(com.facebook.react.bridge.ReactContext,int)
com.facebook.react.uimanager.RootViewUtil: RootViewUtil()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollTo(int,int)
com.facebook.react.devsupport.BundleDownloader$BundleInfo: int getFilesChangedCount()
androidx.biometric.AuthenticationCallbackProvider$Listener: void onSuccess(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.View,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.runtime.ReactInstance$Companion: com.facebook.react.runtime.JSTimerExecutor access$createJSTimerExecutor(com.facebook.react.runtime.ReactInstance$Companion)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.runtime.ReactHostDelegate: void handleInstanceException(java.lang.Exception)
androidx.biometric.AuthenticationCallbackProvider$Listener: void onError(int,java.lang.CharSequence)
com.facebook.react.modules.network.ProgressResponseBody: okhttp3.ResponseBody access$getResponseBody$p(com.facebook.react.modules.network.ProgressResponseBody)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void incrementRetries()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$10()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerDelegate: RNSScreenStackHeaderConfigManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.react.animated.PropsAnimatedNode: android.view.View getConnectedView()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getSourceUrl()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: int isGooglePlayServicesAvailable()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android: ReactNativeFeatureFlagsOverrides_RNOSS_Canary_Android()
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void access$handleException(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.text.PreparedLayoutTextView$TextSelection: int getStart()
com.facebook.react.fabric.SynchronousEvent: int getSurfaceId()
com.facebook.react.uimanager.FloatUtil: boolean floatsEqual(java.lang.Float,java.lang.Float)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.facebook.react.views.text.PreparedLayoutTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.ReactStylesDiffMap: boolean isNull(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.runtime.ReactSurfaceImpl: boolean isRunning()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libhermesinstancejni_so()
com.facebook.react.uimanager.style.BorderRadiusStyle: boolean equals(java.lang.Object)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase get()
com.swmansion.rnscreens.ScreensModule: void initialize()
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getEventNameResolver()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: DrawerStateChangedEvent(int,int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.modules.fresco.ImageCacheControl: kotlin.enums.EnumEntries getEntries()
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void getMHybridData$annotations()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateReactInstanceTask$25()
com.facebook.react.views.text.PreparedLayoutTextViewManager: android.view.View getChildAt(android.view.View,int)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(android.view.View,int)
com.facebook.react.ReactFragment: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.runtime.internal.bolts.Task$Companion: com.facebook.react.runtime.internal.bolts.Task forError(java.lang.Exception)
com.oblador.keychain.cipherStorage.CipherStorage: com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult encrypt(java.lang.String,java.lang.String,java.lang.String,com.oblador.keychain.SecurityLevel)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.ReadableMapBuffer cloneWithOffset(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape[] values()
com.facebook.react.animated.NativeAnimatedModule$stopAnimation$1: NativeAnimatedModule$stopAnimation$1(com.facebook.react.animated.NativeAnimatedModule,int)
com.swmansion.rnscreens.ScreenViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setAccessible(com.facebook.react.views.text.PreparedLayoutTextView,boolean)
com.facebook.react.uimanager.style.BorderRadiusProp: BorderRadiusProp(java.lang.String,int)
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: void findNext()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: ViewManagersPropertyCache$BooleanPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,boolean)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double,com.facebook.react.modules.fresco.ImageCacheControl)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.String getMethodName()
com.facebook.drawee.view.DraweeView: void onVisibilityChanged(android.view.View,int)
com.facebook.react.bridge.DynamicFromMap$Companion: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.facebook.react.devsupport.DevServerHelper$openDebugger$1: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.uimanager.IViewGroupManager: void removeAllViews(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleRemoveNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: double getAngle()
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.react.animated.SpringAnimation$PhysicsState: SpringAnimation$PhysicsState(double,double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxWidthPercent(float)
com.facebook.react.animated.NativeAnimatedNodesManager: void initializeEventListenerForUIManagerType(int)
com.facebook.react.runtime.ReactHostImpl: void maybeEnableDevSupport(boolean)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.BorderRadiusStyle copy(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.uimanager.BaseViewManager$1: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean shouldDecodePrefetches()
com.facebook.react.views.image.ImageLoadEvent: short getCoalescingKey()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float innerRadius(float,java.lang.Float)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: ReactNativeFeatureFlagsCxxAccessor()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config$Companion: MaintainVisibleScrollPositionHelper$Config$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.ColorEdges: com.facebook.react.uimanager.style.ColorEdges copy(int,int,int,int)
androidx.biometric.CryptoObjectUtils$Api28Impl: java.security.Signature getSignature(android.hardware.biometrics.BiometricPrompt$CryptoObject)
com.facebook.react.views.scroll.ReactScrollView: ReactScrollView(android.content.Context,com.facebook.react.views.scroll.FpsListener)
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
com.oblador.keychain.cipherStorage.CipherStorageBase: boolean validateKeySecurityLevel(com.oblador.keychain.SecurityLevel,java.security.Key)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: void startAuthentication()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int getChildDrawingOrder(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.oblador.keychain.cipherStorage.CipherStorage: void removeKey(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: double getMaxMemorySync()
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: TaskCompletionSource()
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,java.lang.Integer)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureSpecs(int,int)
com.facebook.react.devsupport.WindowOverlayCompat: void getTYPE_SYSTEM_OVERLAY$annotations()
com.swmansion.rnscreens.stack.views.ScreensCoordinatorLayout: com.swmansion.rnscreens.ScreenStackFragment getFragment$react_native_screens_release()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIImplementation: void sendAccessibilityEvent(int,int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
androidx.biometric.BiometricFragment$6: void onChanged(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewHelper: int parseSnapToAlignment(java.lang.String)
com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.bridge.WritableMap getData()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.facebook.hermes.intl.LocaleObjectICU: LocaleObjectICU(android.icu.util.ULocale)
com.facebook.react.views.text.PreparedLayoutTextView: void onDraw(android.graphics.Canvas)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.R$color: R$color()
com.facebook.react.BaseReactPackage: java.lang.Iterable getNativeModuleIterator$ReactAndroid_release(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule$2: void runGuarded()
com.facebook.react.uimanager.events.TouchEvent: void access$init(com.facebook.react.uimanager.events.TouchEvent,int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: CustomLineHeightSpan(float)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setRadius(float)
com.facebook.react.viewmanagers.RNSScreenManagerDelegate: RNSScreenManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType valueOf(java.lang.String)
com.facebook.react.internal.interop.InteropEventEmitter: InteropEventEmitter(com.facebook.react.bridge.ReactContext)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
kotlin.properties.ObservableProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.facebook.react.modules.network.ForwardingCookieHandler: void destroy()
com.facebook.react.viewmanagers.RNSSearchBarManagerDelegate: RNSSearchBarManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateClippingRect(java.util.Set)
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object getOrCreate(com.facebook.react.runtime.BridgelessAtomicRef$Provider)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.devsupport.DevInternalSettings: void setHotModuleReplacementEnabled(boolean)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: int getNearestStyle()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void reset()
com.facebook.react.modules.network.RequestBodyUtil: RequestBodyUtil()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableSynchronousStateUpdates()
com.facebook.react.common.mapbuffer.MapBuffer: com.facebook.react.common.mapbuffer.MapBuffer$DataType getType(int)
com.facebook.react.uimanager.style.CornerRadii: com.facebook.react.uimanager.style.CornerRadii toPixelFromDIP()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.runtime.ReactHostImpl: ReactHostImpl(android.content.Context,com.facebook.react.runtime.ReactHostDelegate,com.facebook.react.fabric.ComponentFactory,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,com.facebook.react.devsupport.DevSupportManagerFactory)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle(java.util.List)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.facebook.react.views.scroll.ReactScrollView: void startFlingAnimator(int,int)
com.facebook.react.ReactActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: void onDecrypt(com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult,java.lang.Throwable)
com.facebook.react.views.view.ViewGroupClickEvent: java.lang.String getEventName()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)
com.facebook.react.HeadlessJsTaskService: void acquireWakeLockNow(android.content.Context)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.views.text.ReactRawTextManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: void write(int)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
org.pgsqlite.SQLitePlugin: java.util.concurrent.ExecutorService getThreadPool()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enablePreparedTextLayout()
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.security.crypto.MasterKey: MasterKey(java.lang.String,java.lang.Object)
com.facebook.react.views.text.TextAttributes: float getLineHeight()
com.facebook.react.common.ClearableSynchronizedPool: void clear()
com.facebook.react.uimanager.ReactAxOrderHelper: android.view.View[] processAxOrderTree(android.view.View,java.util.List,java.util.Set)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenFooterManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setRedBoxHandler(com.facebook.react.devsupport.interfaces.RedBoxHandler)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didOpen()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.runtime.ReactHostImpl: android.app.Activity getLastUsedActivity()
com.learnium.RNDeviceInfo.RNDeviceModule: void isAirplaneMode(com.facebook.react.bridge.Promise)
com.facebook.react.packagerconnection.PackagerConnectionSettings$Companion: PackagerConnectionSettings$Companion()
com.facebook.react.CoreModulesPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.biometric.CryptoObjectUtils: CryptoObjectUtils()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.facebook.react.runtime.cxxreactpackage.CxxReactPackage: void getMHybridData$annotations()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.common.DebugServerException$Companion: DebugServerException$Companion()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void hide()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats$lambda$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.zoontek.rnpermissions.RNPermissionsModule: void requestMultiple(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getViewState(int)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean useTurboModules()
com.facebook.react.devsupport.RedBoxContentView: void reportButtonOnClickListener$lambda$0(com.facebook.react.devsupport.RedBoxContentView,android.view.View)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void updatePath()
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallerPackageName(com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: long getLastModifiedTimeInMillis(java.io.File)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.ReactInstance$BridgelessViewManagerResolver access$getViewManagerResolver$p(com.facebook.react.runtime.ReactInstance)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: java.util.Map getMetadata()
com.facebook.react.bridge.Arguments$1: int size()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getEndEnd()
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$Style,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign,com.facebook.hermes.intl.IPlatformNumberFormatter$Notation,com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.hermes.reactexecutor.HermesExecutor: void loadLibrary()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int multiplyColorAlpha(int,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.views.modal.ReactModalHostView: java.lang.String getAnimationType()
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy getNativeProxy()
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.facebook.react.runtime.ReactHostImpl: boolean onBackPressed()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: com.google.crypto.tink.KeyTemplate getKeyTemplate()
androidx.biometric.BiometricViewModel: java.lang.CharSequence getDescription()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.facebook.react.uimanager.style.LogicalEdge$LEFT: int toSpacingType()
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: StackTraceHelper$StackFrameImpl(java.lang.String,java.lang.String,java.lang.String,int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.LocaleMatcher: LocaleMatcher()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void registerEventHandler(com.swmansion.reanimated.nativeProxy.EventHandler)
com.facebook.react.fabric.StateWrapperImpl: java.lang.String toString()
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
com.facebook.react.runtime.BridgelessReactContext: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.nozbe.watermelondb.WMDatabaseBridge: void connectDriver(int,com.nozbe.watermelondb.WMDatabaseDriver,com.facebook.react.bridge.Promise)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFabricLogs()
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.reactnativecommunity.asyncstorage.AsyncStorageExpoMigration: java.io.File getLastModifiedFile(java.util.ArrayList)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: int[] fromIntArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.HeadlessJsTaskService$Companion: void acquireWakeLockNow(android.content.Context)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: ViewManagersPropertyCache$BoxedIntPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.oblador.vectoricons.VectorIconsModuleImpl: VectorIconsModuleImpl()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void addUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: IPlatformNumberFormatter$RoundingType(java.lang.String,int)
com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String[] names()
com.facebook.react.fabric.mounting.MountingManager: long measureMapBuffer(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.facebook.react.jstasks.NoRetryPolicy$Companion: NoRetryPolicy$Companion()
com.facebook.react.views.text.PreparedLayoutTextView$Companion: PreparedLayoutTextView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.oblador.keychain.cipherStorage.CipherStorageBase: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String)
com.oblador.vectoricons.BuildConfig: BuildConfig()
com.facebook.react.common.mapbuffer.WritableMapBuffer: boolean contains(int)
com.facebook.react.modules.blob.BlobCollector: BlobCollector()
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String getMethod()
com.facebook.react.modules.debug.DevMenuModule: void show()
com.facebook.drawee.drawable.ForwardingDrawable: boolean getPadding(android.graphics.Rect)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.DynamicNative$Companion: DynamicNative$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.NativeGestureUtil: void notifyNativeGestureEnded(android.view.View,android.view.MotionEvent)
com.oblador.keychain.KeychainModule: java.lang.String getAccessControlOrDefault(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: ReactImageView$setShouldNotifyLoadEvents$1(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.views.image.ReactImageView)
com.facebook.react.ReactActivityDelegate: void loadApp(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$4: AsyncStorageModule$4(com.reactnativecommunity.asyncstorage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)
com.facebook.react.packagerconnection.NotificationOnlyHandler: NotificationOnlyHandler()
com.nozbe.watermelondb.WMDatabaseDriver: com.facebook.react.bridge.WritableArray queryIds(java.lang.String,java.lang.Object[])
com.facebook.react.devsupport.LogBoxDialogSurfaceDelegate: void hide()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.uimanager.style.LogicalEdge$HORIZONTAL: int toSpacingType()
com.facebook.react.views.switchview.ReactSwitchManager: void updateExtraData(com.facebook.react.views.switchview.ReactSwitch,java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean disableMountItemReorderingAndroid()
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.facebook.react.ReactAndroidHWInputDeviceHelper$Companion: ReactAndroidHWInputDeviceHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIViewOperationQueue: java.util.Map getProfiledBatchPerfCounters()
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: EncryptedSharedPreferences$EncryptedType(java.lang.String,int,int)
androidx.biometric.CancellationSignalProvider$Api16Impl: void cancel(android.os.CancellationSignal)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(boolean)
androidx.biometric.R$style: R$style()
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(com.swmansion.rnscreens.Screen,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setStatusBarAnimation(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void clearText(android.view.View)
com.facebook.react.runtime.ReactHostImpl: void lambda$getOrCreateReactInstanceTask$21()
androidx.security.crypto.EncryptedSharedPreferences$Editor: void clearKeysIfNeeded()
com.facebook.react.fabric.ComponentFactory$Companion: ComponentFactory$Companion()
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSEngineResolutionAlgorithm(com.facebook.react.JSEngineResolutionAlgorithm)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.facebook.react.uimanager.ReactShadowNode: boolean isVirtualAnchor()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableNativeCSSParsing()
com.facebook.react.devsupport.DevSupportManagerBase: void compatRegisterReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,boolean)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.modules.camera.ImageStoreManager$Companion: ImageStoreManager$Companion()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sweepActiveTouchForTag(int)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void deleteInstance()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.devsupport.RedBoxContentView$StackAdapter$FrameViewHolder: RedBoxContentView$StackAdapter$FrameViewHolder(android.view.View)
com.facebook.react.modules.dialog.DialogModule$Companion: void getACTION_BUTTON_CLICKED$ReactAndroid_release$annotations()
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,int[])
com.facebook.react.common.DebugServerException: DebugServerException(java.lang.String,java.lang.String,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjscinstance_so()
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: double getFps()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getInitialNotification(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.StateWrapperImpl: void destroyState()
com.facebook.hermes.intl.JSRangeErrorException: JSRangeErrorException(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.facebook.react.uimanager.ViewManagersPropertyCache: void clear()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.text.ReactFontManager: void setTypeface(java.lang.String,int,android.graphics.Typeface)
androidx.biometric.BiometricFragment: void sendErrorAndDismiss(int,java.lang.CharSequence)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendHighTextContrastChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getComponentStack()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.uimanager.JSPointerDispatcher: void onDown(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
androidx.core.view.WindowInsetsCompat$Impl34: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.react.ReactInstanceManager: void invalidate()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeExtensionKeyTypeItem()
com.google.android.material.button.MaterialButton: int getIconPadding()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.facebook.react.modules.blob.BlobModule: long getLengthOfBlob(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setRole(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole,android.content.Context)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.nozbe.watermelondb.WMDatabase: void unsafeExecuteStatements(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule$Companion: DeviceInfoModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.LocaleIdentifier: void replaceLanguageSubtagIfNeeded(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.StringBuffer)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableIOSViewClipToPaddingBox()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: com.oblador.keychain.SecurityLevel securityLevel()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: int getCurrent()
com.facebook.react.devsupport.interfaces.DevSupportManager: int getLastErrorCookie()
com.oblador.keychain.SecurityLevel: java.lang.String jsName()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.pgsqlite.SQLitePlugin: java.lang.String getName()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.oblador.keychain.exceptions.CryptoFailedException: void reThrowOnError(java.lang.Throwable)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)
com.facebook.react.devsupport.inspector.InspectorNetworkHelper$loadNetworkResource$1: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.swmansion.reanimated.keyboard.Keyboard: com.swmansion.reanimated.keyboard.KeyboardState getState()
com.oblador.keychain.decryptionHandler.DecryptionResultHandler: java.lang.Throwable getError()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: NativeRNGestureHandlerModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii get(com.facebook.react.uimanager.style.ComputedBorderRadiusProp)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFabricRenderer()
com.facebook.react.views.progressbar.ProgressBarContainerView: void apply$ReactAndroid_release()
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerIfExists(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveAllChildrenJNI(long)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String getType()
com.facebook.react.devsupport.DevSupportManagerBase$Companion: java.lang.String getReloadAppAction(android.content.Context)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
com.facebook.react.ReactApplication: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.react.devsupport.interfaces.RedBoxHandler$ReportCompletedListener: void onReportSuccess(android.text.SpannedString)
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,float,float,float,float,int,int,int)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinHeightPercent(float)
com.facebook.react.ReactActivityDelegate: boolean isFabricEnabled()
com.facebook.react.views.debuggingoverlay.TraceUpdate: android.graphics.RectF getRectangle()
com.facebook.react.interfaces.TaskInterface: boolean waitForCompletion(long,java.util.concurrent.TimeUnit)
com.facebook.react.runtime.ReactInstance: void handleMemoryPressure(int)
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.facebook.react.common.mapbuffer.WritableMapBuffer$iterator$1: WritableMapBuffer$iterator$1(com.facebook.react.common.mapbuffer.WritableMapBuffer)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ShadowNodeRegistry$SingleThreadAsserter: void assertNow()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.bridge.NativeArray$Companion: NativeArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.viewmanagers.RNCSafeAreaViewManagerInterface: void setMode(android.view.View,java.lang.String)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getFabricEnabled$annotations()
androidx.fragment.app.Fragment: boolean isInBackStack()
com.facebook.react.uimanager.ShadowNodeRegistry: void removeRootNode(int)
com.facebook.react.uimanager.UIViewOperationQueue$2: void runGuarded()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.biometric.BiometricManager: int canAuthenticateCompat(int)
com.facebook.react.devsupport.DebugOverlayController: void requestPermission(android.content.Context)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: android.security.keystore.KeyGenParameterSpec$Builder getKeyGenSpecBuilder(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: int findRangeIndex(double,double[])
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper: ReactScrollViewHelper()
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenFooter: com.google.android.material.bottomsheet.BottomSheetBehavior getSheetBehavior()
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType valueOf(java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: float[] measure(android.view.View)
androidx.security.crypto.EncryptedFile$Builder: EncryptedFile$Builder(android.content.Context,java.io.File,androidx.security.crypto.MasterKey,androidx.security.crypto.EncryptedFile$FileEncryptionScheme)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateLayout(int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.facebook.react.uimanager.UIImplementation: boolean checkOrAssertViewExists(int,java.lang.String)
com.facebook.react.ReactHost: void onHostPause(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.drawable.BorderDrawable: void draw(android.graphics.Canvas)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.text.PreparedLayoutTextView: PreparedLayoutTextView(android.content.Context)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
com.facebook.react.uimanager.style.RadialGradient$Position: com.facebook.react.uimanager.LengthPercentage getLeft()
com.facebook.react.touch.JSResponderHandler: void clearJSResponder()
com.facebook.react.uimanager.util.ReactFindViewUtil: android.view.View findView(android.view.View,java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String decryptBytes(java.security.Key,byte[])
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$7(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object setValue(java.lang.Object)
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.facebook.react.devsupport.ReleaseDevSupportManager: void handleException(java.lang.Exception)
com.facebook.react.uimanager.ReactShadowNode: void setDisplay(com.facebook.yoga.YogaDisplay)
com.facebook.react.ReactInstanceManager: void detachRootView(com.facebook.react.uimanager.ReactRoot)
com.nozbe.watermelondb.WMDatabaseBridge: void queryIds(int,java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.interfaces.BundleLoadCallback: void onError(java.lang.Exception)
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[],float,float,com.facebook.react.bridge.ReadableArray,boolean)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.react.CoreModulesPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.fabric.FabricUIManagerBinding: void driveCxxAnimations()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int subscribeForKeyboardEvents(com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper,boolean,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
androidx.constraintlayout.widget.Barrier: void setType(int)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.facebook.react.devsupport.RedBoxContentView$StackAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
com.facebook.react.DebugCorePackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
com.facebook.react.devsupport.DevSupportManagerBase: void showPausedInDebuggerOverlay(java.lang.String,com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean cxxNativeAnimatedEnabled()
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion: DrawerStateChangedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal$ReactAndroid_release()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$Companion: LayoutAnimationController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.uimanager.events.PointerEventHelper: int getButtonChange(java.lang.String,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void removeNodeFromParent(com.facebook.react.uimanager.ReactShadowNode,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableLayoutAnimationsOnIOS()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion: IntBufferBatchMountItem$Companion()
com.facebook.react.views.text.PreparedLayoutTextView: android.text.style.ClickableSpan getClickableSpanInCoords(int,int)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component2()
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
androidx.security.crypto.MasterKey: int getUserAuthenticationValidityDurationSeconds()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.facebook.react.animated.InterpolationAnimatedNode: java.util.regex.Pattern access$getNumericPattern$cp()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: void onSetPausedInDebuggerMessage(java.lang.String)
com.facebook.react.viewmanagers.RNGestureHandlerButtonManagerInterface: void setForeground(android.view.View,boolean)
com.facebook.react.devsupport.DevSupportManagerBase: void showNewError$lambda$6(com.facebook.react.devsupport.DevSupportManagerBase,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.interfaces.ErrorType)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task onSuccessTask(com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean)
com.facebook.react.ReactInstanceManager$1: ReactInstanceManager$1(com.facebook.react.ReactInstanceManager)
com.facebook.react.uimanager.events.Event: long getTimestampMs()
com.facebook.react.views.text.ReactFontManager: void addCustomFont(android.content.Context,java.lang.String,int)
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.facebook.react.runtime.BridgelessReactContext$BridgelessJSModuleInvocationHandler: BridgelessReactContext$BridgelessJSModuleInvocationHandler(com.facebook.react.runtime.ReactHostImpl,java.lang.Class)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: java.lang.Object getFirstSpan(int,int,java.lang.Class)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void closeWebSocketQuietly()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.uimanager.style.LinearGradient: LinearGradient(com.facebook.react.uimanager.style.LinearGradient$Direction,java.util.List)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void screenDidLayout(android.view.View)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getServerHost(android.content.Context,int)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int getSurfaceId()
com.facebook.react.packagerconnection.JSPackagerClient: com.facebook.react.packagerconnection.ReconnectingWebSocket access$getWebSocket$p(com.facebook.react.packagerconnection.JSPackagerClient)
com.facebook.react.packagerconnection.FileIoHandler: int addOpenFile(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
androidx.biometric.AuthenticationCallbackProvider$1: AuthenticationCallbackProvider$1(androidx.biometric.AuthenticationCallbackProvider)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.facebook.react.viewmanagers.DebuggingOverlayManagerInterface: void clearElementsHighlights(android.view.View)
com.facebook.react.devsupport.ReleaseDevSupportManager: void stopInspector()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: ViewManagersPropertyCache$BoxedBooleanPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.facebook.react.runtime.ReactHostImpl$1: void onResume()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object getValue()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getChildAt(int)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addCurrentConfig(java.util.HashMap)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.uimanager.style.ColorEdges: java.lang.String toString()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineStyle(android.view.View,com.facebook.react.uimanager.style.OutlineStyle)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.devsupport.DevSupportManagerBase$reload$1: void onPackagerDisconnected()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.facebook.react.views.textinput.ReactTextChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.defaults.DefaultReactNativeHost$getUIManagerProvider$1$viewManagerRegistry$1: DefaultReactNativeHost$getUIManagerProvider$1$viewManagerRegistry$1(com.facebook.react.defaults.DefaultReactNativeHost)
com.facebook.hermes.intl.LocaleObjectAndroid: void reInitFromParsedLocaleIdentifier()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.mkuczera.RNReactNativeHapticFeedbackModule: RNReactNativeHapticFeedbackModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.PackageList: android.content.Context getApplicationContext()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useTurboModules()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isPrivateUseExtension()
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$getContentHandlers$p(com.facebook.react.modules.websocket.WebSocketModule)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.biometric.BiometricManager$Api30Impl: BiometricManager$Api30Impl()
com.oblador.keychain.PrefsStorage: byte[] getBytesForPassword(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: android.text.TextUtils$TruncateAt getEllipsizeMode(java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.facebook.react.bridge.JavaOnlyArray: long getLong(int)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getFontFeatureSettings()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleSetJSResponder(double,boolean)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableFabricLogs()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: int addDrawableId(android.content.Context,java.lang.String)
com.swmansion.rnscreens.Screen: java.util.List getSheetDetents()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.facebook.hermes.intl.DateTimeFormat: java.lang.Object ToDateTimeOptions(java.lang.Object,java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.runtime.ReactLifecycleStateManager: void moveToOnHostDestroy(com.facebook.react.bridge.ReactContext)
com.oblador.keychain.KeychainModule: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult decryptCredentials(java.lang.String,com.oblador.keychain.cipherStorage.CipherStorage,com.oblador.keychain.PrefsStorage$ResultSet,java.lang.String,androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setGrouping(boolean)
com.facebook.react.uimanager.events.PointerEventHelper: boolean isListening(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.request.ImageRequest: boolean getLoadThumbnailOnlyForAndroidSdkAboveQ()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String toString()
com.swmansion.rnscreens.Screen: com.google.android.material.bottomsheet.BottomSheetBehavior getSheetBehavior()
com.reactnativecommunity.asyncstorage.SerialExecutor: SerialExecutor(java.util.concurrent.Executor)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load$default(boolean,boolean,boolean,int,java.lang.Object)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.NativeMethodsHelper: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$14()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onLayout(boolean,int,int,int,int)
com.facebook.react.ReactNativeHost: java.lang.String getJSMainModuleName()
com.facebook.react.modules.blob.BlobProvider: boolean onCreate()
com.facebook.react.animated.ColorAnimatedNode$Companion: ColorAnimatedNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.biometric.BiometricFragment$Api28Impl: void setSubtitle(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsForTests: ReactNativeFeatureFlagsForTests()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int getSurfaceId()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUnique(java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setAutoInitEnabled(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.modules.blob.BlobModule$Companion: BlobModule$Companion()
com.facebook.react.fabric.SynchronousEvent: boolean equals(java.lang.Object)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void drawShadowRect(android.graphics.Canvas,android.graphics.RectF)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: java.lang.String getCipherStorageName()
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_START: LogicalEdge$BLOCK_START(java.lang.String,int)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.common.futures.SimpleSettableFuture: boolean isCancelled()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: java.lang.String toString()
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.hermes.intl.NumberFormat: void setNumberFormatUnitOptions(java.util.Map)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.modules.dialog.AlertFragment: android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void execute()
com.facebook.react.shell.MainReactPackage: MainReactPackage(com.facebook.react.shell.MainPackageConfig)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.facebook.react.devsupport.DevInternalSettings: void isStartSamplingProfilerOnInit$annotations()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.facebook.react.fabric.SurfaceHandlerBinding: void setProps(com.facebook.react.bridge.NativeMap)
com.facebook.react.uimanager.style.LinearGradient$Companion: LinearGradient$Companion()
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.facebook.react.modules.websocket.WebSocketModule$connect$2: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
com.swmansion.rnscreens.ScreenViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getModuleName()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
kotlin.properties.ObservableProperty: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus valueOf(java.lang.String)
com.facebook.react.bridge.DynamicNative: void recycle()
com.facebook.react.bridge.DynamicFromMap$Companion: DynamicFromMap$Companion()
com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier: ParsedLocaleIdentifier$ParsedLanguageIdentifier()
com.facebook.react.devsupport.PausedInDebuggerOverlayDialogManager: void showPausedInDebuggerOverlay$lambda$3$lambda$0(com.facebook.react.devsupport.interfaces.DevSupportManager$PausedInDebuggerOverlayCommandListener,android.view.View)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogger: LegacyArchitectureLogger()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextAttributes applyChild(com.facebook.react.views.text.TextAttributes)
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue: void executeBatch(long,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.text.ReactVirtualTextViewManager$Companion: ReactVirtualTextViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.swmansion.rnscreens.Screen: void setBeingRemoved(boolean)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid: java.lang.String format(double)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ScrollEventType: kotlin.enums.EnumEntries getEntries()
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.facebook.react.uimanager.drawable.OutlineDrawable: void drawRectangularOutline(android.graphics.Canvas)
com.facebook.react.jstasks.HeadlessJsTaskContext: boolean hasActiveTasks()
com.facebook.react.modules.vibration.VibrationModule$Companion: VibrationModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String toString()
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List getInnerShadows()
com.facebook.hermes.intl.LocaleIdentifier: void parseUnicodeExtensions(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.ParsedLocaleIdentifier)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.react.uimanager.events.TouchEventType: TouchEventType(java.lang.String,int,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: void onHostDestroy(android.app.Activity)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.devsupport.DevSupportManagerBase: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.facebook.react.modules.image.ImageLoaderModule$getSizeWithHeaders$dataSubscriber$1: ImageLoaderModule$getSizeWithHeaders$dataSubscriber$1(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ThemedReactContext: int getSurfaceId()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $values()
com.facebook.react.devsupport.inspector.InspectorNetworkHelper: InspectorNetworkHelper()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
androidx.biometric.CancellationSignalProvider$1: CancellationSignalProvider$1(androidx.biometric.CancellationSignalProvider)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableFixForParentTagDuringReparenting()
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$4(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.ReactStrikethroughSpan)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion: DefaultTurboModuleManagerDelegate$Companion()
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion: void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView)
com.facebook.react.ReactActivityDelegate: android.content.Context getContext()
com.facebook.imagepipeline.request.ImageRequest: int getPreferredHeight()
com.facebook.react.views.text.TextTransform: java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.uimanager.ReactShadowNode: void setMargin(int,float)
com.facebook.react.devsupport.DevServerHelper$BundleType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthMaxContentJNI(long)
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String getFontFeatureSettings()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
com.facebook.react.views.view.ViewGroupClickEvent: boolean canCoalesce()
androidx.biometric.BiometricManager$DefaultInjector: boolean isStrongBiometricGuaranteed()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString$lambda$4(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion: java.lang.String nameForInstructionString(int)
com.facebook.react.devsupport.PackagerStatusCheck$run$1: PackagerStatusCheck$run$1(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableNewBackgroundAndBorderDrawables()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesMessageQueueThread()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createRootShadowNode()
com.google.android.material.textfield.TextInputLayout: int getMinEms()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] $values()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager getNativeViewHierarchyManager()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.util.List readMapBufferListValue(int)
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.fabric.FabricUIManagerBinding: void stopSurface(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(int,long)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String ICUKeyToCanonicalKey(java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.scroll.ScrollEvent: boolean canCoalesce()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean shouldAnimateLayout(android.view.View)
com.facebook.react.animated.NativeAnimatedModule$dropAnimatedNode$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] $values()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor(android.widget.ProgressBar)
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mutate()
com.facebook.react.views.text.TextLayoutManager: android.text.Layout$Alignment getTextAlignment(com.facebook.react.common.mapbuffer.MapBuffer,android.text.Spannable,java.lang.String)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.react.modules.clipboard.ClipboardModule$Companion: ClipboardModule$Companion()
com.facebook.react.uimanager.TransformHelper$helperMatrix$1: double[] initialValue()
com.facebook.react.uimanager.ReactShadowNode: void setBorder(int,float)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerBase: void setFpsDebugEnabled$lambda$25(com.facebook.react.devsupport.DevSupportManagerBase,boolean)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.animated.SpringAnimation$PhysicsState: double component2()
com.swmansion.rnscreens.SearchBarManager: void setHideWhenScrolling(com.swmansion.rnscreens.SearchBarView,boolean)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowColor(int)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getHeight()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.common.SystemClock: long nanoTime()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.facebook.react.modules.network.ProgressResponseBody: void access$setTotalBytesRead$p(com.facebook.react.modules.network.ProgressResponseBody,long)
com.facebook.react.uimanager.common.ViewUtil: boolean isRootTag(int)
com.facebook.react.modules.camera.ImageStoreManager$Companion: void closeQuietly(java.io.Closeable)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager()
com.facebook.react.uimanager.drawable.OutlineDrawable: float getOutlineOffset()
com.facebook.react.uimanager.style.Overflow$Companion: com.facebook.react.uimanager.style.Overflow fromString(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void showDevOptionsDialog()
androidx.appcompat.widget.AppCompatEditText: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.views.image.MultiPostprocessor$Companion: MultiPostprocessor$Companion()
com.facebook.react.util.RNLog: void l(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule$getSizeWithHeaders$dataSubscriber$1: void onNewResultImpl(com.facebook.datasource.DataSource)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void startObservingChanges(com.swmansion.reanimated.keyboard.KeyboardAnimationCallback,boolean,boolean)
com.facebook.react.devsupport.DevSupportManagerBase: java.lang.String getUniqueTag()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.dialog.AlertFragment$Companion: AlertFragment$Companion()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.facebook.imagepipeline.request.ImageRequest: int getPreferredWidth()
androidx.biometric.BiometricManager$Injector: boolean isStrongBiometricGuaranteed()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForDeviceOrientationChanges()
com.facebook.react.modules.network.ForwardingCookieHandler: void addCookies(java.lang.String,java.util.List)
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setTrackTintColor(android.view.View,java.lang.Integer)
com.rnbiometrics.ReactNativeBiometrics: android.app.Activity access$100(com.rnbiometrics.ReactNativeBiometrics)
com.swmansion.worklets.WorkletsModule: WorkletsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.BridgelessCatalystInstance: java.util.Collection getNativeModules()
com.nozbe.watermelondb.WMDatabaseDriver: void markAsCached(java.lang.String,java.lang.String)
com.facebook.react.uimanager.style.ColorStopUtils: java.lang.Float resolveColorStopPosition(com.facebook.react.uimanager.LengthPercentage,float)
androidx.fragment.app.Fragment: int getPopEnterAnim()
com.facebook.react.devsupport.RedBoxContentView: android.widget.ProgressBar access$getLoadingIndicator$p(com.facebook.react.devsupport.RedBoxContentView)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnativejni_so()
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.OnLayoutEvent$Companion: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int,int)
com.facebook.react.uimanager.events.EventDispatcherImpl: void clearEventsToDispatch()
com.learnium.RNDeviceInfo.RNDeviceModule: void hasGms(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.TextAttributeProps: boolean isBackgroundColorSet()
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1: StatusBarModule$setColor$1(android.app.Activity,boolean,int,com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.ViewModel: void onCleared()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onScrollChanged(int,int,int,int)
com.facebook.react.ReactPackageHelper$getNativeModuleIterator$1$1: ReactPackageHelper$getNativeModuleIterator$1$1(java.util.List)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Dimensions: com.facebook.react.uimanager.LengthPercentage getY()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden$lambda$1(android.app.Activity,boolean)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable getCompositeBackgroundDrawable(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: boolean useFabricInterop()
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setNativeValue(android.view.View,boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: ReactJsExceptionHandler$ProcessedErrorImpl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,int,boolean,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setHardwareAccelerated(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig$lambda$0(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$Settable: void getProperties(java.util.Map)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setFullScreenSwipeShadowEnabled(android.view.View,boolean)
com.google.android.material.chip.Chip: float getChipIconSize()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.graphics.drawable.Drawable getDrawable()
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.facebook.react.views.drawer.ReactDrawerLayout: void openDrawer$ReactAndroid_release()
com.facebook.react.devsupport.ReleaseDevSupportManager: java.lang.String getSourceMapUrl()
com.facebook.react.fabric.interop.UIBlock: void execute(com.facebook.react.fabric.interop.UIBlockViewResolver)
com.facebook.imagepipeline.request.ImageRequest: boolean equals(java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType[] values()
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean getAnimating$ReactAndroid_release()
com.facebook.react.runtime.ReactSurfaceImpl$Companion: boolean access$isRTL(com.facebook.react.runtime.ReactSurfaceImpl$Companion,android.content.Context)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromAssets(android.content.res.AssetManager,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutRemovedView(android.view.View)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle fromString(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void update()
com.oblador.keychain.KeychainModule: void internalWarmingBestCipher()
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.lang.String getPackageName()
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$getWebSocketConnections$p(com.facebook.react.modules.websocket.WebSocketModule)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setStart(int)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderBottomLeftRadius()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerNonInteractive: DecryptionResultHandlerNonInteractive()
com.facebook.react.uimanager.TouchTargetHelper: java.util.List findTargetPathAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[])
com.facebook.react.views.text.PreparedLayoutTextViewManager: com.facebook.react.views.text.PreparedLayoutTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer put(int,java.lang.String)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setStartSamplingProfilerOnInit(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.react.uimanager.Spacing: Spacing(float,float[])
com.facebook.react.views.image.ReactImageDownloadListener: boolean onLevelChange(int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragmentWrapper getFragmentWrapper()
com.facebook.react.ReactInstanceManager: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.biometric.FingerprintDialogFragment: void onResume()
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.facebook.react.views.view.ReactViewGroup: void endViewTransition(android.view.View)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.JSBundleLoader$Companion: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.ReactInstanceManager: void unregisterCxxErrorHandlerFunc()
com.facebook.react.devsupport.DevSupportManagerBase: boolean hasUpToDateJSBundleInCache()
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
com.facebook.react.views.scroll.ReactScrollView: void scrollToChild(android.view.View)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.facebook.react.ReactInstanceManager$2: void onJSBundleLoadedFromServer()
com.facebook.jni.ExceptionHelper: ExceptionHelper()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onAttachedToWindow()
com.facebook.imagepipeline.listener.BaseRequestListener: void onUltimateProducerReached(java.lang.String,java.lang.String,boolean)
com.facebook.hermes.intl.LocaleIdTokenizer: com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag nextSubtag()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.uimanager.style.LogicalEdge$BLOCK: int toSpacingType()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.hermes.intl.LocaleObject: com.facebook.hermes.intl.ILocaleObject createFromLocaleId(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.modules.vibration.VibrationModule: android.os.Vibrator getVibrator()
com.facebook.react.modules.core.JavaTimerManager$Companion: JavaTimerManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: void onStop()
androidx.biometric.AuthenticatorUtils: boolean isSupportedCombination(int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.common.annotations.DeprecatedInNewArchitecture: java.lang.String message()
com.facebook.react.animated.NativeAnimatedModule$stopListeningToAnimatedNodeValue$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.views.text.ReactTextView: void setIncludeFontPadding(boolean)
com.facebook.react.animated.NativeAnimatedNodesManager: void flattenAnimatedNodeOffset(int)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.oblador.keychain.cipherStorage.CipherStorage$DecryptionContext: CipherStorage$DecryptionContext(java.lang.String,java.security.Key,byte[],byte[])
com.facebook.react.uimanager.style.CornerRadii: int hashCode()
com.facebook.react.viewmanagers.RNGestureHandlerRootViewManagerDelegate: RNGestureHandlerRootViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task continueWith(com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task cancelled()
com.facebook.react.NativeModuleRegistryBuilder$Companion: NativeModuleRegistryBuilder$Companion()
com.facebook.react.uimanager.ReactAxOrderHelper: void processAxOrderTree$traverseAndDisableAxFromExcludedViews(java.util.Set,android.view.View[],java.util.List,android.view.View,android.view.View,boolean)
com.facebook.react.runtime.internal.bolts.Task$Companion: kotlin.Unit completeAfterTask$lambda$5$lambda$4(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionEnd()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.react.animated.ColorAnimatedNode: void tryApplyNativeColor()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.views.scroll.ReactScrollView: void onDetachedFromWindow()
com.facebook.react.modules.blob.BlobProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
androidx.biometric.FingerprintDialogFragment$3: void onChanged(java.lang.Object)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderStyle(com.facebook.react.uimanager.style.BorderStyle)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onSizeChanged(int,int,int,int)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.react.runtime.ReactHostImplDevHelper: void reload(java.lang.String)
com.facebook.react.uimanager.events.EventEmitterImpl: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String getFile()
com.facebook.hermes.intl.ILocaleObject: java.util.ArrayList getUnicodeExtensions(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getUnbufferedRuntimeExecutor()
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp[] $values()
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.StateWrapper getStateWrapper$ReactAndroid_release()
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: int hashCode()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager$Companion: ReactHorizontalScrollViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component4()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem$Companion: java.lang.String getTAG()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIImplementation: void replaceExistingNonRootView(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void updateInsets(int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.RequestCloseEvent: RequestCloseEvent(int)
com.facebook.react.animated.AdditionAnimatedNode: void update$ReactAndroid_release()
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasNonActionableSpeakingDescendants(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.facebook.react.uimanager.StateWrapper: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.facebook.react.modules.network.OkHttpClientProvider: void setOkHttpClientFactory(com.facebook.react.modules.network.OkHttpClientFactory)
com.facebook.react.views.text.ReactFontManager$Companion: ReactFontManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: DecryptionResultHandlerInteractiveBiometric(com.facebook.react.bridge.ReactApplicationContext,com.oblador.keychain.cipherStorage.CipherStorage,androidx.biometric.BiometricPrompt$PromptInfo)
com.facebook.react.views.drawer.ReactDrawerLayout: void closeDrawer$ReactAndroid_release()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableArray copyReadableArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface destroy$default(com.facebook.react.ReactHost,java.lang.String,java.lang.Exception,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.facebook.react.runtime.ReactSurfaceImpl: void updateInitProps(android.os.Bundle)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.reactperflogger.NativeModulePerfLogger)
androidx.appcompat.widget.AppCompatTextView: void access$1101(androidx.appcompat.widget.AppCompatTextView,int)
com.facebook.react.devsupport.FpsView: com.facebook.react.modules.debug.FpsDebugFrameCallback access$getFrameCallback$p(com.facebook.react.devsupport.FpsView)
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.PreparedLayoutTextViewManager$Companion: PreparedLayoutTextViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: boolean equals(java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onSubmit(java.lang.String,java.lang.Object)
com.facebook.react.common.mapbuffer.WritableMapBuffer: int getCount()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.fabric.FabricUIManager: void destroyUnmountedView(int,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startPreparedTransitions()
com.facebook.react.views.text.TextAttributeProps: void setFontFamily(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.facebook.react.packagerconnection.FileIoHandler: java.util.Map access$getOpenFiles$p(com.facebook.react.packagerconnection.FileIoHandler)
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String getName()
com.facebook.react.views.text.internal.span.TextInlineImageSpan: android.graphics.drawable.Drawable getDrawable()
com.facebook.react.ReactHost: void removeReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.image.ReactImageView$TilePostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
com.facebook.react.ReactActivityDelegate: boolean onKeyLongPress(int,android.view.KeyEvent)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int access$getKeyOffsetForBucketIndex(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry()
com.facebook.react.views.text.PreparedLayoutTextView: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.textinput.ReactEditText: boolean getContainsImages()
com.facebook.react.bridge.DynamicFromArray$Companion: DynamicFromArray$Companion()
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineWidth(float)
com.facebook.react.modules.websocket.WebSocketModule$connect$2: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.devsupport.ReleaseDevSupportManager: void toggleElementInspector()
com.facebook.react.devsupport.BridgelessDevSupportManager: void handleReloadJS()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo getFpsInfo(long)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component1()
androidx.security.crypto.MasterKeys: void validate(android.security.keystore.KeyGenParameterSpec)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.LayoutDirectionUtil: int toAndroidFromYoga(com.facebook.yoga.YogaDirection)
com.facebook.react.bridge.Inspector$Companion: com.facebook.react.bridge.Inspector instance()
com.facebook.jni.HybridData: void resetNative()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBoxSizingJNI(long,int)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.modules.dialog.DialogModule: boolean access$isInForeground$p(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.runtime.ReactInstance: java.util.Collection getNativeModules()
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: boolean canCoalesce()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setStartStart(com.facebook.react.uimanager.LengthPercentage)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
androidx.appcompat.widget.ViewUtils$Api29Impl: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean pageScroll(int)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.views.modal.ReactModalHostView: void dispatchProvideStructure(android.view.ViewStructure)
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper: com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper getInstance()
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: UIViewOperationQueue$ConfigureLayoutAnimationOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchEvent$Companion: ReactSwitchEvent$Companion()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJniSignature(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.react.views.scroll.ReactScrollView: void cancelPostTouchScrolling()
com.facebook.react.devsupport.PerftestDevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.reactnativecommunity.cameraroll.CameraRollModule: boolean putImageInfo(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean,boolean)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.facebook.react.modules.blob.BlobCollector: void install(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule)
com.facebook.react.modules.core.ReactChoreographer$Companion: com.facebook.react.modules.core.ReactChoreographer getInstance()
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: void reset()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: float[] access$getZERO_RADII$p()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: int getViewId()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: void apply(android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.pm.PackageInfo getPackageInfo()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$destroy$7(java.lang.String,java.lang.Exception)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion: ReactSwipeRefreshLayout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.hermes.intl.DateTimeFormat: void initializeDateTimeFormat(java.util.List,java.util.Map)
com.facebook.react.fabric.events.EventEmitterWrapper$Companion: EventEmitterWrapper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion: void getUiManagerType$annotations()
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.String getString(int)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidthPercent(float)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector access$instance()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher access$100(androidx.activity.ComponentActivity)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onFailure$lambda$0(java.lang.Throwable,com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
com.facebook.react.common.ClearableSynchronizedPool: java.lang.Object acquire()
com.facebook.react.views.text.ReactTextShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.views.textinput.ReactEditText: void onScrollChanged(int,int,int,int)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void clear()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.nozbe.watermelondb.WMDatabaseBridge: java.lang.Object lambda$query$1(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray,com.nozbe.watermelondb.WMDatabaseDriver)
com.swmansion.reanimated.NodesManager: void onHostPause()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isPinOrFingerprintSetSync()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.react.ReactActivity: com.facebook.react.ReactNativeHost getReactNativeHost()
com.google.android.material.button.MaterialButton: int getIconGravity()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: int getInitialNumberFormatStyle(com.facebook.hermes.intl.IPlatformNumberFormatter$Notation,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.views.image.MultiPostprocessor: MultiPostprocessor(java.util.List)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion: ReactDrawerLayoutManager$Companion()
com.oblador.keychain.KeychainModule: boolean isSecureHardwareAvailable()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext getContext()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void handlePostTouchScrolling(int,int)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: LayoutAnimationController()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactTextShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableCppPropsIteratorSetter()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: int lambda$sortViewsByTags$0(android.view.View,android.view.View)
com.facebook.react.internal.interop.InteropEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasure(int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometricManualRetry: void onAuthenticationError(int,java.lang.CharSequence)
com.facebook.react.runtime.BridgelessCatalystInstance: void destroy()
okhttp3.RequestBody: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
com.facebook.react.runtime.internal.bolts.Task$Companion: void completeImmediately$lambda$3(com.facebook.react.runtime.internal.bolts.Continuation,com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.TaskCompletionSource)
com.facebook.react.runtime.ReactHostImpl: void onHostLeaveHint(android.app.Activity)
com.facebook.react.animated.SpringAnimation$PhysicsState: double getPosition()
com.facebook.react.views.text.ReactFontManager: ReactFontManager(com.facebook.react.common.assets.ReactFontManager)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType _get_type_$lambda$7(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.packagerconnection.PackagerConnectionSettings: java.lang.String getDebugServerHost()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomStart()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: void applyTransformation(float,android.view.animation.Transformation)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void startCreatingModule()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetGapJNI(long,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.uimanager.ViewManagerRegistry$1: void run()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
androidx.fragment.app.DialogFragment: int getTheme()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
com.facebook.react.uimanager.events.EventDispatcherImpl: void dispatchAllEvents()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTree(android.view.View,com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setFpsDebugEnabled(boolean)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule$Companion: ReactDevToolsSettingsManagerModule$Companion()
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityOrder(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: ReactDrawerLayoutManager$DrawerEventEmitter(androidx.drawerlayout.widget.DrawerLayout,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtagIterationFailed: LocaleIdTokenizer$LocaleIdSubtagIterationFailed(com.facebook.hermes.intl.LocaleIdTokenizer)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ShowEvent: java.lang.String getEventName()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float,float)
com.facebook.react.views.modal.ReactModalHostView: android.content.DialogInterface$OnShowListener getOnShowListener()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: IPlatformDateTimeFormatter$TimeZoneName(java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean useAlwaysAvailableJSErrorHandling()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(java.nio.ByteBuffer,int)
com.facebook.react.fabric.SurfaceHandlerBinding: int _getSurfaceId()
com.facebook.react.devsupport.BundleDownloader: void processMultipartResponse(java.lang.String,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutWidth()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.hermes.intl.JSObjects$NullObject: JSObjects$NullObject(com.facebook.hermes.intl.JSObjects$1)
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getCodename(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.NativeProxy$1: int findPrecedingViewTagForTransition(int)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel valueOf(java.lang.String)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getCount()
com.facebook.react.modules.i18nmanager.I18nManagerModule$Companion: I18nManagerModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction: void call()
com.facebook.react.runtime.ReactInstance: void initializeEagerTurboModules()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: ViewManagersPropertyCache$DoublePropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,double)
com.facebook.react.views.modal.RequestCloseEvent$Companion: RequestCloseEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1: void runGuarded()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setDecelerationRate(float)
com.facebook.react.devsupport.DevSupportManagerBase: void setLastErrorStack(com.facebook.react.devsupport.interfaces.StackFrame[])
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.textinput.ReactEditText: void setNativeEventCount(int)
com.facebook.react.ReactInstanceManager: java.util.Collection getViewManagerNames()
androidx.biometric.DeviceUtils: boolean shouldUseFingerprintForCrypto(android.content.Context,java.lang.String,java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.bridge.ReadableNativeArray$Companion: ReadableNativeArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$getToken$3(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.devsupport.PerftestDevSupportManager: void stopInspector()
com.facebook.hermes.intl.JSObjects: boolean isBoolean(java.lang.Object)
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setKeyGenParameterSpec(android.security.keystore.KeyGenParameterSpec)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
com.facebook.react.uimanager.UIImplementation: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean fuseboxNetworkInspectionEnabled()
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: void saveToCameraRoll(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$Companion: ReadableMapBuffer$Companion()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.oblador.keychain.decryptionHandler.DecryptionResultHandler: com.oblador.keychain.cipherStorage.CipherStorage$DecryptionResult getResult()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.react.uimanager.style.BorderRadiusStyle: boolean hasRoundedBorders()
androidx.biometric.FingerprintDialogFragment: FingerprintDialogFragment()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableViewRecyclingForView()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionEnd()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffEnd()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.react.internal.AndroidChoreographerProvider$AndroidChoreographer: AndroidChoreographerProvider$AndroidChoreographer()
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.oblador.keychain.DeviceAvailability: boolean isFaceAuthAvailable(android.content.Context)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] $values()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: TouchTargetHelper$TouchTargetReturnType(java.lang.String,int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.react.PackageList: android.content.res.Resources getResources()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.common.api.internal.zzd: zzd()
com.facebook.react.runtime.ReactInstance: void registerSegmentNative(int,java.lang.String)
com.facebook.react.uimanager.UIImplementation: UIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.modal.ShowEvent: ShowEvent(int,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getJsBundleLoader$26(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.swmansion.worklets.WorkletsMessageQueueThread: WorkletsMessageQueueThread()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: java.lang.CharSequence getAccessedFeatureFlags$lambda$1(java.lang.String)
com.facebook.hermes.intl.NumberFormat: boolean isLocaleIdType(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setGapPercent(float)
com.facebook.react.uimanager.ReactRoot: void setShouldLogContentAppeared(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: PointerEvent$PointerEventState(int,int,int,int,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Set)
com.facebook.react.defaults.DefaultReactNativeHost: java.lang.Boolean isHermesEnabled()
com.facebook.react.module.model.ReactModuleInfo: boolean isTurboModule()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.IllegalViewOperationException: android.view.View getView()
com.swmansion.reanimated.ReanimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void closeQuietly()
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: android.view.animation.Animation createAnimationImpl$ReactAndroid_release(android.view.View,int,int,int,int)
com.facebook.react.views.modal.RequestCloseEvent: com.facebook.react.bridge.WritableMap getEventData()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform getTextTransform()
com.nozbe.watermelondb.WMDatabase$TransactionFunction: void applyTransactionFunction()
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int[] getSharedGroup(int)
com.rnbiometrics.ReactNativeBiometrics: boolean isCurrentSDKMarshmallowOrLater()
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.lang.String format(double)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.hermes.intl.JSObjects: boolean isString(java.lang.Object)
com.facebook.hermes.intl.PlatformNumberFormatterICU: void initialize(android.icu.text.NumberFormat,com.facebook.hermes.intl.ILocaleObject,com.facebook.hermes.intl.IPlatformNumberFormatter$Style)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: AndroidInfoHelpers()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.facebook.react.views.image.ImageLoadEvent$Companion: ImageLoadEvent$Companion()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateLayout(int,int,int,int,int,int,int,int)
com.facebook.react.devsupport.interfaces.StackFrame: boolean isCollapsed()
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName$ReactAndroid_release(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[])
com.facebook.react.views.modal.ReactModalHostView: androidx.activity.ComponentDialog getDialog()
com.facebook.react.views.modal.ShowEvent$Companion: ShowEvent$Companion()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getBucketIndexForKey(int)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: void initialize(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
androidx.biometric.BiometricViewModel: int getInferredAuthenticationResultType()
com.facebook.react.modules.network.ReactCookieJarContainer: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
androidx.biometric.CancellationSignalProvider: void cancel()
com.swmansion.reanimated.NodesManager: void onHostResume()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.facebook.react.views.text.ReactTextView: void onLayout(boolean,int,int,int,int)
androidx.biometric.BiometricViewModel: void setFingerprintDialogState(int)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: RedBoxDialogSurfaceDelegate(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.text.PreparedLayoutTextViewManager$Companion: PreparedLayoutTextViewManager$Companion()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetBool(java.lang.String,boolean,com.facebook.react.bridge.Promise)
androidx.fragment.app.DialogFragment: void onDetach()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.runtime.ReactSurfaceImpl: android.view.ViewGroup getView()
com.facebook.react.animated.SpringAnimation: boolean isAtRest()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.viewmanagers.DebuggingOverlayManagerInterface: void highlightTraceUpdates(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: MapBuffer$DataType(java.lang.String,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$addRootView$0(android.view.View)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ThemedReactContext getThemedContext()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String getName()
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.animated.SpringAnimation: double getDisplacementDistanceForState(com.facebook.react.animated.SpringAnimation$PhysicsState)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: boolean isValid()
com.facebook.react.views.scroll.ReactScrollViewManager: void setIsInvertedVirtualizedList(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.runtime.BridgelessCatalystInstance: void initialize()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.react.runtime.ReactHostImpl: void raiseSoftException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setId(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollToNextPage(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isReduceMotionEnabledValue()
com.facebook.react.devsupport.PackagerStatusCheck$Companion: PackagerStatusCheck$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: NativeAnimatedModule$BatchExecutionOpCodes(java.lang.String,int,int)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
com.facebook.react.common.ShakeDetector: void onSensorChanged(android.hardware.SensorEvent)
com.swmansion.reanimated.NodesManager: void stopUpdatingOnAnimationFrame()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: void dangerouslyReset()
com.swmansion.reanimated.ReanimatedPackage: ReanimatedPackage()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(int)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object getKey()
com.facebook.react.views.textinput.ReactEditText: android.text.method.KeyListener access$getKeyListener$cp()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.uimanager.internal.LegacyArchitectureShadowNodeLogger: LegacyArchitectureShadowNodeLogger()
com.facebook.react.fabric.FabricUIManager$3: void runGuarded()
com.facebook.react.R$string: R$string()
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.TextLayoutManager: int calculateLineCount(android.text.Layout,int)
com.facebook.react.views.drawer.events.DrawerSlideEvent: float getOffset()
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.util.RNLog: void logInternal(com.facebook.react.bridge.ReactContext,java.lang.String,int)
com.facebook.react.views.text.TextAttributeProps: float getTextShadowOffsetDy()
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.modules.dialog.AlertFragment$Companion$getAccessibleTitle$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.nozbe.watermelondb.WatermelonDBPackage: WatermelonDBPackage()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean useTurboModules()
com.facebook.react.runtime.ReactHostImpl: void onHostPause()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.react.views.view.ViewGroupClickEvent$Companion: ViewGroupClickEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthStretchJNI(long)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.modules.i18nmanager.I18nUtil: void swapLeftAndRightInRTL(android.content.Context,boolean)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageView: void warnImageSource(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableFabricLogs()
com.facebook.react.animated.PropsAnimatedNode: void connectToView(int,com.facebook.react.bridge.UIManager)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: void execute()
com.facebook.hermes.intl.LocaleObjectICU: java.lang.Object getLocale()
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.nozbe.watermelondb.WMDatabase: int count(java.lang.String,java.lang.Object[])
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean hasAnimation(int,int)
com.facebook.hermes.intl.PlatformDateTimeFormatterICU$PatternUtils: java.lang.String getPatternWithoutLiterals(java.lang.String)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getStartEnd()
com.facebook.react.fabric.FabricUIManager: boolean isOnMainThread()
com.swmansion.reanimated.keyboard.Keyboard: void updateHeight(androidx.core.view.WindowInsetsCompat,boolean)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: void disableFpsListener()
com.facebook.react.fabric.SurfaceHandlerBinding: void setMountable(boolean)
com.facebook.react.modules.network.ProgressRequestBody: long contentLength()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.facebook.react.modules.core.TimingModule: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.common.MapBuilder$Builder: MapBuilder$Builder()
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.imagehelper.ImageSource$Companion: ImageSource$Companion()
com.facebook.react.uimanager.ViewManagerRegistry: void lambda$onSurfaceStopped$0(java.util.List,int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid$PatternUtils: PlatformDateTimeFormatterAndroid$PatternUtils()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(double)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: void scheduleCallback(java.lang.Runnable,long)
com.facebook.react.common.JavascriptException: JavascriptException(java.lang.String)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle: ReactFontManager$TypefaceStyle(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableAccumulatedUpdatesInRawPropsAndroid()
androidx.security.crypto.EncryptedSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.react.uimanager.style.ColorStop: ColorStop(java.lang.Integer,com.facebook.react.uimanager.LengthPercentage,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.network.OkHttpCompat: okhttp3.Headers getHeadersFromMap(java.util.Map)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback getReactTextViewManagerCallback()
com.swmansion.rnscreens.SearchBarManager: void setInputType(android.view.View,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.facebook.react.views.scroll.VelocityHelper: float getXVelocity()
com.facebook.react.uimanager.annotations.ReactProp: java.lang.String name()
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean access$getDEBUG_MODE$cp()
com.facebook.react.views.text.ReactTextView: void onAttachedToWindow()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: int getOpacity()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: DebuggingOverlayManager()
com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager getCookieManager()
com.facebook.react.uimanager.events.Event: void init(int,int,long)
com.facebook.react.runtime.ReactSurfaceImpl: void detach()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(android.view.View)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.internal.interop.InteropEvent: com.facebook.react.bridge.WritableMap eventData()
com.facebook.react.runtime.BridgelessCatalystInstance: java.lang.String getSourceURL()
com.facebook.react.views.image.ImageLoadEvent$Companion: java.lang.String eventNameForType(int)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int getDurationMs()
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Normalize(double[],double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onMeasure(int,int)
com.facebook.react.runtime.ReactHostImpl: ReactHostImpl(android.content.Context,com.facebook.react.runtime.ReactHostDelegate,com.facebook.react.fabric.ComponentFactory,boolean,boolean)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.facebook.react.uimanager.ReactShadowNode: java.lang.Integer getHeightMeasureSpec()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: int getInputType()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect parseAndCreateDropShadowEffect$default(com.facebook.react.uimanager.FilterHelper,com.facebook.react.bridge.ReadableMap,android.graphics.RenderEffect,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.views.text.internal.span.CustomStyleSpan: int getStyle()
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.facebook.react.runtime.ReactHostImpl: void handleHostException(java.lang.Exception)
com.facebook.hermes.reactexecutor.HermesExecutor: HermesExecutor(boolean,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView getReactRootView()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.modules.core.JavaTimerManager: void setChoreographerCallback()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.touch.JSResponderHandler$Companion: JSResponderHandler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void finalize()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean canScrollHorizontally(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.react.modules.intent.IntentModule$waitForActivityAndGetInitialURL$1: void onHostResume()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.react.NativeModuleRegistryBuilder: NativeModuleRegistryBuilder(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.request.ImageRequest: boolean isMemoryCacheEnabled()
com.facebook.react.common.ShakeDetectorKt: float access$getSHAKING_WINDOW_NS$p()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.modules.blob.BlobModule: byte[] access$getBytesFromUri(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderWidth()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapPercentJNI(long,int,float)
com.facebook.react.runtime.BridgelessCatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String getName()
com.facebook.react.uimanager.UIImplementation: void removeShadowNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config fromReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManagerResolver: java.util.Collection getViewManagerNames()
com.facebook.react.views.view.ReactViewGroup: boolean isViewClipped(android.view.View,java.lang.Integer)
com.facebook.hermes.intl.LocaleMatcher: com.facebook.hermes.intl.LocaleMatcher$LocaleMatchResult lookupMatch(java.lang.String[])
com.facebook.react.interfaces.TaskInterface: boolean isCancelled()
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.facebook.react.interfaces.TaskInterface: java.lang.Object getResult()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationStart(android.view.animation.Animation)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.runtime.JSRuntimeFactory,boolean,java.util.List,kotlin.jvm.functions.Function1,com.facebook.react.runtime.BindingsInstaller)
com.facebook.react.devsupport.DevSupportManagerBase: void fetchSplitBundleAndCreateBundleLoader$lambda$21(com.facebook.react.devsupport.DevSupportManagerBase,java.lang.String,java.io.File,com.facebook.react.devsupport.DevSupportManagerBase$CallbackWithBundleLoader)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
com.facebook.hermes.intl.LocaleIdTokenizer: boolean isSubtagSeparator(char)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.facebook.drawee.view.DraweeView: void setExtraData(java.lang.Object)
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJavaStackTrace(java.lang.Throwable)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.facebook.react.ReactFragment$Builder: com.facebook.react.ReactFragment$Builder setFabricEnabled(boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIImplementation: void setJSResponder(int,boolean)
com.facebook.react.devsupport.DefaultDevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.interfaces.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager,boolean)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createSendAccessibilityEventMountItem(int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.View)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getOpacity()
com.facebook.hermes.intl.IntlTextUtils: boolean isAlphaNum(java.lang.CharSequence,int,int,int,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void computeBoundingBox(android.view.View,int[])
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int)
com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel[] values()
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.facebook.react.animated.DivisionAnimatedNode: DivisionAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.internal.ChoreographerProvider$Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType: com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType[] $values()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.UIImplementation: void updateRootView(com.facebook.react.uimanager.ReactShadowNode,int,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.uimanager.annotations.ReactProp: long defaultLong()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.facebook.react.views.textinput.ReactEditText: void onLayout(boolean,int,int,int,int)
androidx.security.crypto.MasterKey: boolean isUserAuthenticationRequired()
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
kotlin.random.Random: Random()
com.facebook.react.views.scroll.ReactScrollView: boolean isContentReady()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setDisabled(com.facebook.react.views.text.PreparedLayoutTextView,boolean)
com.facebook.react.runtime.hermes.HermesInstance$Companion: HermesInstance$Companion()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.facebook.react.views.textinput.ReactTextInputFocusEvent: boolean canCoalesce()
com.facebook.react.views.switchview.ReactSwitchManager: void setBackgroundColor(com.facebook.react.views.switchview.ReactSwitch,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isGrayscaleEnabledValue()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey build()
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: void destroyContentView()
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.facebook.react.common.assets.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,com.facebook.react.common.assets.ReactFontManager$TypefaceStyle,android.content.res.AssetManager)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getLayoutDirection()
com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.Priority getPriority()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.facebook.react.uimanager.events.EventDispatcherImpl: void moveStagedEventsToDispatchQueue()
com.facebook.react.modules.network.ProgressRequestBody: void writeTo(okio.BufferedSink)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.facebook.react.ReactFragment: void onResume()
com.facebook.react.bridge.ReactMarker: ReactMarker()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.biometric.BiometricFragment$5: BiometricFragment$5(androidx.biometric.BiometricFragment)
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1: void doInBackgroundGuarded(java.lang.Object[])
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax valueOf(java.lang.String)
com.facebook.react.animated.DiffClampAnimatedNode: void update$ReactAndroid_release()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.facebook.react.BaseReactPackage$getNativeModuleIterator$1$1: com.facebook.react.bridge.ModuleHolder next()
com.facebook.react.ReactRootView: void runApplication()
com.facebook.react.fabric.FabricSoLoader: void staticInit()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.facebook.react.modules.statusbar.StatusBarModule$setColor$1: void runGuarded$lambda$0(android.app.Activity,android.animation.ValueAnimator)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.swmansion.rnscreens.ScreenContentWrapperManager: ScreenContentWrapperManager()
com.facebook.react.uimanager.UIManagerModule$3: void runGuarded()
androidx.biometric.BiometricFragment: void onDeviceCredentialButtonPressed()
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.facebook.react.views.modal.ShowEvent: com.facebook.react.bridge.WritableMap getEventData()
com.zoontek.rnpermissions.RNPermissionsModule: void openPhotoPicker(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Integer getOutlineColor(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setBackgroundImage(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.EventDispatcher: void dispatchAllEvents()
com.facebook.react.modules.devtoolsruntimesettings.Settings: void setShouldReloadAndProfile(boolean)
com.facebook.react.uimanager.style.LogicalEdge: int toSpacingType()
com.facebook.react.ReactInstanceManager: void toggleElementInspector()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.react.common.mapbuffer.MapBuffer getMapBuffer(int)
androidx.fragment.app.Fragment: void onDestroyView()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.style.RadialGradient: RadialGradient(com.facebook.react.uimanager.style.RadialGradient$Shape,com.facebook.react.uimanager.style.RadialGradient$GradientSize,com.facebook.react.uimanager.style.RadialGradient$Position,java.util.List)
com.facebook.react.views.text.ReactTextView: void onDetachedFromWindow()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewCulling()
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
com.facebook.react.runtime.JSTimerExecutor: JSTimerExecutor(com.facebook.jni.HybridData)
com.facebook.jni.HybridClassBase: HybridClassBase()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isGrayscaleEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.devsupport.DevSupportManagerBase: void showDevOptionsDialog$lambda$17(com.facebook.react.devsupport.interfaces.DevOptionHandler[],com.facebook.react.devsupport.DevSupportManagerBase,android.content.DialogInterface,int)
androidx.fragment.app.DialogFragment: void onStart()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enablePropsUpdateReconciliationAndroid()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffsetDx(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: boolean equals(java.lang.Object)
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.Object resolveKnownAliases(java.lang.String,java.lang.Object)
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.google.android.material.chip.Chip: void setMinLines(int)
com.reactnativecommunity.asyncstorage.AsyncLocalStorageUtil: boolean mergeImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
com.facebook.hermes.intl.LocaleObjectAndroid: java.util.Locale getLocaleWithoutExtensions()
com.facebook.react.BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1: BaseReactPackage$getNativeModuleIterator$$inlined$Iterable$1(java.util.Iterator,com.facebook.react.BaseReactPackage,com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void onCreate(android.database.sqlite.SQLiteDatabase)
com.facebook.react.animated.SpringAnimation$PhysicsState: java.lang.String toString()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean updateRuntimeShadowNodeReferencesOnCommit()
com.facebook.react.views.text.ReactRawTextManager$Companion: ReactRawTextManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.DevServerHelper: void openPackagerConnection(java.lang.String,com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion: RedBoxDialogSurfaceDelegate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: int getSurfaceId()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task access$getTASK_NULL$cp()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: ReactAccessibilityDelegate$AccessibilityRole(java.lang.String,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.facebook.react.modules.network.ProgressRequestBody: ProgressRequestBody(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.OutlineDrawable getOutlineDrawable(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator getInterpolator()
com.facebook.react.devsupport.DebugOverlayController: void setFpsDebugViewVisible$lambda$0(boolean,com.facebook.react.devsupport.DebugOverlayController)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate: boolean isShowing()
com.facebook.react.common.futures.SimpleSettableFuture: void set(java.lang.Object)
com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody createGzip(okhttp3.MediaType,java.lang.String)
com.facebook.react.views.progressbar.ProgressBarContainerView$Companion: ProgressBarContainerView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBlurEffect(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: java.lang.Boolean lambda$callWithExistingReactInstance$16(java.lang.String,com.facebook.react.runtime.ReactHostImpl$ReactInstanceCalback,com.facebook.react.runtime.internal.bolts.Task)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: TabNavigatorObserver(com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
com.facebook.react.fabric.FabricUIManagerBinding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.uimanager.OnLayoutEvent: void setWidth$ReactAndroid_release(int)
com.facebook.react.bridge.ReactContext: void initializeFromOther(com.facebook.react.bridge.ReactContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onScreenWillDisappear()
com.facebook.react.uimanager.BackgroundStyleApplicator: void clipToPaddingBox(android.view.View,android.graphics.Canvas)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.react.HeadlessJsTaskService: com.facebook.react.jstasks.HeadlessJsTaskConfig getTaskConfig(android.content.Intent)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int getLine()
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Integer getColor()
com.oblador.keychain.cipherStorage.CipherStorage: int getCapabilityLevel()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: java.lang.Integer getAutoScrollToTopThreshold()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject unwrapFromBiometricPrompt(android.hardware.biometrics.BiometricPrompt$CryptoObject)
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: void close()
com.facebook.react.ReactRootView: void finalize()
com.facebook.react.shell.MainReactPackage: com.facebook.react.bridge.NativeModule viewManagersMap$lambda$9()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion: ReactSafeAreaViewManager$Companion()
com.facebook.react.runtime.hermes.HermesInstance: HermesInstance()
com.facebook.react.runtime.ReactInstance: void access$loadJSBundleFromAssets(com.facebook.react.runtime.ReactInstance,android.content.res.AssetManager,java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.Spacing getBorderWidth()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.facebook.hermes.intl.LocaleIdentifier: void addVariantSubtag(java.lang.String,com.facebook.hermes.intl.ParsedLocaleIdentifier$ParsedLanguageIdentifier)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isWiredHeadphonesConnectedSync()
com.swmansion.rnscreens.Screen: void setSheetGrabberVisible(boolean)
com.facebook.react.ReactDelegate: boolean isFabricEnabled()
com.facebook.react.uimanager.BaseViewManager: BaseViewManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.TouchTargetHelper: void getChildPoint(float,float,android.view.ViewGroup,android.view.View,android.graphics.PointF)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void registerExitingAncestors(android.view.View)
com.facebook.react.uimanager.IViewGroupManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$iterator$1: ReadableMapBuffer$iterator$1(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb: java.lang.String getEncryptionTransformation()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(android.view.View,boolean)
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$reload$4(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitEnd()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
com.facebook.react.modules.blob.BlobProvider$Companion: BlobProvider$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.BiometricViewModel: BiometricViewModel()
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
com.facebook.hermes.intl.PlatformNumberFormatterICU: int getCurrencyDigits(java.lang.String)
com.facebook.react.uimanager.style.ProcessedColorStop: ProcessedColorStop(java.lang.Integer,java.lang.Float)
com.facebook.react.bridge.BridgeReactContext: boolean isBridgeless()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1: void onAnimationStart(android.view.animation.Animation)
com.facebook.react.views.scroll.ScrollEventType$Companion: java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType)
com.facebook.react.ReactInstanceManager: ReactInstanceManager(android.content.Context,android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader,java.lang.String,java.util.List,boolean,com.facebook.react.devsupport.DevSupportManagerFactory,boolean,boolean,com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener,com.facebook.react.common.LifecycleState,com.facebook.react.bridge.JSExceptionHandler,com.facebook.react.devsupport.interfaces.RedBoxHandler,boolean,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,int,com.facebook.react.bridge.UIManagerProvider,java.util.Map,com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder,com.facebook.react.common.SurfaceDelegateFactory,com.facebook.react.devsupport.interfaces.DevLoadingViewManager,com.facebook.react.internal.ChoreographerProvider,com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void installJSIBindings(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.views.text.internal.span.TextInlineImageSpan buildInlineImageSpan()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerReloadCommand()
com.facebook.react.jstasks.HeadlessJsTaskContext: com.facebook.react.jstasks.HeadlessJsTaskContext getInstance(com.facebook.react.bridge.ReactContext)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.WritableMap inlineViewJson(int,int,int,int,int,int)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setValue(android.view.View,boolean)
com.facebook.hermes.intl.PlatformDateTimeFormatterAndroid$PatternUtils: java.lang.String getPatternWithoutLiterals(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void ON_CHECKED_CHANGE_LISTENER$lambda$2(android.widget.CompoundButton,boolean)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$stopSurface$1()
com.swmansion.reanimated.ReanimatedModule: void lambda$initialize$4(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void reset()
androidx.biometric.BiometricFragment$7: void run()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl$connectWebSocket$webSocket$1: void onClosed$lambda$3(com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
com.facebook.react.views.image.ReactImageDownloadListener: void onProgressChange(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.biometric.CryptoObjectUtils$Api23Impl: void initKeyGenerator(javax.crypto.KeyGenerator,android.security.keystore.KeyGenParameterSpec)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
com.facebook.react.fabric.SynchronousEvent: int component2()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: boolean willChangeBounds()
com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener: void onRequestClose(android.content.DialogInterface)
com.facebook.react.util.RNLog: void e(java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTimestamp(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.biometric.BiometricErrorData: java.lang.CharSequence getErrorMessage()
androidx.security.crypto.EncryptedSharedPreferences: boolean isReservedKey(java.lang.String)
com.facebook.react.ReactActivityDelegate: void onResume()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String getDefaultAliasIfEmpty(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.swmansion.rnscreens.ScreenContentWrapperManager: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.viewmanagers.RNCSafeAreaViewManagerDelegate: RNCSafeAreaViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.devsupport.DevInternalSettings: void setJSDevModeEnabled(boolean)
com.facebook.react.runtime.cxxreactpackage.CxxReactPackage: CxxReactPackage(com.facebook.jni.HybridData)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: DefaultTurboModuleManagerDelegate$Builder()
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.swmansion.rnscreens.ScreenViewManager: void setSheetElevation(android.view.View,int)
com.facebook.react.runtime.ReactInstance$loadJSBundle$1: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType valueOf(java.lang.String)
com.facebook.react.devsupport.ReleaseDevSupportManager: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.drawee.drawable.ForwardingDrawable: void setHotspot(float,float)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void lambda$finishSharedAnimation$1(android.view.ViewParent)
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.uimanager.ReactZIndexedViewGroup: int getZIndexMappedChildIndex(int)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: int getCurrentIndex()
com.facebook.react.modules.fresco.ReactNetworkImageRequest: ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap,com.facebook.react.modules.fresco.ImageCacheControl,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactNativeHost: java.lang.String getBundleAssetName()
androidx.biometric.BiometricFragment: void sendSuccessAndDismiss(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.devsupport.DevServerHelper: void downloadBundleFromURL$default(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,okhttp3.Request$Builder,int,java.lang.Object)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setAnimating(android.view.View,boolean)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.react.views.image.ReactImageView$Companion: com.facebook.drawee.generic.GenericDraweeHierarchy buildHierarchy(android.content.Context)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String resolveNumberSystemAlias(java.lang.String)
com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object getOrThrow()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool get()
com.facebook.react.views.scroll.ReactScrollView: void enableFpsListener()
com.facebook.react.views.text.TextAttributes: void setMaxFontSizeMultiplier(float)
com.facebook.react.uimanager.events.Event: int getViewTag()
com.facebook.react.animated.SubtractionAnimatedNode: java.lang.String prettyPrint$ReactAndroid_release()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.facebook.react.views.text.internal.span.ShadowStyleSpan: ShadowStyleSpan(float,float,float,int)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.devsupport.interfaces.DevLoadingViewManager: void updateProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.modules.camera.ImageStoreManager$Companion: void access$closeQuietly(com.facebook.react.modules.camera.ImageStoreManager$Companion,java.io.Closeable)
com.facebook.react.uimanager.events.FabricEventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
com.facebook.react.views.image.ScaleTypeStartInside: ScaleTypeStartInside()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void draw(android.graphics.Canvas)
com.facebook.react.packagerconnection.FileIoHandler: void run()
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.TaskCompletionSource create$ReactAndroid_release()
com.facebook.react.runtime.ReactHostImpl: void onHostResume(android.app.Activity)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter: void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.text.TextAttributeProps: int getEffectiveFontSize()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidthPercent(float)
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactInstanceManager$2: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: boolean isPartiallyScrolledInView(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.JSRuntimeFactory,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.runtime.JSTimerExecutor,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,com.facebook.react.runtime.BindingsInstaller,boolean,com.facebook.react.runtime.ReactHostInspectorTarget)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.react.views.text.TextAttributeProps: void setAllowFontScaling(boolean)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.biometric.AuthenticationCallbackProvider: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback getBiometricCallback()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection[] values()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setFeedbackUnderlay(android.view.View,android.graphics.drawable.Drawable)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation: boolean isValid()
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
com.facebook.react.modules.network.OkHttpClientProvider: void setClient$ReactAndroid_release(okhttp3.OkHttpClient)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: boolean deleteDatabase()
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.drawable.BorderDrawable: int fastBorderCompatibleColorOrZero(int,int,int,int,int,int,int,int)
com.facebook.react.runtime.ReactSurfaceView: int getUIManagerType()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableDestroyShadowTreeRevisionAsync()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.LongStreamingStats: double getAverage()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void checkCppVersion()
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: EncryptedFile$EncryptedFileOutputStream(java.io.FileDescriptor,java.io.OutputStream)
com.facebook.react.views.text.ReactTextShadowNode$1: ReactTextShadowNode$1(com.facebook.react.views.text.ReactTextShadowNode)
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: NativeReactDevToolsRuntimeSettingsModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void setStateWrapper$ReactAndroid_release(com.facebook.react.uimanager.StateWrapper)
com.swmansion.reanimated.ReanimatedModule: void invalidate()
com.nozbe.watermelondb.WMDatabaseDriver: boolean isCached(java.lang.String,java.lang.String)
androidx.biometric.CryptoObjectUtils$Api28Impl: CryptoObjectUtils$Api28Impl()
androidx.fragment.app.Fragment: java.lang.String getTag()
com.facebook.react.views.text.ReactTypefaceUtils: int parseFontStyle(java.lang.String)
com.facebook.react.uimanager.style.CornerRadii: float component1()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.ReactSurfaceImpl: ReactSurfaceImpl(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.DiffClampAnimatedNode: DiffClampAnimatedNode(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle[] values()
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.facebook.react.runtime.ReactSurfaceImpl: void clear()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.facebook.react.uimanager.annotations.ReactPropGroup: long defaultLong()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component3()
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setPaddingPercent(int,float)
com.swmansion.reanimated.DevMenuUtils: void addDevMenuOption(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevOptionHandler)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.react.ReactActivity: void onBackPressed()
com.facebook.react.modules.dialog.DialogTitle: DialogTitle(android.content.Context)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.react.jscexecutor.JSCExecutor$Companion: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
androidx.biometric.BiometricFragment$StopDelayingPromptRunnable: BiometricFragment$StopDelayingPromptRunnable(androidx.biometric.BiometricViewModel)
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$1(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.ReactAbsoluteSizeSpan)
com.facebook.hermes.intl.IPlatformCollator: com.facebook.hermes.intl.IPlatformCollator configure(com.facebook.hermes.intl.ILocaleObject)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getWidth()
com.facebook.react.runtime.ReactHostImplDevHelper: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: UIViewOperationQueue$UpdateViewExtraData(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.Object)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void draw(android.graphics.Canvas)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.MemoryPressureRouter getMemoryPressureRouter()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: int getDevServerPort(android.content.Context)
com.facebook.react.views.image.ReactImageView: void setSourceImage()
com.facebook.react.uimanager.drawable.OutlineDrawable: void updateOutlineRect()
androidx.biometric.R$styleable: R$styleable()
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.facebook.react.ReactFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.SwitchCompat: void drawableStateChanged()
com.swmansion.rnscreens.CustomSearchView: void setText(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableAccessibilityOrder()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
androidx.biometric.BiometricPrompt$PromptInfo$Builder: androidx.biometric.BiometricPrompt$PromptInfo$Builder setSubtitle(java.lang.CharSequence)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData access$initHybrid(boolean,java.lang.String,long)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.react.uimanager.drawable.BackgroundDrawable: BackgroundDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.views.text.ReactBaseTextShadowNode: void buildSpannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,android.text.SpannableStringBuilder,java.util.List,com.facebook.react.views.text.TextAttributes,boolean,java.util.Map,int)
com.facebook.react.common.ShakeDetector: ShakeDetector(com.facebook.react.common.ShakeDetector$ShakeListener)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void reset()
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.asyncstorage.R: R()
com.facebook.react.uimanager.ReactRoot: int getRootViewTag()
com.rnbiometrics.CreateSignatureCallback: void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computeBorderRadii()
com.reactnativecommunity.cameraroll.NativeCameraRollModuleSpec: void getPhotos(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addPreAllocateMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] values()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexShrink(float)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: int px(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: void setGlobalHookSettings(java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: double roundTo3Places(double)
com.facebook.react.runtime.JSCInstance: JSCInstance()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableViewCulling()
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.KeyStore getKeyStoreAndLoad()
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: java.lang.String getGlobalHookSettings()
com.facebook.react.views.textinput.ContentSizeWatcher: void onLayout()
com.facebook.react.devsupport.DebugOverlayController$Companion: DebugOverlayController$Companion()
com.facebook.react.uimanager.style.RadialGradient$Shape: com.facebook.react.uimanager.style.RadialGradient$Shape valueOf(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: CompositeBackgroundDrawable(android.content.Context,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager$Companion: ReactHorizontalScrollViewManager$Companion()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: ViewManagerPropertyUpdater()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getFabricEnabled()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: void access$setValueMap$cp(com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[])
com.facebook.react.uimanager.style.BorderRadiusStyle: void setStartEnd(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.ReactFragment: ReactFragment()
com.facebook.react.views.scroll.ReactScrollView: void onAttachedToWindow()
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List,double)
com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode toTileMode(java.lang.String)
com.facebook.react.views.scroll.ScrollEvent: void init(int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void removeAndDisposeAllChildren()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.View)
com.facebook.react.ReactRootView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
androidx.biometric.AuthenticationCallbackProvider: AuthenticationCallbackProvider(androidx.biometric.AuthenticationCallbackProvider$Listener)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: java.lang.String toString()
com.facebook.react.shell.MainReactPackage: MainReactPackage(com.facebook.react.shell.MainPackageConfig,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.oblador.keychain.PrefsStorage: boolean isKeyForCipherStorage(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.facebook.react.ReactInstanceManager: void destroy()
com.facebook.react.modules.websocket.WebSocketModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.hermes.intl.LocaleIdentifier: LocaleIdentifier()
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String access$getDENIED$p(com.facebook.react.modules.permissions.PermissionsModule)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactEditText: void setOverflow(java.lang.String)
com.facebook.crypto.cipher.NativeGCMCipher: int nativeUpdate(byte[],int,int,byte[],int)
com.facebook.react.common.DebugServerException: java.lang.String getOriginalMessage()
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: LinearGradient$Direction$KeywordType(java.lang.String,int,java.lang.String)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: void invoke(int,int)
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface destroy(java.lang.String,java.lang.Exception)
com.facebook.hermes.intl.JSObjects: double getJavaDouble(java.lang.Object)
com.facebook.react.HeadlessJsTaskService: void onHeadlessJsTaskStart(int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.uimanager.common.ViewUtil: ViewUtil()
com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] $values()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enablePreparedTextLayout()
com.nozbe.watermelondb.WMDatabaseBridge: void disconnectDriver(int)
com.facebook.react.modules.core.TimingModule: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.text.ReactTextView: void setLetterSpacing(float)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.text.PreparedLayoutTextViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.react.uimanager.UIImplementation: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getSourceUrl(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Builder: com.facebook.react.defaults.DefaultTurboModuleManagerDelegate build(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
androidx.biometric.R$color: R$color()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter access$findManagerSetter(com.facebook.react.uimanager.ViewManagerPropertyUpdater,java.lang.Class)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: InteropUIBlockListener()
com.facebook.react.modules.network.ResponseUtil: ResponseUtil()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderTopRightRadius()
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
com.facebook.react.uimanager.JSTouchDispatcher: void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.bridge.WritableMap[] createPointersArray(com.facebook.react.uimanager.events.TouchEvent)
androidx.biometric.KeyguardUtils$Api16Impl: boolean isKeyguardSecure(android.app.KeyguardManager)
com.facebook.react.ReactActivityDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.facebook.react.views.text.internal.span.ReactUnderlineSpan: ReactUnderlineSpan()
com.facebook.react.views.switchview.ReactSwitchShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.devsupport.DevServerHelper: DevServerHelper(com.facebook.react.modules.debug.interfaces.DeveloperSettings,android.content.Context,com.facebook.react.packagerconnection.PackagerConnectionSettings)
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData access$initHybrid()
androidx.biometric.BiometricPrompt$CryptoObject: android.security.identity.IdentityCredential getIdentityCredential()
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper: float computeDummyLayout(int,boolean)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidPromptForPlayServices()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void scrollTo(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.RippleDrawable getRippleDrawable(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.react.MemoryPressureRouter: void removeMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.scroll.ReactScrollViewHelper: int getDefaultScrollAnimationDuration(android.content.Context)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation$Companion: PositionAndSizeAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation$Companion: void setDevLoadingEnabled(boolean)
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: java.lang.String getName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableViewRecyclingForText()
com.facebook.react.uimanager.UIImplementation: void setViewLocalData(int,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.text.ReactBaseTextShadowNode: android.text.Spannable spannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,java.lang.String,boolean,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.views.imagehelper.ImageSource: double getSize()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
androidx.fragment.app.Fragment: boolean getRetainInstance()
com.facebook.react.uimanager.JSPointerDispatcher: void onUp(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.viewmanagers.ModalHostViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean arrayContains(int[],int)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: java.lang.String getEncryptionTransformation()
com.facebook.react.fabric.mounting.MountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: long getLastScrollDispatchTime()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.facebook.react.packagerconnection.PackagerConnectionSettings$Companion: PackagerConnectionSettings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.SpringAnimation: SpringAnimation(com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter findNodeSetter(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.facebook.react.devsupport.DevInternalSettings: boolean isStartSamplingProfilerOnInit()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
com.facebook.react.views.view.ReactViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.hermes.intl.LocaleObjectAndroid: com.facebook.hermes.intl.ILocaleObject createFromLocale(java.util.Locale)
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream: boolean expiredTtl()
com.facebook.react.views.scroll.VelocityHelper: float getYVelocity()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.facebook.react.uimanager.RootViewManager$Companion: RootViewManager$Companion()
androidx.biometric.FingerprintDialogFragment: android.graphics.drawable.Drawable getAssetForTransition(int,int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetJSResponder(int,int,boolean)
com.facebook.hermes.intl.OptionHelpers: java.lang.Enum searchEnum(java.lang.Class,java.lang.Object)
com.facebook.react.bridge.NativeArray$Companion: NativeArray$Companion()
androidx.biometric.BiometricViewModel: void setCanceledFrom(int)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setUIManagerProvider(com.facebook.react.bridge.UIManagerProvider)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableCustomFocusSearchOnClippedElementsAndroid()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void onCatalystInstanceDestroyed()
com.facebook.react.packagerconnection.FileIoHandler: java.util.Map handlers()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: UIViewOperationQueue$DispatchStringCommandOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromJS(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
com.facebook.react.bridge.ReactContext: void onUserLeaveHint(android.app.Activity)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getReactTag()
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType[] values()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void drawRectangularBackgroundWithBorders(android.graphics.Canvas)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.runtime.ReactHostInspectorTarget$Companion: ReactHostInspectorTarget$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeight(float)
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String toString()
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.appcompat.widget.AppCompatTextView: void access$801(androidx.appcompat.widget.AppCompatTextView,int)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion: SimpleSpringInterpolator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.text.PreparedLayoutTextView$Companion: PreparedLayoutTextView$Companion()
com.facebook.drawee.view.DraweeView: void onMeasure(int,int)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.lang.String getEncryptionAlgorithm()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String getName()
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: AndroidSwitchManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View findTransformedView(android.view.View)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createHueRotateEffect(float,android.graphics.RenderEffect)
com.swmansion.rnscreens.Screen: void setSheetDetents(java.util.List)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.RadialGradient: kotlin.Pair radiusToSide(float,float,float,float,com.facebook.react.uimanager.style.RadialGradient$GradientSize$KeywordType)
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent obtain(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.react.modules.blob.BlobModule$networkingResponseHandler$1: com.facebook.react.bridge.WritableMap toResponseData(okhttp3.ResponseBody)
com.facebook.react.modules.core.JavaTimerManager: void onHostResume()
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getPlaceholder()
com.facebook.hermes.intl.JSObjects: boolean isNull(java.lang.Object)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getParent()
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme[] values()
androidx.security.crypto.EncryptedSharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)
com.facebook.react.uimanager.UIImplementation: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: ReactNativeFirebaseAppRegistrar()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$applyLayoutUpdate$1: void onAnimationRepeat(android.view.animation.Animation)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setLargeTitle(android.view.View,boolean)
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: kotlin.enums.EnumEntries getEntries()
androidx.biometric.DeviceUtils: boolean isModelInPrefixList(android.content.Context,java.lang.String,int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$getViewWidth$p(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component2()
com.facebook.react.animated.PropsAnimatedNode: void updateView()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float,int)
com.facebook.react.devsupport.DevServerHelper$closeInspectorConnection$1: java.lang.Object doInBackground(java.lang.Object[])
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderWidth(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void draw(android.graphics.Canvas)
com.facebook.react.animated.NativeAnimatedModule$queueAndExecuteBatchedOperations$1: NativeAnimatedModule$queueAndExecuteBatchedOperations$1(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenContentWrapperManager: com.swmansion.rnscreens.ScreenContentWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.netinfo.NetInfoModule: void initialize()
com.facebook.react.uimanager.ReactShadowNode: void setMeasureSpecs(int,int)
com.facebook.react.animated.AnimatedNode: void addChild$ReactAndroid_release(com.facebook.react.animated.AnimatedNode)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.facebook.react.animated.NativeAnimatedModule$disconnectAnimatedNodes$1: NativeAnimatedModule$disconnectAnimatedNodes$1(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.facebook.hermes.intl.IPlatformNumberFormatter: com.facebook.hermes.intl.IPlatformNumberFormatter setSignificantDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.runtime.ReactSurfaceView$Companion: ReactSurfaceView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.pgsqlite.SQLitePlugin: org.pgsqlite.SQLitePlugin$QueryType getQueryType(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean removeOrAnimateExitRecursive(android.view.View,boolean,boolean)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.facebook.react.devsupport.DevInternalSettings: void setAnimationFpsDebugEnabled(boolean)
com.reactnativecommunity.asyncstorage.SerialExecutor$1: SerialExecutor$1(com.reactnativecommunity.asyncstorage.SerialExecutor,java.lang.Runnable)
com.facebook.react.uimanager.events.Event: Event()
com.facebook.react.uimanager.annotations.ReactProp: java.lang.String customType()
com.oblador.keychain.KeychainModule: com.oblador.keychain.SecurityLevel getSecurityLevelOrDefault(com.facebook.react.bridge.ReadableMap,java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.BackgroundDrawable: BackgroundDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.style.BorderInsets,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: ReactViewGroup$ChildrenLayoutChangeListener(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes$Companion: NativeAnimatedModule$BatchExecutionOpCodes$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.TextLayoutManager$1: java.lang.Object initialValue()
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: java.lang.String getStringValue()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters$lambda$2(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText,android.view.View,boolean)
com.facebook.react.uimanager.ThemedReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: int getKey()
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate getReactActivityDelegate()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode)
com.zoontek.rnpermissions.RNPermissionsModule: void checkMultiple(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: android.text.TextPaint getTextPaint()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BackgroundDrawable ensureBackgroundDrawable(android.view.View)
com.facebook.react.animated.NativeAnimatedNodesManager: void connectAnimatedNodeToView(int,int)
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactClippingViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.views.image.ReactImageDownloadListener: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.facebook.react.views.textinput.ReactEditText: boolean isMultiline$ReactAndroid_release()
com.facebook.react.modules.network.NetworkingModule: boolean access$getShuttingDown$p(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.views.textinput.ReactEditText: void onContentSizeChange()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onViewUpdatesCompleted(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.devsupport.DevServerHelper$closePackagerConnection$1: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.bridge.ReadableNativeArray$Companion: int getJNIPassCounter()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: double getDoubleValue()
com.facebook.react.bridge.JSBundleLoader$Companion$createAssetLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: com.google.crypto.tink.KeyTemplate getKeyTemplate()
com.facebook.hermes.intl.LocaleIdentifier: void parseExtensions(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.react.shell.MainReactPackage: java.util.Collection getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: UIViewOperationQueue$CreateViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.UIManagerModuleConstants: UIManagerModuleConstants()
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.events.PointerEventHelper: boolean isBubblingEvent(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.views.imagehelper.ImageSource: java.lang.String getSource()
com.facebook.react.uimanager.ReactAxOrderHelper: void unsetAccessibilityOrder(android.view.View)
com.facebook.hermes.intl.JSObjects: java.lang.Object newObject()
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: boolean enableBridgelessArchitecture()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String access$getNEVER_ASK_AGAIN$p(com.facebook.react.modules.permissions.PermissionsModule)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: java.util.Map access$getINTERPOLATOR$cp()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: UIViewOperationQueue$UpdateInstanceHandleOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,long)
com.facebook.react.devsupport.DevSupportManagerBase: void stopInspector()
com.oblador.keychain.KeychainModule: void getGenericPassword(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setReactPackageTurboModuleManagerDelegateBuilder(com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder)
androidx.biometric.ErrorUtils: ErrorUtils()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableCppPropsIteratorSetter()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void jsonGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType: com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean access$readBooleanValue(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.uimanager.OnLayoutEvent: void setX$ReactAndroid_release(int)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: void unregisterSensor(int)
com.facebook.jni.NativeRunnable: void run()
androidx.fragment.app.Fragment: boolean getPopDirection()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableLayoutAnimationsOnIOS()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.ReactFragment$Builder: com.facebook.react.ReactFragment build()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libhermestooling_so()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setAutoInitEnabled$1(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.defaults.DefaultReactHost: DefaultReactHost()
com.facebook.react.views.text.ReactTextUpdate: float getPaddingBottom()
com.facebook.react.views.text.TextAttributes: java.lang.String toString()
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,int,java.lang.String,int,int)
com.facebook.react.uimanager.UIManagerModule: void updateInsetsPadding(int,int,int,int,int)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.devsupport.LogBoxDialog: androidx.core.view.WindowInsetsCompat onCreate$lambda$3$lambda$1(int,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] getKeys()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactFragment: int checkPermission(java.lang.String,int,int)
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper$ReactAndroid_release()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsGetListeners(com.facebook.react.bridge.Promise)
com.facebook.react.views.drawer.ReactDrawerLayout$Companion: ReactDrawerLayout$Companion()
com.facebook.react.runtime.JSCInstance$Companion: JSCInstance$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.runtime.ReactHostImpl: void lambda$callFunctionOnModule$13(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray,com.facebook.react.runtime.ReactInstance)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthMaxContentJNI(long)
com.facebook.hermes.intl.IPlatformCollator: com.facebook.hermes.intl.IPlatformCollator setCaseFirstAttribute(com.facebook.hermes.intl.IPlatformCollator$CaseFirst)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddingBlock(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableViewRecycling()
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.CanvasUtil: void enableZ(android.graphics.Canvas,boolean)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF getPaddingBoxRect()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void setInterpolator(android.view.animation.Interpolator)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: kotlin.Pair isConfigurationValid(boolean,boolean,boolean)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void isCameraPresent(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextUpdate: int getTextAlign()
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: void sendDebuggerResumeCommand()
com.swmansion.rnscreens.SearchBarManager: void clearText(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAccessibilityRole(java.lang.String)
com.swmansion.reanimated.NativeProxy$1: boolean isLayoutAnimationEnabled()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumBeginEvent(android.view.ViewGroup,int,int)
com.facebook.react.views.image.ReactImageView$Companion: com.facebook.drawee.generic.GenericDraweeHierarchy access$buildHierarchy(com.facebook.react.views.image.ReactImageView$Companion,android.content.Context)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.oblador.keychain.cipherStorage.CipherStorageBase$SelfDestroyKey: void close()
com.facebook.react.runtime.ReactInstance: void prerenderSurface(com.facebook.react.runtime.ReactSurfaceImpl)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key tryGenerateStrongBoxSecurityKey(java.lang.String,boolean)
com.facebook.react.views.scroll.ScrollEventType: ScrollEventType(java.lang.String,int)
com.facebook.react.NativeModuleRegistryBuilder: NativeModuleRegistryBuilder(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager)
com.facebook.react.ReactInstanceManager: void lambda$setupReactContext$4()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewBackground(com.facebook.react.uimanager.drawable.BackgroundDrawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.modules.i18nmanager.I18nUtil: boolean doLeftAndRightSwapInRTL(android.content.Context)
com.facebook.react.uimanager.LayoutShadowNode: void setMarginInline(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: HermesSamplingProfiler()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: IPlatformDateTimeFormatter$FormatMatcher(java.lang.String,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.modules.core.JavaTimerManager$Companion: JavaTimerManager$Companion()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.devsupport.DebugOverlayController$Companion: void requestPermission(android.content.Context)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColorHint(android.content.Context)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: void run()
com.facebook.react.uimanager.ReactShadowNode: void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.runtime.BridgelessCatalystInstance$Companion: BridgelessCatalystInstance$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.views.scroll.ReactScrollView: int getFlingExtrapolatedDistance(int)
com.facebook.react.uimanager.style.Gradient: android.graphics.Shader getShader(float,float)
com.facebook.react.views.modal.ReactModalHostView: boolean getStatusBarTranslucent()
com.facebook.react.devsupport.LogBoxDialog: androidx.core.view.WindowInsetsCompat onCreate$lambda$3$lambda$2(kotlin.jvm.functions.Function2,android.view.View,androidx.core.view.WindowInsetsCompat)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDisplaySync()
com.facebook.react.uimanager.events.Event: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.packagerconnection.PackagerConnectionSettings: void setAdditionalOptionForPackager(java.lang.String,java.lang.String)
com.facebook.react.internal.interop.InteropEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
com.facebook.react.devsupport.DevSupportManagerBase: void setLastErrorType(com.facebook.react.devsupport.interfaces.ErrorType)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getSubtitle()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: boolean isUnicodeVariantSubtag()
androidx.biometric.BiometricFragment: void authenticate(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)
com.facebook.react.modules.devloading.DevLoadingModule: void hide()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String)
com.facebook.react.uimanager.style.OutlineStyle$Companion: OutlineStyle$Companion()
com.facebook.react.uimanager.style.BorderStyle: BorderStyle(java.lang.String,int)
com.facebook.react.modules.core.ReactChoreographer$Companion: com.facebook.react.modules.core.ReactChoreographer overrideInstanceForTest$ReactAndroid_release(com.facebook.react.modules.core.ReactChoreographer)
com.oblador.keychain.exceptions.EmptyParameterException: EmptyParameterException(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map getConstants()
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: void start()
com.google.android.material.chip.Chip: void setMaxLines(int)
com.facebook.react.fabric.FabricUIManagerBinding: int findNextFocusableElement(int,int,int)
com.facebook.react.views.image.ImageLoadEvent: java.lang.String eventNameForType(int)
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(com.facebook.react.bridge.Dynamic)
org.pgsqlite.SQLitePlugin: void closeDatabaseNow(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.text.AttributedCharacterIterator formatToParts(double)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewRecyclingForText()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.facebook.react.uimanager.ShadowNodeRegistry$Companion: ShadowNodeRegistry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.facebook.react.uimanager.OnLayoutEvent$Companion: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.PreparedLayoutTextView: java.lang.CharSequence getText()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: java.util.Map customCommandHandlers()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.uimanager.ShadowNodeRegistry: ShadowNodeRegistry()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.react.uimanager.style.ColorEdges: ColorEdges(int,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetectorKt: boolean access$hasEventBetweenTimestamps(java.util.ArrayList,long,long)
com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode access$getTileMode$p(com.facebook.react.views.image.ReactImageView)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.Intl: java.util.List canonicalizeLocaleList(java.util.List)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.MemoryPressureRouter: void onConfigurationChanged(android.content.res.Configuration)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.facebook.react.runtime.ReactInstance: ReactInstance(com.facebook.react.runtime.BridgelessReactContext,com.facebook.react.runtime.ReactHostDelegate,com.facebook.react.fabric.ComponentFactory,com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,boolean,com.facebook.react.runtime.ReactHostInspectorTarget)
com.facebook.react.uimanager.PointerEvents$Companion: PointerEvents$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.nozbe.watermelondb.WMDatabase: int count(java.lang.String)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: LayoutUpdateAnimation()
com.facebook.react.ReactDelegate: void lambda$reload$0()
com.facebook.react.views.text.TextAttributeProps: int getFontWeight()
com.learnium.RNDeviceInfo.RNDeviceModule: void getBatteryLevel(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager$LayerEffectsHelper: BaseViewManager$LayerEffectsHelper()
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.views.image.ReactImageView$Companion: ReactImageView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.BiometricViewModel: boolean isConfirmationRequired()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void toggleCancelButton(android.view.View,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier: void clear()
com.facebook.hermes.intl.PlatformDateTimeFormatterICU: java.lang.String getPatternForStyle(com.facebook.hermes.intl.ILocaleObject,com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle,com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.uimanager.TransformHelper$helperMatrix$1: java.lang.Object initialValue()
com.facebook.react.runtime.BridgelessCatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setBaselineFunction(com.facebook.yoga.YogaBaselineFunction)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.common.SurfaceDelegate: void destroyContentView()
com.facebook.react.views.scroll.ReactScrollView: void scrollTo(int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.facebook.react.modules.network.ForwardingCookieHandler: ForwardingCookieHandler()
com.facebook.react.uimanager.events.Event: void onDispose()
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager getInstance()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.security.crypto.EncryptedFile: java.io.FileInputStream openFileInput()
com.oblador.keychain.SecurityLevel: SecurityLevel(java.lang.String,int)
com.facebook.react.defaults.DefaultReactActivityDelegate: DefaultReactActivityDelegate(com.facebook.react.ReactActivity,java.lang.String,boolean,boolean)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task forResult(java.lang.Object)
com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion: DrawerSlideEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] $values()
com.facebook.react.viewmanagers.RNSScreenManagerInterface: void setSheetAllowedDetents(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.devloading.DevLoadingModule: void hide$lambda$1(com.facebook.react.modules.devloading.DevLoadingModule)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsOverrides_RNOSS_Stable_Android: boolean useFabricInterop()
com.facebook.react.modules.dialog.DialogModule$Companion: DialogModule$Companion()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com.facebook.react.common.mapbuffer.WritableMapBuffer$MapBufferEntry: double getDoubleValue()
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerInteractiveBiometric: java.lang.Throwable getError()
com.facebook.react.common.JavascriptException: java.lang.String getExtraDataAsJson()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableCustomFocusSearchOnClippedElementsAndroid()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueFindTargetForTouch(int,float,float,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.FabricUIManagerBinding$Companion: FabricUIManagerBinding$Companion()
com.facebook.react.uimanager.BaseViewManager: void setOutlineWidth(android.view.View,float)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dispose()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
org.pgsqlite.SQLitePlugin: void executeSqlBatch(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDeviceName(com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: java.lang.String getSkeleonSymbol()
com.swmansion.worklets.AndroidUIScheduler: void scheduleTriggerOnUI()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
com.facebook.react.ReactInstanceManagerBuilder: ReactInstanceManagerBuilder()
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateY(double[],double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.InterpolationAnimatedNode$Companion: double[][] fromStringPattern(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.ProcessedColorStop: void setColor(java.lang.Integer)
com.facebook.react.uimanager.BaseViewManager$LayerEffectsHelper: void apply(android.view.View,com.facebook.react.bridge.ReadableArray,java.lang.Boolean)
com.facebook.react.bridge.ReactMarker: void nativeLogMarker(java.lang.String,long)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onFailure(java.lang.String,java.lang.Throwable)
com.facebook.react.devsupport.ReleaseDevSupportManager: void destroyRootView(android.view.View)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.facebook.react.bridge.Inspector$Companion: Inspector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.security.crypto.EncryptedSharedPreferences: boolean contains(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean disableMountItemReorderingAndroid()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: boolean contains(int)
com.learnium.RNDeviceInfo.RNDeviceModule: long getBlockSize(android.os.StatFs,java.lang.Boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: void access$assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: FabricUIManager$MountItemDispatchListener(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean updateRuntimeShadowNodeReferencesOnCommit()
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String getText()
com.facebook.react.ReactRootView: void simulateAttachForTesting()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
androidx.core.view.WindowInsetsCompat$Impl20: void setSystemUiVisibility(int)
com.facebook.react.uimanager.events.TouchEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.facebook.react.uimanager.events.EventDispatcherProvider: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: float getSpacing()
com.facebook.react.uimanager.ViewAtIndex$Companion: ViewAtIndex$Companion()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.uimanager.ViewAtIndex: int hashCode()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.facebook.react.common.DebugServerException: DebugServerException(java.lang.String,java.lang.String,int,int)
com.facebook.react.uimanager.RootViewUtil: android.graphics.Point getViewportOffset(android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.ReadableMapBuilder: void put(java.lang.String,int)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Set getHoveringPointerIds()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBackgroundImage(java.util.List)
com.facebook.react.internal.interop.InteropEvent: InteropEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.animated.ValueAnimatedNode: void onValueUpdate()
com.facebook.react.fabric.mounting.MountingManager: void enqueuePendingEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.facebook.react.devsupport.DevInternalSettings: void setElementInspectorEnabled(boolean)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.UnicodeExtensionKeys$1: UnicodeExtensionKeys$1()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void start()
com.facebook.react.runtime.ReactInstance$Companion: ReactInstance$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.biometric.BiometricFragment$2: BiometricFragment$2(androidx.biometric.BiometricFragment)
com.facebook.react.uimanager.events.TouchEventType$Companion: java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType)
com.facebook.react.jscexecutor.JSCExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
com.facebook.react.runtime.JSRuntimeFactory$Companion: JSRuntimeFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.RedBoxContentView$OpenStackFrameTask: RedBoxContentView$OpenStackFrameTask(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsNotifyReady(java.lang.Boolean)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation$Companion: DefaultDevLoadingViewImplementation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.nozbe.watermelondb.WMDatabase: void unsafeDestroyEverything()
com.facebook.hermes.intl.LocaleIdentifier: void parseTransformedExtensionFields(java.lang.CharSequence,com.facebook.hermes.intl.LocaleIdTokenizer,com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag,com.facebook.hermes.intl.ParsedLocaleIdentifier)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.bridge.ReactNativeJniCommonSoLoader: void staticInit()
androidx.biometric.DeviceUtils: boolean isVendorInList(android.content.Context,java.lang.String,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean incorporateMaxLinesDuringAndroidLayout()
com.facebook.react.modules.core.JavaTimerManager$Timer: long getTargetTime()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateProperties(int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.animated.NativeAnimatedModule$connectAnimatedNodeToView$1: NativeAnimatedModule$connectAnimatedNodeToView$1(com.facebook.react.animated.NativeAnimatedModule,int,int)
com.facebook.react.uimanager.UIViewOperationQueue: boolean isEmpty()
com.swmansion.rnscreens.ScreensModule: void updateTransition(double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: boolean enableLayoutAnimationsOnAndroid()
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: void decrypt(com.oblador.keychain.decryptionHandler.DecryptionResultHandler,java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean)
com.facebook.react.runtime.BridgelessAtomicRef: void setInitialValue(java.lang.Object)
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface: void setHidesWhenStopped(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
androidx.biometric.BiometricPrompt$CryptoObject: javax.crypto.Mac getMac()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getOffsetForDynamicData()
com.facebook.react.views.image.ReactImageManager: void setResizeMultiplier(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.facebook.react.views.drawer.events.DrawerSlideEvent: DrawerSlideEvent(int,float)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
androidx.biometric.CryptoObjectUtils$Api30Impl: android.security.identity.IdentityCredential getIdentityCredential(android.hardware.biometrics.BiometricPrompt$CryptoObject)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BorderDrawable ensureBorderDrawable(android.view.View)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.devsupport.DevSupportManagerBase: com.facebook.react.devsupport.interfaces.DevLoadingViewManager getDevLoadingViewManager()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.facebook.react.reactperflogger.NativeModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.views.view.WindowUtilKt: void statusBarShow(android.view.Window)
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
com.facebook.react.uimanager.UIImplementation: void updateInsetsPadding(int,int,int,int,int)
com.facebook.react.packagerconnection.ReconnectingWebSocket: void delayedReconnect()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean enableViewRecyclingForView()
com.facebook.react.devsupport.DevServerHelper: java.lang.String getDevServerSplitBundleURL(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: int getJsArgCount(java.lang.String,java.lang.String,java.lang.Class[])
com.facebook.hermes.reactexecutor.HermesExecutorFactory: void setDebuggerName(java.lang.String)
com.facebook.react.uimanager.drawable.OutlineDrawable: OutlineDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,int,float,com.facebook.react.uimanager.style.OutlineStyle,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.facebook.react.runtime.ReactHostImplDevHelper: com.facebook.react.interfaces.TaskInterface loadBundle(com.facebook.react.bridge.JSBundleLoader)
androidx.activity.OnBackPressedCallback: void setEnabledChangedCallback$activity_release(kotlin.jvm.functions.Function0)
com.facebook.react.runtime.internal.bolts.TaskCompletionSource: void setError(java.lang.Exception)
com.facebook.react.LazyReactPackage$1: void remove()
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray$lambda$5(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext getContext()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.facebook.drawee.view.DraweeView: void onAttachedToWindow()
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean isSpeakingNode(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.View)
com.facebook.react.devsupport.LogBoxDialog: void onCreate(android.os.Bundle)
com.swmansion.rnscreens.CustomToolbar: boolean getShouldAvoidDisplayCutout()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableArray asArray()
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: TurboModuleInteropUtils$MethodDescriptor(java.lang.String,java.lang.String,java.lang.String,int)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.facebook.react.devsupport.DevInternalSettings: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
com.facebook.hermes.reactexecutor.HermesExecutor: void access$setMode$cp(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.facebook.react.uimanager.NoSuchNativeViewException$Companion: NoSuchNativeViewException$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setCancelButtonText(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean stripStyleEquivalentSpans$lambda$3(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.text.internal.span.ReactForegroundColorSpan)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopLeft()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexGrow(float)
com.facebook.react.uimanager.MatrixMathHelper: void applySkewX(double[],double)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandlerHelper(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.ReleaseDevSupportManager: java.lang.String getLastErrorTitle()
com.facebook.react.uimanager.ReactStylesDiffMap: ReactStylesDiffMap(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.devsupport.interfaces.ErrorType: ErrorType(java.lang.String,int,java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinWidth(float)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.facebook.react.views.scroll.ReactScrollView: void updateScrollAwayState(int)
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactActivity: void onCreate(android.os.Bundle)
com.facebook.fresco.ui.common.ImageRenderingInfra: com.facebook.fresco.ui.common.ImageRenderingInfra valueOf(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeightPercent(float)
com.BV.LinearGradient.LinearGradientManager: void setUseAngle(com.BV.LinearGradient.LinearGradientView,boolean)
com.facebook.react.modules.network.NetworkingModule$wrapRequestBodyWithProgressEmitter$1: long getLast()
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.JSPackagerClient access$getPackagerClient$p(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.views.text.TextAttributes: int getEffectiveFontSize()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: InterpolationAnimatedNode$OutputType(java.lang.String,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void stopSurface()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: ViewManagersPropertyCache$ArrayPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.facebook.react.modules.core.DefaultHardwareBackBtnHandler: void invokeDefaultOnBackPressed()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.facebook.react.animated.NativeAnimatedNodesManager: void addAnimatedEventToView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] $values()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.devsupport.DevSupportManagerBase: void access$hideSplitBundleDevLoadingView(com.facebook.react.devsupport.DevSupportManagerBase)
com.facebook.react.views.text.TextLayoutManager: android.text.Spannable createSpannableFromAttributedString(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.animated.AnimationDriver: void runAnimationStep(long)
com.facebook.react.uimanager.BaseViewManager: void setMixBlendMode(android.view.View,java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBlurEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: DevToolsReactPerfLogger$FabricCommitPoint(int)
com.facebook.react.modules.network.NetworkingModule$UriHandler: boolean supports(android.net.Uri,java.lang.String)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void maybeScheduleDispatchOfBatchedEvents$lambda$0(com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextAttributeProps fromMapBuffer(com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task continueWith(com.facebook.react.runtime.internal.bolts.Continuation)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean fuseboxNetworkInspectionEnabled()
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeLocalUri(android.content.Context)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIpAddressSync()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.uimanager.events.EventDispatcherImpl: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightFitContentJNI(long)
com.facebook.react.views.text.ReactTextUpdate: int getJustificationMode()
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.SearchBarManager: void setBarTintColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.HeadlessJsTaskService: com.facebook.react.ReactHost getReactHost()
com.facebook.react.devsupport.interfaces.StackFrame: java.lang.String getFile()
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.bridge.ReactApplicationContext access$getReactContext$p(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.react.views.scroll.ReactScrollView: ReactScrollView(android.content.Context)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewRecyclingForView()
com.facebook.react.views.textinput.ReactEditText$customActionModeCallback$1: void onDestroyActionMode(android.view.ActionMode)
com.facebook.react.modules.blob.BlobModule$webSocketContentHandler$1: BlobModule$webSocketContentHandler$1(com.facebook.react.modules.blob.BlobModule)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: void setValue(double)
com.facebook.react.uimanager.annotations.ReactPropGroup: double defaultDouble()
com.facebook.react.bridge.ReadableNativeMap$Companion: int getJNIPassCounter()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.ProgressResponseBody: long contentLength()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.hermes.intl.IntlTextUtils: boolean isOtherExtension(java.lang.CharSequence,int,int)
com.facebook.react.runtime.ReactSurfaceImpl: java.lang.String getModuleName()
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
com.facebook.react.devsupport.interfaces.DevSupportManager: void registerErrorCustomizer(com.facebook.react.devsupport.interfaces.ErrorCustomizer)
com.facebook.react.animated.SpringAnimation$Companion: SpringAnimation$Companion()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(java.util.Map)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
androidx.fragment.app.Fragment: android.content.Context getContext()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean enableViewCulling()
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration[] values()
com.facebook.react.devsupport.DevSupportManagerBase: void openDebugger()
com.facebook.react.modules.network.NetworkingModule$Companion: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.TouchEventType: java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType)
com.facebook.react.uimanager.style.RadialGradient$GradientSize$Dimensions: RadialGradient$GradientSize$Dimensions(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle$Companion: ReactFontManager$TypefaceStyle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getServerHost(int)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
com.facebook.react.views.text.ReactTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule$addAnimatedEventToView$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.devsupport.DevServerHelper$closePackagerConnection$1: DevServerHelper$closePackagerConnection$1(com.facebook.react.devsupport.DevServerHelper)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: ReactDevToolsRuntimeSettingsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableSynchronousStateUpdates()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsForTests: void setUp()
com.facebook.react.views.text.PreparedLayoutTextView: android.text.Layout getLayout()
com.facebook.react.bridge.JavaOnlyMap$Companion: JavaOnlyMap$Companion()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.react.jstasks.NoRetryPolicy: boolean canRetry()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: android.graphics.RectF computeBorderInsets()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setTopInsetEnabled(android.view.View,boolean)
androidx.fragment.app.DialogFragment: void dismiss()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreenContainer(java.lang.Object)
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[],float,float,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.BackgroundImageLayer$Companion: com.facebook.react.uimanager.style.Gradient parseGradient(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.facebook.react.views.text.internal.span.ReactClickableSpan: int getReactTag()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CustomClientBuilder access$getCustomClientBuilder$cp()
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue getUIViewOperationQueue()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.react.util.RNLog: void a(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropName()
com.facebook.react.views.textinput.ReactEditText: void maybeUpdateTypeface()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,int,boolean,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl[] $values()
com.facebook.react.modules.debug.DevSettingsModule$Companion: DevSettingsModule$Companion()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task callAfterGetOrCreateReactInstance(java.lang.String,com.facebook.react.runtime.ReactHostImpl$ReactInstanceCalback,java.util.concurrent.Executor)
com.facebook.react.views.view.ReactViewGroup: void trackChildViewTransition(int)
com.facebook.react.uimanager.events.Event: boolean experimental_isSynchronous()
com.facebook.react.devsupport.DevSupportManagerBase$reloadAppBroadcastReceiver$1: void onReceive(android.content.Context,android.content.Intent)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean)
com.swmansion.reanimated.ReanimatedModule: void initialize()
com.facebook.imagepipeline.request.BasePostprocessor: java.lang.String getName()
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.ReanimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
com.oblador.keychain.cipherStorage.CipherStorage: java.lang.String getCipherStorageName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableViewCulling()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsDefaults: boolean commonTestFlag()
com.facebook.react.views.textinput.ReactTextInputManager: void setOverflow(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.biometric.BiometricPrompt$CryptoObject: BiometricPrompt$CryptoObject(java.security.Signature)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: IPlatformCollator$Sensitivity(java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrollPerfLoggingEnabled()
com.facebook.react.views.view.ColorUtil: int clamp255(double)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSystemAvailableFeaturesSync()
com.facebook.react.devsupport.DevServerHelper: void openDebugger(com.facebook.react.bridge.ReactContext,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.views.textinput.ReactEditText: void requestFocusFromJS()
org.pgsqlite.SQLitePlugin: android.database.sqlite.SQLiteDatabase getDatabase(java.lang.String)
com.oblador.keychain.KeychainModule: void getGenericPasswordForOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.SharedElement: SharedElement(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.modules.toast.ToastModule: void show$lambda$0(com.facebook.react.modules.toast.ToastModule,java.lang.String,int)
com.facebook.react.devsupport.PackagerStatusCheck$run$1: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPadding(int,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.react.uimanager.style.BorderInsets: void setBorderWidth(com.facebook.react.uimanager.style.LogicalEdge,java.lang.Float)
com.facebook.react.animated.NativeAnimatedNodesManager: void extractAnimatedNodeOffset(int)
com.facebook.react.devsupport.RedBoxContentView: android.widget.TextView access$getReportTextView$p(com.facebook.react.devsupport.RedBoxContentView)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getOrCreateDestroyTask$38(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.uimanager.OnLayoutEvent: int getY$ReactAndroid_release()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)
com.oblador.keychain.KeychainModule: boolean isFaceAuthAvailable()
com.facebook.react.animated.DecayAnimation: void resetConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getLayoutParent()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetViewWithPointerEvents(float[],android.view.View,java.util.List)
com.facebook.react.modules.fresco.SystraceRequestListener: void onRequestCancellation(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getMacAddressSync()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostView: boolean getNavigationBarTranslucent()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl copy$default(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,int,boolean,com.facebook.react.bridge.ReadableNativeMap,int,java.lang.Object)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void getOutline(android.graphics.Outline)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
androidx.fragment.app.Fragment: void performViewCreated()
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] $values()
androidx.security.crypto.EncryptedSharedPreferences$Editor: void apply()
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.runtime.ReactInstance: com.facebook.react.fabric.FabricUIManager getFabricUIManager()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: java.lang.String toString()
com.facebook.react.uimanager.events.TouchEvent: short getCoalescingKey()
com.facebook.react.common.DebugServerException: DebugServerException(java.lang.String)
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int getTotalJsFrames()
com.facebook.react.bridge.Inspector$Companion: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.hermes.reactexecutor.HermesExecutorFactory: HermesExecutorFactory()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.facebook.react.uimanager.style.LogicalEdge$END: int toSpacingType()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.PlatformNumberFormatterICU setFractionDigits(com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType,int,int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUniqueIdSync()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType[] values()
com.facebook.react.uimanager.style.BorderRadiusProp: kotlin.enums.EnumEntries getEntries()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: int getKeyOffset(int)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.google.android.material.chip.Chip: void setGravity(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component4()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getOrCreateModule(java.lang.String,com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder,boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationRepeat(android.animation.Animator)
com.facebook.react.ReactDelegate: void reload()
com.BV.LinearGradient.LinearGradientManager: void setLocations(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactNativeHost: boolean hasInstance()
com.facebook.react.views.text.PreparedLayoutTextViewManager: void setBorderColor(com.facebook.react.views.text.PreparedLayoutTextView,int,java.lang.Integer)
com.facebook.react.uimanager.PixelUtil: float pxToDp(int)
androidx.core.view.WindowInsetsCompat$Impl34: WindowInsetsCompat$Impl34(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthFitContentJNI(long)
com.facebook.react.uimanager.ShadowNodeRegistry: void removeNode(int)
com.oblador.keychain.cipherStorage.CipherStorageBase: java.security.Key tryGenerateRegularSecurityKey(java.lang.String)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: KeyboardAnimationManager(java.lang.ref.WeakReference)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.facebook.react.HeadlessJsTaskService: com.facebook.react.ReactNativeHost getReactNativeHost()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.uimanager.events.PointerEventHelper: int getButtons(java.lang.String,java.lang.String,int)
com.facebook.react.common.mapbuffer.MapBuffer: java.lang.String getString(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.oblador.keychain.KeychainModuleBuilder: com.oblador.keychain.KeychainModuleBuilder withReactContext(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: androidx.core.view.WindowInsetsCompat onApplyWindowInsetsListener(android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onDraw(android.graphics.Canvas)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.text.ReactTextViewManager: void setOverflow(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.UiThreadUtil: void removeOnUiThread(java.lang.Runnable)
com.facebook.react.uimanager.ReactShadowNodeImpl: void getHierarchyInfoWithIndentation(java.lang.StringBuilder,int)
com.facebook.react.uimanager.PointerEvents$Companion: PointerEvents$Companion()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.swmansion.reanimated.NativeProxy$1: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)
com.facebook.react.views.text.ReactTextView: void setOverflow(java.lang.String)
com.facebook.react.uimanager.UIImplementation: void profileNextBatch()
com.facebook.react.interfaces.fabric.ReactSurface: com.facebook.react.interfaces.TaskInterface prerender()
com.facebook.react.modules.core.DeviceEventManagerModule$Companion: DeviceEventManagerModule$Companion()
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: boolean supportsSecureHardware()
com.facebook.react.ReactDelegate: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface destroy(java.lang.String,java.lang.Exception,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.facebook.react.modules.debug.interfaces.DeveloperSettings: void setDeviceDebugEnabled(boolean)
com.facebook.react.modules.image.ImageLoaderModule$getSize$dataSubscriber$1: ImageLoaderModule$getSize$dataSubscriber$1(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addBasicConfig(java.util.HashMap)
com.facebook.react.views.view.ReactViewGroup: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initializeApp(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.runtime.internal.bolts.Executors$ImmediateExecutor: Executors$ImmediateExecutor()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: void setCurrentIndex(int)
com.facebook.react.views.scroll.ReactScrollView: void setPendingContentOffsets(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: void override(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.react.uimanager.UIViewOperationQueue: void flushPendingBatches()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$highTextContrastObserver$1: AccessibilityInfoModule$highTextContrastObserver$1(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,android.os.Handler)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config getConfig()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEndDragEvent(android.view.ViewGroup,float,float)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String getName()
com.facebook.react.touch.JSResponderHandler: void setJSResponder(int,android.view.ViewParent)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsRecursive(android.view.View)
com.swmansion.rnscreens.ScreensModule: ScreensModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap$Companion: JavaOnlyMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NativeProxy$1: void checkDuplicateSharedTag(int,int)
com.facebook.react.fabric.mounting.MountingManager: long measure(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.touch.JSResponderHandler: void maybeUnblockNativeResponder()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxAccessor: void override(com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManagerBinding: void reportMount(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.react.fabric.FabricUIManager$4: int getSurfaceId()
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] values()
com.facebook.react.uimanager.UIImplementation: void calculateRootLayout(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.devsupport.DevServerHelper$Companion: java.lang.String createResourceURL(java.lang.String,java.lang.String)
com.facebook.react.devsupport.ReactInstanceDevHelper: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
com.facebook.react.DebugCorePackage: com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.react.interfaces.fabric.ReactSurface: int getSurfaceID()
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutY()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.learnium.RNDeviceInfo.RNDeviceModule: long getTotalAvailableBlocks(android.os.StatFs,java.lang.Boolean)
androidx.biometric.BiometricPrompt$CryptoObject: BiometricPrompt$CryptoObject(javax.crypto.Mac)
com.facebook.react.uimanager.ViewManagerRegistry: void invalidate()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.react.modules.blob.BlobProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.NativeMap _init_$lambda$2(com.facebook.react.runtime.ReactInstance,java.util.Map)
com.facebook.react.modules.systeminfo.ReactNativeVersion: ReactNativeVersion()
androidx.biometric.BiometricErrorData: int hashCode()
com.facebook.react.animated.NativeAnimatedModule$Companion: NativeAnimatedModule$Companion()
com.facebook.react.uimanager.UIImplementation: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedNodesManager: void runUpdates(long)
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.facebook.react.views.safeareaview.ReactSafeAreaView: void updateState(androidx.core.graphics.Insets)
com.facebook.react.LazyReactPackage$1: java.lang.Object next()
com.facebook.drawee.drawable.ForwardingDrawable: void setAlpha(int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateFromIntent(android.content.Intent)
com.oblador.keychain.cipherStorage.CipherStorageBase: void removeKey(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.Spacing: boolean set(int,float)
org.pgsqlite.SQLitePlugin$QueryType: org.pgsqlite.SQLitePlugin$QueryType[] values()
com.facebook.react.runtime.ReactSurfaceImpl: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher$ReactAndroid_release()
com.facebook.react.uimanager.ReactShadowNode: float getPadding(int)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopEnd(com.facebook.react.uimanager.LengthPercentage)
androidx.biometric.BiometricFragment$6: BiometricFragment$6(androidx.biometric.BiometricFragment)
com.facebook.react.ReactActivityDelegate: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.viewmanagers.RNSSearchBarManagerInterface: void setPlacement(android.view.View,java.lang.String)
com.facebook.react.common.mapbuffer.WritableMapBuffer: double getDouble(int)
com.rnbiometrics.ReactNativeBiometrics: ReactNativeBiometrics(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsLocalAccessor: boolean commonTestFlag()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void doFrameGuarded(long)
com.facebook.react.animated.FrameBasedAnimationDriver$Companion: FrameBasedAnimationDriver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollViewHelper: void updateFabricScrollState(android.view.ViewGroup)
com.facebook.react.uimanager.UIViewOperationQueue: void profileNextBatch()
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
org.pgsqlite.SQLitePlugin$QueryType: org.pgsqlite.SQLitePlugin$QueryType valueOf(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ColorPropConverter: android.graphics.Color getColorInstance(java.lang.Object,android.content.Context)
androidx.biometric.BiometricFragment: void onStop()
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: JavaTimerManager$IdleCallbackRunnable(com.facebook.react.modules.core.JavaTimerManager,long)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: void clear()
com.facebook.react.ReactInstanceManager: void clearReactRoot(com.facebook.react.uimanager.ReactRoot)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map normalizeEventTypes(java.util.Map)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.uimanager.style.ComputedBorderRadius: boolean isUniform()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropType()
com.facebook.react.viewmanagers.RNSScreenStackHeaderConfigManagerInterface: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.events.EventEmitterWrapper: void destroy()
com.facebook.react.views.text.TextAttributeProps: int getTextAlignment(com.facebook.react.uimanager.ReactStylesDiffMap,boolean,int)
com.facebook.react.uimanager.style.BorderColors: BorderColors(java.lang.Integer[])
com.nozbe.watermelondb.WMDatabase: android.database.Cursor lambda$rawQuery$1(java.lang.Object[],android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void cancelSearch(com.swmansion.rnscreens.SearchBarView)
com.swmansion.reanimated.NativeProxy: NativeProxy(com.facebook.react.bridge.ReactApplicationContext,com.swmansion.worklets.WorkletsModule)
com.facebook.react.uimanager.style.LinearGradient$Direction$KeywordType$Companion: LinearGradient$Direction$KeywordType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstanceIdSync()
com.facebook.react.common.assets.ReactFontManager: void addCustomFont(java.lang.String,android.graphics.Typeface)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: android.view.View getView()
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void shutdown()
com.facebook.hermes.intl.PlatformNumberFormatterICU: PlatformNumberFormatterICU()
com.facebook.react.common.annotations.internal.LegacyArchitecture: com.facebook.react.common.annotations.internal.LegacyArchitectureLogLevel logLevel()
org.pgsqlite.SQLitePlugin: void deleteDatabase(java.lang.String,org.pgsqlite.CallbackContext)
com.facebook.react.uimanager.IViewGroupManager: int getChildCount(android.view.View)
androidx.biometric.FingerprintDialogFragment: void updateHelpMessageColor(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void makeSnapshot(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.views.textinput.ReactEditText: int incrementAndGetEventCounter()
com.facebook.react.ReactInstanceManager: void registerCxxErrorHandlerFunc()
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.biometric.ErrorUtils: boolean isKnownError(int)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent$Companion: ReactTextInputSelectionEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewAtIndex: java.lang.String toString()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnativeblob_so()
androidx.biometric.BiometricViewModel: boolean isFingerprintDialogDismissedInstantly()
com.facebook.react.modules.intent.IntentModule$Companion: IntentModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableResourceTimingAPI()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String)
com.facebook.react.animated.TransformAnimatedNode$TransformConfig: void setProperty(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void hasSystemFeature(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStylePadding(int)
com.swmansion.rnscreens.SearchBarManager: void setPlacement(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: ViewManagersPropertyCache$IntPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.interop.InteropModuleRegistry: void registerInteropModule(java.lang.Class,java.lang.Object)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidGetPlayServicesStatus(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createSaturateColorMatrix(float)
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle fromString(java.lang.String)
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface: void setSize(android.view.View,java.lang.String)
com.facebook.react.devsupport.DevServerHelper: void access$setInspectorPackagerConnection$p(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.IInspectorPackagerConnection)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjscexecutor_so()
androidx.biometric.BiometricManager$DefaultInjector: boolean isDeviceSecuredWithCredential()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.runtime.internal.bolts.Task: java.lang.Object access$getLock$p(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: ReactHorizontalScrollView(android.content.Context,com.facebook.react.views.scroll.FpsListener)
com.facebook.react.common.assets.ReactFontManager$TypefaceStyle$Companion: ReactFontManager$TypefaceStyle$Companion()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.react.devsupport.BundleDownloader: void access$processBundleResult(com.facebook.react.devsupport.BundleDownloader,java.lang.String,int,okhttp3.Headers,okio.BufferedSource,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
androidx.fragment.app.Fragment: int getEnterAnim()
com.facebook.hermes.intl.PlatformNumberFormatterICU: com.facebook.hermes.intl.IPlatformNumberFormatter configure(com.facebook.hermes.intl.ILocaleObject,java.lang.String,com.facebook.hermes.intl.IPlatformNumberFormatter$Style,com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign,com.facebook.hermes.intl.IPlatformNumberFormatter$Notation,com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updatePadding(int,int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager$Companion: java.lang.String getTAG()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.facebook.react.runtime.ReactHostImpl: ReactHostImpl(android.content.Context,com.facebook.react.runtime.ReactHostDelegate,com.facebook.react.fabric.ComponentFactory,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion: void access$runAfterHostResume(com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion,com.facebook.react.bridge.ReactContext,java.lang.Runnable)
com.facebook.react.views.image.ScaleTypeStartInside$Companion: ScaleTypeStartInside$Companion()
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void clearElementsHighlights(android.view.View)
com.facebook.react.uimanager.style.RadialGradient$Shape$Companion: RadialGradient$Shape$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.runtime.ReactSurfaceImpl: void clear$lambda$4(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.uimanager.BaseViewManager: void setBoxShadow(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createDestroyViewMountItem(int,int)
com.facebook.react.devsupport.DefaultDevLoadingViewImplementation: void showMessage(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setFinished(boolean)
com.facebook.react.views.view.ReactViewGroup: ReactViewGroup(android.content.Context)
com.facebook.react.devsupport.DoubleTapReloadRecognizer$Companion: DoubleTapReloadRecognizer$Companion()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.react.views.drawer.events.DrawerSlideEvent: java.lang.String getEventName()
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.rnbiometrics.ReactNativeBiometrics$2: void run()
androidx.core.view.WindowInsetsCompat$Impl20: boolean systemBarVisibilityEquals(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableEagerRootViewAttachment()
com.facebook.react.devsupport.DevSupportManagerBase$reloadJSFromServer$1: void onFailure(java.lang.Exception)
com.facebook.react.uimanager.LengthPercentage: java.lang.String toString()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
com.facebook.react.common.mapbuffer.WritableMapBuffer: com.facebook.react.common.mapbuffer.WritableMapBuffer put(int,double)
com.facebook.react.uimanager.ReanimatedUIImplementation: ReanimatedUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,com.facebook.react.uimanager.events.EventDispatcher,int)
com.swmansion.reanimated.NativeProxy: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder createNativeMethodsHolder(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,int,java.util.Map)
androidx.fragment.app.Fragment: boolean isVisible()
com.oblador.keychain.cipherStorage.CipherStorageFacebookConceal: com.oblador.keychain.cipherStorage.CipherStorage$EncryptionResult encrypt(java.lang.String,java.lang.String,java.lang.String,com.oblador.keychain.SecurityLevel)
androidx.biometric.R$dimen: R$dimen()
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] values()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.react.uimanager.IViewGroupManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: boolean isReverse()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.uimanager.JSTouchDispatcher: void onChildStartedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException$Companion: ReactNoCrashBridgeNotAllowedSoftException$Companion()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData access$initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc: boolean isBiometrySupported()
com.nozbe.watermelondb.DatabaseUtils: boolean arrayContains(java.lang.Object[],java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.facebook.react.uimanager.events.Event: Event(int,int)
com.facebook.react.common.SurfaceDelegate: void show()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.facebook.react.animated.ColorAnimatedNode: void onUpdateConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: boolean hasNext()
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean getResizingAllowedOverride()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BackgroundDrawable getBackground()
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.fresco.ReactNetworkImageRequest: ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap,com.facebook.react.modules.fresco.ImageCacheControl)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.biometric.BiometricFragment: void dismissFingerprintDialog()
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toBasicMap()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: void incrementRetries()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewCssBackground(com.facebook.react.uimanager.drawable.CSSBackgroundDrawable)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void prependUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutViewsRemoval(int[])
com.facebook.react.views.textinput.ReactTextInputShadowNode: boolean isVirtualAnchor()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.facebook.react.views.text.TextLayoutManager: float[] measurePreparedLayout(com.facebook.react.views.text.PreparedLayout,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.devsupport.FpsView: FpsView(com.facebook.react.bridge.ReactContext)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: DialogModule$FragmentManagerHelper(com.facebook.react.modules.dialog.DialogModule,androidx.fragment.app.FragmentManager)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData access$initHybrid()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void finishSharedAnimation(int)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
androidx.biometric.BiometricPrompt: void init(androidx.fragment.app.FragmentManager,androidx.biometric.BiometricViewModel,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap$lambda$6(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.interfaces.fabric.ReactSurface: void detach()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlags: boolean enableMainQueueModulesOnIOS()
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.facebook.react.views.progressbar.ProgressBarContainerView: java.lang.Integer getColor$ReactAndroid_release()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.modules.statusbar.StatusBarModule$setTranslucent$1: void runGuarded()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.biometric.BiometricViewModel: void setConfirmingDeviceCredential(boolean)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll(int)
com.facebook.react.modules.core.JavaTimerManager$Timer: JavaTimerManager$Timer(int,long,int,boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void dispatchViewUpdates(int,long,long)
com.facebook.react.devsupport.DevServerHelper$openDebugger$1: DevServerHelper$openDebugger$1(com.facebook.react.bridge.ReactContext,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.bridge.WritableNativeMap: void putLong(java.lang.String,long)
com.facebook.react.modules.network.ResponseUtil: void onDataReceived(com.facebook.react.bridge.ReactApplicationContext,int,java.lang.String)
com.facebook.react.ReactDelegate: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean isTurboModule(java.lang.String)
com.facebook.react.turbomodule.core.interfaces.TurboModuleWithJSIBindings: com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder getBindingsInstaller()
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion: TextInlineImageSpan$Companion()
com.facebook.react.modules.websocket.WebSocketModule$ContentHandler: void onMessage(okio.ByteString,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.PreparedLayoutTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.PreparedLayoutTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
com.oblador.keychain.decryptionHandler.DecryptionResultHandlerProvider: DecryptionResultHandlerProvider()
com.swmansion.reanimated.ReanimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.biometric.BiometricFragment$Api28Impl: void setTitle(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libfabricjni_so()
com.facebook.react.animated.NativeAnimatedModule$startListeningToAnimatedNodeValue$1: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.ReactInstanceManager$InspectorTargetDelegateImpl: ReactInstanceManager$InspectorTargetDelegateImpl(com.facebook.react.ReactInstanceManager)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.ReactRootView: boolean onHoverEvent(android.view.MotionEvent)
com.facebook.react.defaults.DefaultReactHost: com.facebook.react.ReactHost getDefaultReactHost(android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.util.List,kotlin.jvm.functions.Function1,com.facebook.react.runtime.BindingsInstaller)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
com.facebook.react.modules.permissions.PermissionsModule$Companion: PermissionsModule$Companion()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthMaxContentJNI(long)
com.facebook.react.devsupport.DevServerHelper: java.lang.String access$getInspectorDeviceUrl(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getWebsocketProxyURL()
com.facebook.react.views.textinput.ReactEditText: void updateCachedSpannable()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void publicDropView(android.view.View)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void scheduleAccessibilityEventSender(android.view.View)
com.facebook.react.uimanager.ViewManager: boolean experimental_isPrefetchingEnabled()
com.learnium.RNDeviceInfo.RNDeviceModule: RNDeviceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.views.textinput.ReactEditText: int getNativeEventCount()
com.oblador.keychain.cipherStorage.CipherStorage: void decrypt(com.oblador.keychain.decryptionHandler.DecryptionResultHandler,java.lang.String,byte[],byte[],com.oblador.keychain.SecurityLevel)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForViewManagerClass(java.lang.Class)
androidx.biometric.BiometricFragment: void sendSuccessToClient(androidx.biometric.BiometricPrompt$AuthenticationResult)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: void stop()
com.facebook.hermes.intl.NumberFormat: void setNumberFormatDigitOptions(java.util.Map,java.lang.Object,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
com.facebook.react.uimanager.events.PointerEventHelper: boolean isExitEvent(java.lang.String)
com.facebook.react.runtime.BridgelessAtomicRef: java.lang.Object get()
com.facebook.react.uimanager.util.ReactFindViewUtil: void addViewsListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener,java.util.Set)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.MemoryPressureListener createMemoryPressureListener(com.facebook.react.runtime.ReactInstance)
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.devsupport.interfaces.ErrorType getLastErrorType()
com.facebook.react.uimanager.RootView: void onChildStartedNativeGesture(android.view.MotionEvent)
com.facebook.react.devsupport.interfaces.DevSupportManager: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.CoreModulesPackage: void endProcessPackage()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetBoxSizingJNI(long)
com.facebook.react.modules.core.ReactChoreographer: void postFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,android.view.Choreographer$FrameCallback)
com.swmansion.reanimated.CopiedEvent: CopiedEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.fabric.StateWrapperImpl$Companion: StateWrapperImpl$Companion()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
androidx.biometric.KeyguardUtils: android.app.KeyguardManager getKeyguardManager(android.content.Context)
com.oblador.keychain.KeychainModule: void setGenericPasswordForOptions(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.DateTimeFormat: java.lang.String normalizeTimeZoneName(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager$Companion: boolean isTimerInRange(com.facebook.react.modules.core.JavaTimerManager$Timer,long)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal$ReactAndroid_release(int)
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderStyle getBorderStyle()
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtag: void reset()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: boolean supportsHover(int)
com.facebook.react.internal.featureflags.ReactNativeNewArchitectureFeatureFlags: boolean useTurboModules()
com.facebook.react.fabric.FabricUIManagerBinding: int[] getRelativeAncestorList(int,int)
com.facebook.react.devsupport.DebugOverlayController$Companion: boolean access$permissionCheck(com.facebook.react.devsupport.DebugOverlayController$Companion,android.content.Context)
com.facebook.react.uimanager.events.TouchEvent$Companion: com.facebook.react.uimanager.events.TouchEvent obtain(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.facebook.react.views.scroll.ReactScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.runtime.ReactInstance$Companion: com.facebook.react.runtime.JSTimerExecutor createJSTimerExecutor()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.nio.channels.FileChannel getChannel()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableEagerRootViewAttachment()
androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,android.view.View)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.ArrayList component5()
com.facebook.react.bridge.Dynamic: double asDouble()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostView: void onHostResume()
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole getAccessibilityRole()
com.facebook.react.uimanager.ReactShadowNode: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.views.modal.ReactModalHostView: boolean getHardwareAccelerated()
com.facebook.react.views.textinput.ReactEditText: java.util.List getDragAndDropFilter()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: com.facebook.react.devsupport.BundleDownloader$BundleInfo fromJSONString(java.lang.String)
com.oblador.vectoricons.R: R()
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType[] values()
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.fabric.FabricUIManager: int[] getRelativeAncestorList(int,int)
com.facebook.react.uimanager.events.PointerEventHelper: boolean supportsHover(android.view.MotionEvent)
com.imagepicker.ImagePickerModule: void launchImageLibrary(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.ReactRootView: ReactRootView(android.content.Context)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.biometric.BiometricFragment$Api28Impl: void authenticate(android.hardware.biometrics.BiometricPrompt,android.hardware.biometrics.BiometricPrompt$CryptoObject,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback)
com.facebook.react.ReactFragment$Builder: com.facebook.react.ReactFragment$Builder setLaunchOptions(android.os.Bundle)
com.facebook.react.HeadlessJsTaskService: int onStartCommand(android.content.Intent,int,int)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.oblador.vectoricons.VectorIconsPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewAtIndex$Companion: ViewAtIndex$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1: RedBoxDialogSurfaceDelegate$Companion$runAfterHostResume$1(java.lang.Runnable,com.facebook.react.bridge.ReactContext)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEventSynchronously(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.common.assets.ReactFontManager: ReactFontManager()
com.facebook.react.modules.core.JavaTimerManager: void setChoreographerIdleCallback()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$deleteView$1: void onAnimationRepeat(android.view.animation.Animation)
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: int getTotalTimeMs()
com.facebook.drawee.drawable.ForwardingDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.runtime.internal.bolts.Task: com.facebook.react.runtime.internal.bolts.Task continueWithTask$default(com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.Continuation,java.util.concurrent.Executor,int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
com.facebook.react.modules.image.ImageLoaderModule$queryCache$1: void doInBackgroundGuarded(java.lang.Void[])
com.facebook.react.bridge.ReadableMap: long getLong(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.fragment.app.Fragment: boolean isMenuVisible()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContextIfActiveOrWarn(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.hermes.intl.IPlatformDateTimeFormatter: java.lang.String fieldToString(java.text.AttributedCharacterIterator$Attribute,java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableNativeMap component8()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.hermes.intl.IPlatformNumberFormatter: java.text.AttributedCharacterIterator formatToParts(double)
androidx.biometric.BiometricPrompt$CryptoObject: BiometricPrompt$CryptoObject(android.security.identity.IdentityCredential)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.learnium.RNDeviceInfo.RNDeviceModule: void onCatalystInstanceDestroy()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.modules.network.ForwardingCookieHandler$Companion: ForwardingCookieHandler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableNativeCSSParsing()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationEnd(android.animation.Animator)
com.swmansion.rnscreens.Screen: boolean getSheetExpandsWhenScrolledToEdge()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.facebook.react.uimanager.UIImplementation: void clearJSResponder()
com.facebook.react.ReactActivityDelegate: ReactActivityDelegate(com.facebook.react.ReactActivity,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedAnimationForView(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot,int)
com.facebook.react.devsupport.ReleaseDevSupportManager: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
com.facebook.react.module.model.ReactModuleInfo: boolean needsEagerInit()
androidx.biometric.BiometricFragment: boolean isFingerprintDialogNeededForErrorHandling()
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion: DrawerOpenedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionStart()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$MapBufferEntry: com.facebook.react.common.mapbuffer.MapBuffer getMapBufferValue()
com.facebook.react.devsupport.DevInternalSettings: void setJSMinifyEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule: void userDrivenScrollEnded(int)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent$Companion: ReactContentSizeChangedEvent$Companion()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion: ReactSafeAreaViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getInspectorDeviceUrl()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: long access$readLongValue(com.facebook.react.common.mapbuffer.ReadableMapBuffer,int)
com.facebook.react.bridge.ReadableMapBuilder: void putNull(java.lang.String)
com.swmansion.reanimated.NodesManager: void enableSlowAnimations(boolean,int)
com.facebook.react.packagerconnection.FileIoHandler$1: FileIoHandler$1(com.facebook.react.packagerconnection.FileIoHandler)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion: DrawerStateChangedEvent$Companion()
com.facebook.hermes.intl.UnicodeExtensionKeys: java.lang.String CanonicalKeyToICUKey(java.lang.String)
com.facebook.react.uimanager.drawable.BackgroundDrawable: int getBackgroundColor()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setColumnGap(float)
com.facebook.react.modules.sound.SoundManagerModule$Companion: SoundManagerModule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
